openapi: 3.0.1
info:
  title: Selling Partner API for Authorization
  description: >-
    The Selling Partner API for Authorization helps developers manage
    authorizations and check the specific permissions associated with a given
    authorization.
  contact:
    name: Selling Partner API Developer Support
    url: https://sellercentral.amazon.com/gp/mws/contactus.html
  license:
    name: Apache License 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: v1
servers:
  - url: https://sellingpartnerapi-na.amazon.com
  - url: https://sellingpartnerapi-eu.amazon.com
  - url: https://sellingpartnerapi-fe.amazon.com
  - url: https://sellingpartnerapi-na.amazon.com/
tags:
  - name: authorization_authorization
    x-displayName: authorization
  - name: catalogItems_catalog
    x-displayName: catalog
  - name: finances_other
    x-displayName: other
  - name: listingsItems_listings
    x-displayName: listings
  - name: listingsRestrictions_listings
    x-displayName: listings
  - name: notifications_notifications
    x-displayName: notifications
  - name: orders_ordersV0
    x-displayName: ordersV0
  - name: orders_shipment
    x-displayName: shipment
  - name: productFees_fees
    x-displayName: fees
  - name: productPricing_productPricing
    x-displayName: productPricing
  - name: reports_reports
    x-displayName: reports
  - name: sales_sales
    x-displayName: sales
  - name: sellers_sellers
    x-displayName: sellers
  - name: services_service
    x-displayName: service
  - name: tokens_tokens
    x-displayName: tokens
paths:
  /authorization/v1/authorizationCode:
    get:
      tags:
        - authorization_authorization
      summary: >-
        Returns the Login with Amazon (LWA) authorization code for an existing
        Amazon MWS authorization.
      description: >-
        With the getAuthorizationCode operation, you can request a Login With
        Amazon (LWA) authorization code that will allow you to call a Selling
        Partner API on behalf of a seller who has already authorized you to call
        Amazon Marketplace Web Service (Amazon MWS). You specify a developer ID,
        an MWS auth token, and a seller ID. Taken together, these represent the
        Amazon MWS authorization that the seller previously granted you. The
        operation returns an LWA authorization code that can be exchanged for a
        refresh token and access token representing authorization to call the
        Selling Partner API on the seller's behalf. By using this API, sellers
        who have already authorized you for Amazon MWS do not need to
        re-authorize you for the Selling Partner API.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        For more information, see "Usage Plans and Rate Limits" in the Selling
        Partner API documentation.
      operationId: getAuthorizationCode
      parameters:
        - name: sellingPartnerId
          in: query
          description: >-
            The seller ID of the seller for whom you are requesting Selling
            Partner API authorization. This must be the seller ID of the seller
            who authorized your application on the Marketplace Appstore.
          required: true
          allowEmptyValue: false
          schema:
            type: string
        - name: developerId
          in: query
          description: >-
            Your developer ID. This must be one of the developer ID values that
            you provided when you registered your application in Developer
            Central.
          required: true
          allowEmptyValue: false
          schema:
            type: string
        - name: mwsAuthToken
          in: query
          description: >-
            The MWS Auth Token that was generated when the seller authorized
            your application on the Marketplace Appstore.
          required: true
          allowEmptyValue: false
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
            payload:
              example:
                authorizationCode: ANDMxqpCmqWHJeyzdbMH
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    authorizationCode: ANDMxqpCmqWHJeyzdbMH
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
            errors:
              example:
                - code: '1001'
                  message: Authorization code you provided is invalid.
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    mwsAuthToken:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid input.
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAuthorizationCodeResponse'
  /catalog/2022-04-01/items:
    get:
      summary: searchCatalogItems
      tags:
        - catalogItems_catalog
      description: >-
        Search for and return a list of Amazon catalog items and associated
        information either by identifier or by keywords.


        **Usage Plans:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 2 | 2 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may observe higher rate and burst values than those shown
        here. For more information, refer to the [Usage Plans and Rate Limits in
        the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: searchCatalogItems
      parameters:
        - name: identifiers
          in: query
          description: >-
            A comma-delimited list of product identifiers to search the Amazon
            catalog for. **Note:** Cannot be used with `keywords`.
          style: form
          explode: false
          schema:
            maxItems: 20
            type: array
            items:
              type: string
          example: shoes
        - name: identifiersType
          in: query
          description: >-
            Type of product identifiers to search the Amazon catalog for.
            **Note:** Required when `identifiers` are provided.
          schema:
            type: string
            enum:
              - ASIN
              - EAN
              - GTIN
              - ISBN
              - JAN
              - MINSAN
              - SKU
              - UPC
            x-docgen-enum-table-extension:
              - value: ASIN
                description: Amazon Standard Identification Number.
              - value: EAN
                description: European Article Number.
              - value: GTIN
                description: Global Trade Item Number.
              - value: ISBN
                description: International Standard Book Number.
              - value: JAN
                description: Japanese Article Number.
              - value: MINSAN
                description: Minsan Code.
              - value: SKU
                description: >-
                  Stock Keeping Unit, a seller-specified identifier for an
                  Amazon listing. **Note:** Must be accompanied by `sellerId`.
              - value: UPC
                description: Universal Product Code.
          example: ASIN
          x-docgen-enum-table-extension:
            - value: ASIN
              description: Amazon Standard Identification Number.
            - value: EAN
              description: European Article Number.
            - value: GTIN
              description: Global Trade Item Number.
            - value: ISBN
              description: International Standard Book Number.
            - value: JAN
              description: Japanese Article Number.
            - value: MINSAN
              description: Minsan Code.
            - value: SKU
              description: >-
                Stock Keeping Unit, a seller-specified identifier for an Amazon
                listing. **Note:** Must be accompanied by `sellerId`.
            - value: UPC
              description: Universal Product Code.
        - name: marketplaceIds
          in: query
          description: >-
            A comma-delimited list of Amazon marketplace identifiers for the
            request.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
          example: ATVPDKIKX0DER
        - name: includedData
          in: query
          description: >-
            A comma-delimited list of data sets to include in the response.
            Default: `summaries`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - attributes
                - dimensions
                - identifiers
                - images
                - productTypes
                - relationships
                - salesRanks
                - summaries
                - vendorDetails
              x-docgen-enum-table-extension:
                - value: attributes
                  description: >-
                    A JSON object containing structured item attribute data
                    keyed by attribute name. Catalog item attributes conform to
                    the related Amazon product type definitions available in the
                    Selling Partner API for Product Type Definitions.
                - value: dimensions
                  description: Dimensions for an item in the Amazon catalog.
                - value: identifiers
                  description: >-
                    Identifiers associated with the item in the Amazon catalog,
                    such as UPC and EAN identifiers.
                - value: images
                  description: Images for an item in the Amazon catalog.
                - value: productTypes
                  description: Product types associated with the Amazon catalog item.
                - value: relationships
                  description: >-
                    Relationship details of an Amazon catalog item (for example,
                    variations).
                - value: salesRanks
                  description: Sales ranks of an Amazon catalog item.
                - value: summaries
                  description: >-
                    Summary details of an Amazon catalog item. Refer to the
                    `attributes` of an Amazon catalog item for more details.
                - value: vendorDetails
                  description: >-
                    Vendor details associated with an Amazon catalog item.
                    Vendor details are available to vendors only.
            default: '["summaries"]'
          example: summaries
        - name: locale
          in: query
          description: >-
            Locale for retrieving localized summaries. Defaults to the primary
            locale of the marketplace.
          schema:
            type: string
          example: en_US
        - name: sellerId
          in: query
          description: >-
            A selling partner identifier, such as a seller account or vendor
            code. **Note:** Required when `identifiersType` is `SKU`.
          schema:
            type: string
        - name: keywords
          in: query
          description: >-
            A comma-delimited list of words to search the Amazon catalog for.
            **Note:** Cannot be used with `identifiers`.
          style: form
          explode: false
          schema:
            maxItems: 20
            type: array
            items:
              type: string
          example: shoes
        - name: brandNames
          in: query
          description: >-
            A comma-delimited list of brand names to limit the search for
            `keywords`-based queries. **Note:** Cannot be used with
            `identifiers`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: Beautiful Boats
        - name: classificationIds
          in: query
          description: >-
            A comma-delimited list of classification identifiers to limit the
            search for `keywords`-based queries. **Note:** Cannot be used with
            `identifiers`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: '12345678'
        - name: pageSize
          in: query
          description: Number of results to be returned per page.
          schema:
            maximum: 20
            type: integer
            default: 10
          example: 9
        - name: pageToken
          in: query
          description: >-
            A token to fetch a certain page when there are multiple pages worth
            of results.
          schema:
            type: string
          example: sdlkj234lkj234lksjdflkjwdflkjsfdlkj234234234234
        - name: keywordsLocale
          in: query
          description: >-
            The language of the keywords provided for `keywords`-based queries.
            Defaults to the primary locale of the marketplace. **Note:** Cannot
            be used with `identifiers`.
          schema:
            type: string
          example: en_US
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ItemSearchResults'
              example:
                numberOfResults: 1
                pagination:
                  nextToken: xsdflkj324lkjsdlkj3423klkjsdfkljlk2j34klj2l3k4jlksdjl234
                  previousToken: >-
                    ilkjsdflkj234lkjds234234lkjl234lksjdflkj234234lkjsfsdflkj333d
                refinements:
                  brands:
                    - numberOfResults: 1
                      brandName: SAMSUNG
                  classifications:
                    - numberOfResults: 1
                      displayName: Electronics
                      classificationId: '493964'
                items:
                  - asin: B07N4M94X4
                    attributes:
                      total_hdmi_ports:
                        - value: 4
                          marketplace_id: ATVPDKIKX0DER
                      resolution:
                        - language_tag: en_US
                          value: 4K
                          marketplace_id: ATVPDKIKX0DER
                      item_weight:
                        - unit: pounds
                          value: 107.6
                          marketplace_id: ATVPDKIKX0DER
                      product_subcategory:
                        - value: '50400120'
                          marketplace_id: ATVPDKIKX0DER
                      bullet_point:
                        - language_tag: en_US
                          value: >-
                            SMART TV WITH UNIVERSAL GUIDE: Simple on-screen
                            Guide is an easy way to find streaming content and
                            live TV shows
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: >-
                            100% COLOR VOLUME WITH QUANTUM DOTS: Powered by
                            Quantum dots, Samsung’s 4K QLED TV offers over a
                            billion shades of brilliant color and 100% color
                            volume for exceptional depth of detail that will
                            draw you in to the picture for the best 4K TV
                            experience
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: >-
                            QUANTUM PROCESSOR 4K: Intelligently powered
                            processor instantly upscales content to 4K for sharp
                            detail and refined color
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: >-
                            QUANTUM HDR 4X: 4K depth of detail with high dynamic
                            range powered by HDR10+ delivers the lightest to
                            darkest colors, scene by scene, for amazing picture
                            realism
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: >-
                            AMBIENT MODE: Customizes and complements your living
                            space by turning a blank screen of this big screen
                            TV into enticing visuals including décor, info,
                            photos and artwork
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: >-
                            SMART TV FEATURES: OneRemote to control all
                            compatible devices, Bixby voice command, on-screen
                            universal guide, SmartThings to control compatible
                            home appliances and devices, smart speaker
                            expandability with Alexa and Google Assistant
                            compatibility, and more
                          marketplace_id: ATVPDKIKX0DER
                      item_dimensions:
                        - width:
                            unit: inches
                            value: 72.4
                          length:
                            unit: inches
                            value: 2.4
                          height:
                            unit: inches
                            value: 41.4
                          marketplace_id: ATVPDKIKX0DER
                      brand:
                        - language_tag: en_US
                          value: SAMSUNG
                          marketplace_id: ATVPDKIKX0DER
                      control_method:
                        - value: voice
                          marketplace_id: ATVPDKIKX0DER
                      item_package_dimensions:
                        - length:
                            unit: centimeters
                            value: 26.67
                          width:
                            unit: centimeters
                            value: 121.92
                          height:
                            unit: centimeters
                            value: 203.2
                          marketplace_id: ATVPDKIKX0DER
                      image_aspect_ratio:
                        - language_tag: en_US
                          value: '16:9'
                          marketplace_id: ATVPDKIKX0DER
                      part_number:
                        - value: QN82Q60RAFXZA
                          marketplace_id: ATVPDKIKX0DER
                      includes_remote:
                        - value: true
                          marketplace_id: ATVPDKIKX0DER
                      style:
                        - language_tag: en_US
                          value: TV only
                          marketplace_id: ATVPDKIKX0DER
                      item_type_name:
                        - language_tag: en_US
                          value: TV
                          marketplace_id: ATVPDKIKX0DER
                      battery:
                        - cell_composition:
                            - value: alkaline
                          marketplace_id: ATVPDKIKX0DER
                      image_contrast_ratio:
                        - language_tag: en_US
                          value: QLED 4K
                          marketplace_id: ATVPDKIKX0DER
                      manufacturer:
                        - language_tag: en_US
                          value: Samsung
                          marketplace_id: ATVPDKIKX0DER
                      number_of_boxes:
                        - value: 1
                          marketplace_id: ATVPDKIKX0DER
                      total_usb_ports:
                        - value: 2
                          marketplace_id: ATVPDKIKX0DER
                      model_number:
                        - value: QN82Q60RAFXZA
                          marketplace_id: ATVPDKIKX0DER
                      supplier_declared_dg_hz_regulation:
                        - value: not_applicable
                          marketplace_id: ATVPDKIKX0DER
                      num_batteries:
                        - quantity: 2
                          type: aaa
                          marketplace_id: ATVPDKIKX0DER
                      california_proposition_65:
                        - compliance_type: on_product_combined_cancer_reproductive
                          marketplace_id: ATVPDKIKX0DER
                        - compliance_type: chemical
                          chemical_names:
                            - di_2_ethylhexyl_phthalate_dehp
                          marketplace_id: ATVPDKIKX0DER
                      display:
                        - resolution_maximum:
                            - unit: pixels
                              language_tag: en_US
                              value: 3840 x 2160
                          size:
                            - unit: inches
                              value: 82
                          type:
                            - language_tag: en_US
                              value: QLED
                          marketplace_id: ATVPDKIKX0DER
                      item_name:
                        - language_tag: en_US
                          value: >-
                            Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60
                            Series (2019) Ultra HD Smart TV with HDR and Alexa
                            Compatibility
                          marketplace_id: ATVPDKIKX0DER
                      list_price:
                        - currency: USD
                          value: 3799.99
                          marketplace_id: ATVPDKIKX0DER
                      batteries_required:
                        - value: false
                          marketplace_id: ATVPDKIKX0DER
                      includes_rechargable_battery:
                        - value: false
                          marketplace_id: ATVPDKIKX0DER
                      product_site_launch_date:
                        - value: '2019-03-11T08:00:01.000Z'
                          marketplace_id: ATVPDKIKX0DER
                      product_category:
                        - value: '50400100'
                          marketplace_id: ATVPDKIKX0DER
                      batteries_included:
                        - value: false
                          marketplace_id: ATVPDKIKX0DER
                      connectivity_technology:
                        - language_tag: en_US
                          value: Bluetooth
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: USB
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Wireless
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: HDMI
                          marketplace_id: ATVPDKIKX0DER
                      included_components:
                        - language_tag: en_US
                          value: QLED Standard Smart Remote
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Power Cable
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Stand
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Samsung Smart Control
                          marketplace_id: ATVPDKIKX0DER
                      specification_met:
                        - language_tag: en_US
                          value: ''
                          marketplace_id: ATVPDKIKX0DER
                      parental_control_technology:
                        - value: V-Chip
                          marketplace_id: ATVPDKIKX0DER
                      power_consumption:
                        - unit: watts
                          value: 120
                          marketplace_id: ATVPDKIKX0DER
                      cpsia_cautionary_statement:
                        - value: no_warning_applicable
                          marketplace_id: ATVPDKIKX0DER
                      item_type_keyword:
                        - value: qled-televisions
                          marketplace_id: ATVPDKIKX0DER
                      number_of_items:
                        - value: 1
                          marketplace_id: ATVPDKIKX0DER
                      warranty_description:
                        - language_tag: en_US
                          value: 1 year manufacturer
                          marketplace_id: ATVPDKIKX0DER
                      max_resolution:
                        - unit: pixels
                          value: 8.3
                          marketplace_id: ATVPDKIKX0DER
                      color:
                        - language_tag: en_US
                          value: Black
                          marketplace_id: ATVPDKIKX0DER
                      screen_surface_description:
                        - language_tag: en_US
                          value: Flat
                          marketplace_id: ATVPDKIKX0DER
                      item_package_weight:
                        - unit: kilograms
                          value: 62.142
                          marketplace_id: ATVPDKIKX0DER
                      speaker_type:
                        - language_tag: en_US
                          value: 2CH
                          marketplace_id: ATVPDKIKX0DER
                      supported_internet_services:
                        - language_tag: en_US
                          value: Amazon Instant Video
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: YouTube
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Netflix
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Hulu
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Browser
                          marketplace_id: ATVPDKIKX0DER
                      tuner_technology:
                        - language_tag: en_US
                          value: Analog Tuner
                          marketplace_id: ATVPDKIKX0DER
                      controller_type:
                        - language_tag: en_US
                          value: SmartThings
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Voice Control
                          marketplace_id: ATVPDKIKX0DER
                      special_feature:
                        - language_tag: en_US
                          value: >-
                            100% Color Volume with Quantum Dot; Quantum
                            Processor 4K; Ambient Mode; Quantum HDR 4X; Real
                            Game Enhancer
                          marketplace_id: ATVPDKIKX0DER
                      wireless_communication_technology:
                        - language_tag: en_US
                          value: Wi-Fi::Wi-Fi Direct::Bluetooth
                          marketplace_id: ATVPDKIKX0DER
                      model_year:
                        - value: 2019
                          marketplace_id: ATVPDKIKX0DER
                      power_source_type:
                        - language_tag: en_US
                          value: Corded Electric
                          marketplace_id: ATVPDKIKX0DER
                      street_date:
                        - value: '2019-03-21T00:00:01Z'
                          marketplace_id: ATVPDKIKX0DER
                      mounting_type:
                        - language_tag: en_US
                          value: Table Mount
                          marketplace_id: ATVPDKIKX0DER
                        - language_tag: en_US
                          value: Wall Mount
                          marketplace_id: ATVPDKIKX0DER
                      refresh_rate:
                        - unit: hertz
                          language_tag: en_US
                          value: '120'
                          marketplace_id: ATVPDKIKX0DER
                    dimensions:
                      - marketplaceId: ATVPDKIKX0DER
                        item:
                          height:
                            unit: inches
                            value: 41.4
                          length:
                            unit: inches
                            value: 2.4
                          weight:
                            unit: pounds
                            value: 107.6
                          width:
                            unit: inches
                            value: 72.4
                        package:
                          height:
                            unit: inches
                            value: 10.49999998929
                          length:
                            unit: inches
                            value: 79.9999999184
                          weight:
                            unit: kilograms
                            value: 62.142
                          width:
                            unit: inches
                            value: 47.99999995104
                    identifiers:
                      - marketplaceId: ATVPDKIKX0DER
                        identifiers:
                          - identifier: '0887276302195'
                            identifierType: EAN
                          - identifier: '00887276302195'
                            identifierType: GTIN
                          - identifier: '887276302195'
                            identifierType: UPC
                    images:
                      - marketplaceId: ATVPDKIKX0DER
                        images:
                          - variant: MAIN
                            link: >-
                              https://m.media-amazon.com/images/I/91uohwV+k3L.jpg
                            height: 1707
                            width: 2560
                          - variant: MAIN
                            link: >-
                              https://m.media-amazon.com/images/I/51DZzp3w3vL.jpg
                            height: 333
                            width: 500
                          - variant: PT01
                            link: >-
                              https://m.media-amazon.com/images/I/81w2rTVShlL.jpg
                            height: 2560
                            width: 2560
                          - variant: PT01
                            link: >-
                              https://m.media-amazon.com/images/I/41Px9eq9tkL.jpg
                            height: 500
                            width: 500
                          - variant: PT02
                            link: >-
                              https://m.media-amazon.com/images/I/51NTNhdhPyL.jpg
                            height: 375
                            width: 500
                          - variant: PT03
                            link: >-
                              https://m.media-amazon.com/images/I/51o4zpL+A3L.jpg
                            height: 375
                            width: 500
                          - variant: PT04
                            link: >-
                              https://m.media-amazon.com/images/I/71ux2k9GAZL.jpg
                            height: 1000
                            width: 1000
                          - variant: PT04
                            link: >-
                              https://m.media-amazon.com/images/I/61UUX63yw1L.jpg
                            height: 500
                            width: 500
                          - variant: PT05
                            link: >-
                              https://m.media-amazon.com/images/I/61LwHkljX-L.jpg
                            height: 1000
                            width: 1000
                          - variant: PT05
                            link: >-
                              https://m.media-amazon.com/images/I/51wJTQty3PL.jpg
                            height: 500
                            width: 500
                          - variant: PT06
                            link: >-
                              https://m.media-amazon.com/images/I/61uvoB4VvoL.jpg
                            height: 1000
                            width: 1000
                          - variant: PT06
                            link: >-
                              https://m.media-amazon.com/images/I/51ZexIO628L.jpg
                            height: 500
                            width: 500
                          - variant: PT07
                            link: >-
                              https://m.media-amazon.com/images/I/7121MGd2ncL.jpg
                            height: 1000
                            width: 1000
                          - variant: PT07
                            link: >-
                              https://m.media-amazon.com/images/I/61QK+JBMrGL.jpg
                            height: 500
                            width: 500
                          - variant: PT08
                            link: >-
                              https://m.media-amazon.com/images/I/61ECcGlG4IL.jpg
                            height: 1080
                            width: 1920
                          - variant: PT08
                            link: >-
                              https://m.media-amazon.com/images/I/31TxwfqvB5L.jpg
                            height: 281
                            width: 500
                          - variant: PT09
                            link: >-
                              https://m.media-amazon.com/images/I/41B5vgmp4IL.jpg
                            height: 375
                            width: 500
                          - variant: PT10
                            link: >-
                              https://m.media-amazon.com/images/I/51S5IY3AV0L.jpg
                            height: 375
                            width: 500
                          - variant: PT11
                            link: >-
                              https://m.media-amazon.com/images/I/41-6bmPtUlL.jpg
                            height: 375
                            width: 500
                          - variant: PT12
                            link: >-
                              https://m.media-amazon.com/images/I/41s9Q6gWJ7L.jpg
                            height: 448
                            width: 500
                          - variant: PT13
                            link: >-
                              https://m.media-amazon.com/images/I/519nG0mRzuL.jpg
                            height: 314
                            width: 500
                          - variant: PT14
                            link: >-
                              https://m.media-amazon.com/images/I/71sHhrGMc7L.jpg
                            height: 1097
                            width: 1500
                          - variant: PT14
                            link: >-
                              https://m.media-amazon.com/images/I/41CH6gKtU5L.jpg
                            height: 366
                            width: 500
                          - variant: PT15
                            link: >-
                              https://m.media-amazon.com/images/I/21-s7QYrTxL.jpg
                            height: 500
                            width: 175
                          - variant: EEGL
                            link: >-
                              https://m.media-amazon.com/images/I/61i3dsKD09L.jpg
                            height: 1375
                            width: 370
                          - variant: EEGL
                            link: >-
                              https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg
                            height: 500
                            width: 135
                          - variant: EGUS
                            link: >-
                              https://m.media-amazon.com/images/I/61i3dsKD09L.jpg
                            height: 1375
                            width: 370
                          - variant: EGUS
                            link: >-
                              https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg
                            height: 500
                            width: 135
                    productTypes:
                      - marketplaceId: ATVPDKIKX0DER
                        productType: TELEVISION
                    salesRanks:
                      - marketplaceId: ATVPDKIKX0DER
                        classificationRanks:
                          - classificationId: '21489946011'
                            title: QLED TVs
                            link: >-
                              http://www.amazon.com/gp/bestsellers/electronics/21489946011
                            rank: 113
                        displayGroupRanks:
                          - websiteDisplayGroup: ce_display_on_website
                            title: Electronics
                            link: http://www.amazon.com/gp/bestsellers/electronics
                            rank: 72855
                    summaries:
                      - marketplaceId: ATVPDKIKX0DER
                        brand: SAMSUNG
                        browseClassification:
                          displayName: QLED TVs
                          classificationId: '21489946011'
                        color: Black
                        itemClassification: BASE_PRODUCT
                        itemName: >-
                          Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series
                          (2019) Ultra HD Smart TV with HDR and Alexa
                          Compatibility
                        manufacturer: Samsung
                        modelNumber: QN82Q60RAFXZA
                        packageQuantity: 1
                        partNumber: QN82Q60RAFXZA
                        size: 82-Inch
                        style: TV only
                        websiteDisplayGroup: home_theater_display_on_website
                        websiteDisplayGroupName: Home Theater
                    relationships:
                      - marketplaceId: ATVPDKIKX0DER
                        relationships:
                          - type: VARIATION
                            parentAsins:
                              - B08J7TQ9FL
                            variationTheme:
                              attributes:
                                - color
                                - size
                              theme: SIZE_NAME/COLOR_NAME
                    vendorDetails:
                      - marketplaceId: ATVPDKIKX0DER
                        brandCode: SAMF9
                        manufacturerCode: SAMF9
                        manufacturerCodeParent: SAMF9
                        productCategory:
                          displayName: Televisions
                          value: '50400100'
                        productGroup: Home Entertainment
                        productSubcategory:
                          displayName: Plasma TVs
                          value: '50400120'
                        replenishmentCategory: OBSOLETE
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    keywords:
                      value:
                        - samsung
                        - tv
                    marketplaceIds:
                      value:
                        - ATVPDKIKX0DER
                    includedData:
                      value:
                        - dimensions
                        - identifiers
                        - images
                        - productTypes
                        - relationships
                        - salesRanks
                        - summaries
                        - vendorDetails
                response:
                  numberOfResults: 1
                  pagination:
                    nextToken: xsdflkj324lkjsdlkj3423klkjsdfkljlk2j34klj2l3k4jlksdjl234
                    previousToken: >-
                      ilkjsdflkj234lkjds234234lkjl234lksjdflkj234234lkjsfsdflkj333d
                  refinements:
                    brands:
                      - numberOfResults: 1
                        brandName: SAMSUNG
                    classifications:
                      - numberOfResults: 1
                        displayName: Electronics
                        classificationId: '493964'
                  items:
                    - asin: B07N4M94X4
                      dimensions:
                        - marketplaceId: ATVPDKIKX0DER
                          item:
                            height:
                              unit: inches
                              value: 41.4
                            length:
                              unit: inches
                              value: 2.4
                            weight:
                              unit: pounds
                              value: 107.6
                            width:
                              unit: inches
                              value: 72.4
                          package:
                            height:
                              unit: inches
                              value: 10.49999998929
                            length:
                              unit: inches
                              value: 79.9999999184
                            weight:
                              unit: kilograms
                              value: 62.142
                            width:
                              unit: inches
                              value: 47.99999995104
                      identifiers:
                        - marketplaceId: ATVPDKIKX0DER
                          identifiers:
                            - identifier: '0887276302195'
                              identifierType: EAN
                            - identifier: '00887276302195'
                              identifierType: GTIN
                            - identifier: '887276302195'
                              identifierType: UPC
                      images:
                        - marketplaceId: ATVPDKIKX0DER
                          images:
                            - variant: MAIN
                              link: >-
                                https://m.media-amazon.com/images/I/91uohwV+k3L.jpg
                              height: 1707
                              width: 2560
                            - variant: MAIN
                              link: >-
                                https://m.media-amazon.com/images/I/51DZzp3w3vL.jpg
                              height: 333
                              width: 500
                            - variant: PT01
                              link: >-
                                https://m.media-amazon.com/images/I/81w2rTVShlL.jpg
                              height: 2560
                              width: 2560
                            - variant: PT01
                              link: >-
                                https://m.media-amazon.com/images/I/41Px9eq9tkL.jpg
                              height: 500
                              width: 500
                            - variant: PT02
                              link: >-
                                https://m.media-amazon.com/images/I/51NTNhdhPyL.jpg
                              height: 375
                              width: 500
                            - variant: PT03
                              link: >-
                                https://m.media-amazon.com/images/I/51o4zpL+A3L.jpg
                              height: 375
                              width: 500
                            - variant: PT04
                              link: >-
                                https://m.media-amazon.com/images/I/71ux2k9GAZL.jpg
                              height: 1000
                              width: 1000
                            - variant: PT04
                              link: >-
                                https://m.media-amazon.com/images/I/61UUX63yw1L.jpg
                              height: 500
                              width: 500
                            - variant: PT05
                              link: >-
                                https://m.media-amazon.com/images/I/61LwHkljX-L.jpg
                              height: 1000
                              width: 1000
                            - variant: PT05
                              link: >-
                                https://m.media-amazon.com/images/I/51wJTQty3PL.jpg
                              height: 500
                              width: 500
                            - variant: PT06
                              link: >-
                                https://m.media-amazon.com/images/I/61uvoB4VvoL.jpg
                              height: 1000
                              width: 1000
                            - variant: PT06
                              link: >-
                                https://m.media-amazon.com/images/I/51ZexIO628L.jpg
                              height: 500
                              width: 500
                            - variant: PT07
                              link: >-
                                https://m.media-amazon.com/images/I/7121MGd2ncL.jpg
                              height: 1000
                              width: 1000
                            - variant: PT07
                              link: >-
                                https://m.media-amazon.com/images/I/61QK+JBMrGL.jpg
                              height: 500
                              width: 500
                            - variant: PT08
                              link: >-
                                https://m.media-amazon.com/images/I/61ECcGlG4IL.jpg
                              height: 1080
                              width: 1920
                            - variant: PT08
                              link: >-
                                https://m.media-amazon.com/images/I/31TxwfqvB5L.jpg
                              height: 281
                              width: 500
                            - variant: PT09
                              link: >-
                                https://m.media-amazon.com/images/I/41B5vgmp4IL.jpg
                              height: 375
                              width: 500
                            - variant: PT10
                              link: >-
                                https://m.media-amazon.com/images/I/51S5IY3AV0L.jpg
                              height: 375
                              width: 500
                            - variant: PT11
                              link: >-
                                https://m.media-amazon.com/images/I/41-6bmPtUlL.jpg
                              height: 375
                              width: 500
                            - variant: PT12
                              link: >-
                                https://m.media-amazon.com/images/I/41s9Q6gWJ7L.jpg
                              height: 448
                              width: 500
                            - variant: PT13
                              link: >-
                                https://m.media-amazon.com/images/I/519nG0mRzuL.jpg
                              height: 314
                              width: 500
                            - variant: PT14
                              link: >-
                                https://m.media-amazon.com/images/I/71sHhrGMc7L.jpg
                              height: 1097
                              width: 1500
                            - variant: PT14
                              link: >-
                                https://m.media-amazon.com/images/I/41CH6gKtU5L.jpg
                              height: 366
                              width: 500
                            - variant: PT15
                              link: >-
                                https://m.media-amazon.com/images/I/21-s7QYrTxL.jpg
                              height: 500
                              width: 175
                            - variant: EEGL
                              link: >-
                                https://m.media-amazon.com/images/I/61i3dsKD09L.jpg
                              height: 1375
                              width: 370
                            - variant: EEGL
                              link: >-
                                https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg
                              height: 500
                              width: 135
                            - variant: EGUS
                              link: >-
                                https://m.media-amazon.com/images/I/61i3dsKD09L.jpg
                              height: 1375
                              width: 370
                            - variant: EGUS
                              link: >-
                                https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg
                              height: 500
                              width: 135
                      productTypes:
                        - marketplaceId: ATVPDKIKX0DER
                          productType: TELEVISION
                      salesRanks:
                        - marketplaceId: ATVPDKIKX0DER
                          classificationRanks:
                            - classificationId: '21489946011'
                              title: QLED TVs
                              link: >-
                                http://www.amazon.com/gp/bestsellers/electronics/21489946011
                              rank: 113
                          displayGroupRanks:
                            - websiteDisplayGroup: ce_display_on_website
                              title: Electronics
                              link: http://www.amazon.com/gp/bestsellers/electronics
                              rank: 72855
                      summaries:
                        - marketplaceId: ATVPDKIKX0DER
                          brand: SAMSUNG
                          browseClassification:
                            displayName: QLED TVs
                            classificationId: '21489946011'
                          color: Black
                          itemClassification: BASE_PRODUCT
                          itemName: >-
                            Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60
                            Series (2019) Ultra HD Smart TV with HDR and Alexa
                            Compatibility
                          manufacturer: Samsung
                          modelNumber: QN82Q60RAFXZA
                          packageQuantity: 1
                          partNumber: QN82Q60RAFXZA
                          size: 82-Inch
                          style: TV only
                          websiteDisplayGroup: home_theater_display_on_website
                          websiteDisplayGroupName: Home Theater
                      relationships:
                        - marketplaceId: ATVPDKIKX0DER
                          relationships:
                            - type: VARIATION
                              parentAsins:
                                - B08J7TQ9FL
                              variationTheme:
                                attributes:
                                  - color
                                  - size
                                theme: SIZE_NAME/COLOR_NAME
                      vendorDetails:
                        - marketplaceId: ATVPDKIKX0DER
                          brandCode: SAMF9
                          manufacturerCode: SAMF9
                          manufacturerCodeParent: SAMF9
                          productCategory:
                            displayName: Televisions
                            value: '50400100'
                          productGroup: Home Entertainment
                          productSubcategory:
                            displayName: Plasma TVs
                            value: '50400120'
                          replenishmentCategory: OBSOLETE
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
  /catalog/2022-04-01/items/{asin}:
    get:
      tags:
        - catalogItems_catalog
      description: >-
        Retrieves details for an item in the Amazon catalog.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 2 | 2 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may observe higher rate and burst values than those shown
        here. For more information, refer to the [Usage Plans and Rate Limits in
        the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getCatalogItem
      parameters:
        - name: asin
          in: path
          description: The Amazon Standard Identification Number (ASIN) of the item.
          required: true
          schema:
            type: string
        - name: marketplaceIds
          in: query
          description: >-
            A comma-delimited list of Amazon marketplace identifiers. Data sets
            in the response contain data only for the specified marketplaces.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: ATVPDKIKX0DER
        - name: includedData
          in: query
          description: >-
            A comma-delimited list of data sets to include in the response.
            Default: `summaries`.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - attributes
                - dimensions
                - identifiers
                - images
                - productTypes
                - relationships
                - salesRanks
                - summaries
                - vendorDetails
              x-docgen-enum-table-extension:
                - value: attributes
                  description: >-
                    A JSON object containing structured item attribute data
                    keyed by attribute name. Catalog item attributes conform to
                    the related Amazon product type definitions available in the
                    Selling Partner API for Product Type Definitions.
                - value: dimensions
                  description: Dimensions for an item in the Amazon catalog.
                - value: identifiers
                  description: >-
                    Identifiers associated with the item in the Amazon catalog,
                    such as UPC and EAN identifiers.
                - value: images
                  description: Images for an item in the Amazon catalog.
                - value: productTypes
                  description: Product types associated with the Amazon catalog item.
                - value: salesRanks
                  description: Sales ranks of an Amazon catalog item.
                - value: summaries
                  description: >-
                    Summary details of an Amazon catalog item. Refer to the
                    "attributes" of an Amazon catalog item for more details.
                - value: relationships
                  description: >-
                    Relationship details of an Amazon catalog item (for example,
                    variations).
                - value: vendorDetails
                  description: >-
                    Vendor details associated with an Amazon catalog item.
                    Vendor details are available to vendors only.
            default: '["summaries"]'
          example: summaries
        - name: locale
          in: query
          description: >-
            Locale for retrieving localized summaries. Defaults to the primary
            locale of the marketplace.
          schema:
            type: string
          example: en_US
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_Item'
              example:
                asin: B07N4M94X4
                attributes:
                  total_hdmi_ports:
                    - value: 4
                      marketplace_id: ATVPDKIKX0DER
                  resolution:
                    - language_tag: en_US
                      value: 4K
                      marketplace_id: ATVPDKIKX0DER
                  item_weight:
                    - unit: pounds
                      value: 107.6
                      marketplace_id: ATVPDKIKX0DER
                  product_subcategory:
                    - value: '50400120'
                      marketplace_id: ATVPDKIKX0DER
                  bullet_point:
                    - language_tag: en_US
                      value: >-
                        SMART TV WITH UNIVERSAL GUIDE: Simple on-screen Guide is
                        an easy way to find streaming content and live TV shows
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: >-
                        100% COLOR VOLUME WITH QUANTUM DOTS: Powered by Quantum
                        dots, Samsung’s 4K QLED TV offers over a billion shades
                        of brilliant color and 100% color volume for exceptional
                        depth of detail that will draw you in to the picture for
                        the best 4K TV experience
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: >-
                        QUANTUM PROCESSOR 4K: Intelligently powered processor
                        instantly upscales content to 4K for sharp detail and
                        refined color
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: >-
                        QUANTUM HDR 4X: 4K depth of detail with high dynamic
                        range powered by HDR10+ delivers the lightest to darkest
                        colors, scene by scene, for amazing picture realism
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: >-
                        AMBIENT MODE: Customizes and complements your living
                        space by turning a blank screen of this big screen TV
                        into enticing visuals including décor, info, photos and
                        artwork
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: >-
                        SMART TV FEATURES: OneRemote to control all compatible
                        devices, Bixby voice command, on-screen universal guide,
                        SmartThings to control compatible home appliances and
                        devices, smart speaker expandability with Alexa and
                        Google Assistant compatibility, and more
                      marketplace_id: ATVPDKIKX0DER
                  item_dimensions:
                    - width:
                        unit: inches
                        value: 72.4
                      length:
                        unit: inches
                        value: 2.4
                      height:
                        unit: inches
                        value: 41.4
                      marketplace_id: ATVPDKIKX0DER
                  brand:
                    - language_tag: en_US
                      value: SAMSUNG
                      marketplace_id: ATVPDKIKX0DER
                  control_method:
                    - value: voice
                      marketplace_id: ATVPDKIKX0DER
                  item_package_dimensions:
                    - length:
                        unit: centimeters
                        value: 26.67
                      width:
                        unit: centimeters
                        value: 121.92
                      height:
                        unit: centimeters
                        value: 203.2
                      marketplace_id: ATVPDKIKX0DER
                  image_aspect_ratio:
                    - language_tag: en_US
                      value: '16:9'
                      marketplace_id: ATVPDKIKX0DER
                  part_number:
                    - value: QN82Q60RAFXZA
                      marketplace_id: ATVPDKIKX0DER
                  includes_remote:
                    - value: true
                      marketplace_id: ATVPDKIKX0DER
                  style:
                    - language_tag: en_US
                      value: TV only
                      marketplace_id: ATVPDKIKX0DER
                  item_type_name:
                    - language_tag: en_US
                      value: TV
                      marketplace_id: ATVPDKIKX0DER
                  battery:
                    - cell_composition:
                        - value: alkaline
                      marketplace_id: ATVPDKIKX0DER
                  image_contrast_ratio:
                    - language_tag: en_US
                      value: QLED 4K
                      marketplace_id: ATVPDKIKX0DER
                  manufacturer:
                    - language_tag: en_US
                      value: Samsung
                      marketplace_id: ATVPDKIKX0DER
                  number_of_boxes:
                    - value: 1
                      marketplace_id: ATVPDKIKX0DER
                  total_usb_ports:
                    - value: 2
                      marketplace_id: ATVPDKIKX0DER
                  model_number:
                    - value: QN82Q60RAFXZA
                      marketplace_id: ATVPDKIKX0DER
                  supplier_declared_dg_hz_regulation:
                    - value: not_applicable
                      marketplace_id: ATVPDKIKX0DER
                  num_batteries:
                    - quantity: 2
                      type: aaa
                      marketplace_id: ATVPDKIKX0DER
                  california_proposition_65:
                    - compliance_type: on_product_combined_cancer_reproductive
                      marketplace_id: ATVPDKIKX0DER
                    - compliance_type: chemical
                      chemical_names:
                        - di_2_ethylhexyl_phthalate_dehp
                      marketplace_id: ATVPDKIKX0DER
                  display:
                    - resolution_maximum:
                        - unit: pixels
                          language_tag: en_US
                          value: 3840 x 2160
                      size:
                        - unit: inches
                          value: 82
                      type:
                        - language_tag: en_US
                          value: QLED
                      marketplace_id: ATVPDKIKX0DER
                  item_name:
                    - language_tag: en_US
                      value: >-
                        Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series
                        (2019) Ultra HD Smart TV with HDR and Alexa
                        Compatibility
                      marketplace_id: ATVPDKIKX0DER
                  list_price:
                    - currency: USD
                      value: 3799.99
                      marketplace_id: ATVPDKIKX0DER
                  batteries_required:
                    - value: false
                      marketplace_id: ATVPDKIKX0DER
                  includes_rechargable_battery:
                    - value: false
                      marketplace_id: ATVPDKIKX0DER
                  product_site_launch_date:
                    - value: '2019-03-11T08:00:01.000Z'
                      marketplace_id: ATVPDKIKX0DER
                  product_category:
                    - value: '50400100'
                      marketplace_id: ATVPDKIKX0DER
                  batteries_included:
                    - value: false
                      marketplace_id: ATVPDKIKX0DER
                  connectivity_technology:
                    - language_tag: en_US
                      value: Bluetooth
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: USB
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Wireless
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: HDMI
                      marketplace_id: ATVPDKIKX0DER
                  included_components:
                    - language_tag: en_US
                      value: QLED Standard Smart Remote
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Power Cable
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Stand
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Samsung Smart Control
                      marketplace_id: ATVPDKIKX0DER
                  specification_met:
                    - language_tag: en_US
                      value: ''
                      marketplace_id: ATVPDKIKX0DER
                  parental_control_technology:
                    - value: V-Chip
                      marketplace_id: ATVPDKIKX0DER
                  power_consumption:
                    - unit: watts
                      value: 120
                      marketplace_id: ATVPDKIKX0DER
                  cpsia_cautionary_statement:
                    - value: no_warning_applicable
                      marketplace_id: ATVPDKIKX0DER
                  item_type_keyword:
                    - value: qled-televisions
                      marketplace_id: ATVPDKIKX0DER
                  number_of_items:
                    - value: 1
                      marketplace_id: ATVPDKIKX0DER
                  warranty_description:
                    - language_tag: en_US
                      value: 1 year manufacturer
                      marketplace_id: ATVPDKIKX0DER
                  max_resolution:
                    - unit: pixels
                      value: 8.3
                      marketplace_id: ATVPDKIKX0DER
                  color:
                    - language_tag: en_US
                      value: Black
                      marketplace_id: ATVPDKIKX0DER
                  screen_surface_description:
                    - language_tag: en_US
                      value: Flat
                      marketplace_id: ATVPDKIKX0DER
                  item_package_weight:
                    - unit: kilograms
                      value: 62.142
                      marketplace_id: ATVPDKIKX0DER
                  speaker_type:
                    - language_tag: en_US
                      value: 2CH
                      marketplace_id: ATVPDKIKX0DER
                  supported_internet_services:
                    - language_tag: en_US
                      value: Amazon Instant Video
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: YouTube
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Netflix
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Hulu
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Browser
                      marketplace_id: ATVPDKIKX0DER
                  tuner_technology:
                    - language_tag: en_US
                      value: Analog Tuner
                      marketplace_id: ATVPDKIKX0DER
                  controller_type:
                    - language_tag: en_US
                      value: SmartThings
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Voice Control
                      marketplace_id: ATVPDKIKX0DER
                  special_feature:
                    - language_tag: en_US
                      value: >-
                        100% Color Volume with Quantum Dot; Quantum Processor
                        4K; Ambient Mode; Quantum HDR 4X; Real Game Enhancer
                      marketplace_id: ATVPDKIKX0DER
                  wireless_communication_technology:
                    - language_tag: en_US
                      value: Wi-Fi::Wi-Fi Direct::Bluetooth
                      marketplace_id: ATVPDKIKX0DER
                  model_year:
                    - value: 2019
                      marketplace_id: ATVPDKIKX0DER
                  power_source_type:
                    - language_tag: en_US
                      value: Corded Electric
                      marketplace_id: ATVPDKIKX0DER
                  street_date:
                    - value: '2019-03-21T00:00:01Z'
                      marketplace_id: ATVPDKIKX0DER
                  mounting_type:
                    - language_tag: en_US
                      value: Table Mount
                      marketplace_id: ATVPDKIKX0DER
                    - language_tag: en_US
                      value: Wall Mount
                      marketplace_id: ATVPDKIKX0DER
                  refresh_rate:
                    - unit: hertz
                      language_tag: en_US
                      value: '120'
                      marketplace_id: ATVPDKIKX0DER
                dimensions:
                  - marketplaceId: ATVPDKIKX0DER
                    item:
                      height:
                        unit: inches
                        value: 41.4
                      length:
                        unit: inches
                        value: 2.4
                      weight:
                        unit: pounds
                        value: 107.6
                      width:
                        unit: inches
                        value: 72.4
                    package:
                      height:
                        unit: inches
                        value: 10.49999998929
                      length:
                        unit: inches
                        value: 79.9999999184
                      weight:
                        unit: kilograms
                        value: 62.142
                      width:
                        unit: inches
                        value: 47.99999995104
                identifiers:
                  - marketplaceId: ATVPDKIKX0DER
                    identifiers:
                      - identifier: '0887276302195'
                        identifierType: EAN
                      - identifier: '00887276302195'
                        identifierType: GTIN
                      - identifier: '887276302195'
                        identifierType: UPC
                images:
                  - marketplaceId: ATVPDKIKX0DER
                    images:
                      - variant: MAIN
                        link: https://m.media-amazon.com/images/I/91uohwV+k3L.jpg
                        height: 1707
                        width: 2560
                      - variant: MAIN
                        link: https://m.media-amazon.com/images/I/51DZzp3w3vL.jpg
                        height: 333
                        width: 500
                      - variant: PT01
                        link: https://m.media-amazon.com/images/I/81w2rTVShlL.jpg
                        height: 2560
                        width: 2560
                      - variant: PT01
                        link: https://m.media-amazon.com/images/I/41Px9eq9tkL.jpg
                        height: 500
                        width: 500
                      - variant: PT02
                        link: https://m.media-amazon.com/images/I/51NTNhdhPyL.jpg
                        height: 375
                        width: 500
                      - variant: PT03
                        link: https://m.media-amazon.com/images/I/51o4zpL+A3L.jpg
                        height: 375
                        width: 500
                      - variant: PT04
                        link: https://m.media-amazon.com/images/I/71ux2k9GAZL.jpg
                        height: 1000
                        width: 1000
                      - variant: PT04
                        link: https://m.media-amazon.com/images/I/61UUX63yw1L.jpg
                        height: 500
                        width: 500
                      - variant: PT05
                        link: https://m.media-amazon.com/images/I/61LwHkljX-L.jpg
                        height: 1000
                        width: 1000
                      - variant: PT05
                        link: https://m.media-amazon.com/images/I/51wJTQty3PL.jpg
                        height: 500
                        width: 500
                      - variant: PT06
                        link: https://m.media-amazon.com/images/I/61uvoB4VvoL.jpg
                        height: 1000
                        width: 1000
                      - variant: PT06
                        link: https://m.media-amazon.com/images/I/51ZexIO628L.jpg
                        height: 500
                        width: 500
                      - variant: PT07
                        link: https://m.media-amazon.com/images/I/7121MGd2ncL.jpg
                        height: 1000
                        width: 1000
                      - variant: PT07
                        link: https://m.media-amazon.com/images/I/61QK+JBMrGL.jpg
                        height: 500
                        width: 500
                      - variant: PT08
                        link: https://m.media-amazon.com/images/I/61ECcGlG4IL.jpg
                        height: 1080
                        width: 1920
                      - variant: PT08
                        link: https://m.media-amazon.com/images/I/31TxwfqvB5L.jpg
                        height: 281
                        width: 500
                      - variant: PT09
                        link: https://m.media-amazon.com/images/I/41B5vgmp4IL.jpg
                        height: 375
                        width: 500
                      - variant: PT10
                        link: https://m.media-amazon.com/images/I/51S5IY3AV0L.jpg
                        height: 375
                        width: 500
                      - variant: PT11
                        link: https://m.media-amazon.com/images/I/41-6bmPtUlL.jpg
                        height: 375
                        width: 500
                      - variant: PT12
                        link: https://m.media-amazon.com/images/I/41s9Q6gWJ7L.jpg
                        height: 448
                        width: 500
                      - variant: PT13
                        link: https://m.media-amazon.com/images/I/519nG0mRzuL.jpg
                        height: 314
                        width: 500
                      - variant: PT14
                        link: https://m.media-amazon.com/images/I/71sHhrGMc7L.jpg
                        height: 1097
                        width: 1500
                      - variant: PT14
                        link: https://m.media-amazon.com/images/I/41CH6gKtU5L.jpg
                        height: 366
                        width: 500
                      - variant: PT15
                        link: https://m.media-amazon.com/images/I/21-s7QYrTxL.jpg
                        height: 500
                        width: 175
                      - variant: EEGL
                        link: https://m.media-amazon.com/images/I/61i3dsKD09L.jpg
                        height: 1375
                        width: 370
                      - variant: EEGL
                        link: https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg
                        height: 500
                        width: 135
                      - variant: EGUS
                        link: https://m.media-amazon.com/images/I/61i3dsKD09L.jpg
                        height: 1375
                        width: 370
                      - variant: EGUS
                        link: https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg
                        height: 500
                        width: 135
                productTypes:
                  - marketplaceId: ATVPDKIKX0DER
                    productType: TELEVISION
                salesRanks:
                  - marketplaceId: ATVPDKIKX0DER
                    classificationRanks:
                      - classificationId: '21489946011'
                        title: QLED TVs
                        link: >-
                          http://www.amazon.com/gp/bestsellers/electronics/21489946011
                        rank: 113
                    displayGroupRanks:
                      - websiteDisplayGroup: ce_display_on_website
                        title: Electronics
                        link: http://www.amazon.com/gp/bestsellers/electronics
                        rank: 72855
                summaries:
                  - marketplaceId: ATVPDKIKX0DER
                    brand: SAMSUNG
                    browseClassification:
                      displayName: QLED TVs
                      classificationId: '21489946011'
                    color: Black
                    itemClassification: BASE_PRODUCT
                    itemName: >-
                      Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series
                      (2019) Ultra HD Smart TV with HDR and Alexa Compatibility
                    manufacturer: Samsung
                    modelNumber: QN82Q60RAFXZA
                    packageQuantity: 1
                    partNumber: QN82Q60RAFXZA
                    size: 82-Inch
                    style: TV only
                    websiteDisplayGroup: home_theater_display_on_website
                    websiteDisplayGroupName: Home Theater
                relationships:
                  - marketplaceId: ATVPDKIKX0DER
                    relationships:
                      - type: VARIATION
                        parentAsins:
                          - B08J7TQ9FL
                        variationTheme:
                          attributes:
                            - color
                            - size
                          theme: SIZE_NAME/COLOR_NAME
                vendorDetails:
                  - marketplaceId: ATVPDKIKX0DER
                    brandCode: SAMF9
                    manufacturerCode: SAMF9
                    manufacturerCodeParent: SAMF9
                    productCategory:
                      displayName: Televisions
                      value: '50400100'
                    productGroup: Home Entertainment
                    productSubcategory:
                      displayName: Plasma TVs
                      value: '50400120'
                    replenishmentCategory: OBSOLETE
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    asin:
                      value: B07N4M94X4
                    marketplaceIds:
                      value:
                        - ATVPDKIKX0DER
                    includedData:
                      value:
                        - dimensions
                        - identifiers
                        - images
                        - productTypes
                        - relationships
                        - salesRanks
                        - summaries
                        - vendorDetails
                response:
                  asin: B07N4M94X4
                  dimensions:
                    - marketplaceId: ATVPDKIKX0DER
                      item:
                        height:
                          unit: inches
                          value: 41.4
                        length:
                          unit: inches
                          value: 2.4
                        weight:
                          unit: pounds
                          value: 107.6
                        width:
                          unit: inches
                          value: 72.4
                      package:
                        height:
                          unit: inches
                          value: 10.49999998929
                        length:
                          unit: inches
                          value: 79.9999999184
                        weight:
                          unit: kilograms
                          value: 62.142
                        width:
                          unit: inches
                          value: 47.99999995104
                  identifiers:
                    - marketplaceId: ATVPDKIKX0DER
                      identifiers:
                        - identifier: '0887276302195'
                          identifierType: EAN
                        - identifier: '00887276302195'
                          identifierType: GTIN
                        - identifier: '887276302195'
                          identifierType: UPC
                  images:
                    - marketplaceId: ATVPDKIKX0DER
                      images:
                        - variant: MAIN
                          link: https://m.media-amazon.com/images/I/91uohwV+k3L.jpg
                          height: 1707
                          width: 2560
                        - variant: MAIN
                          link: https://m.media-amazon.com/images/I/51DZzp3w3vL.jpg
                          height: 333
                          width: 500
                        - variant: PT01
                          link: https://m.media-amazon.com/images/I/81w2rTVShlL.jpg
                          height: 2560
                          width: 2560
                        - variant: PT01
                          link: https://m.media-amazon.com/images/I/41Px9eq9tkL.jpg
                          height: 500
                          width: 500
                        - variant: PT02
                          link: https://m.media-amazon.com/images/I/51NTNhdhPyL.jpg
                          height: 375
                          width: 500
                        - variant: PT03
                          link: https://m.media-amazon.com/images/I/51o4zpL+A3L.jpg
                          height: 375
                          width: 500
                        - variant: PT04
                          link: https://m.media-amazon.com/images/I/71ux2k9GAZL.jpg
                          height: 1000
                          width: 1000
                        - variant: PT04
                          link: https://m.media-amazon.com/images/I/61UUX63yw1L.jpg
                          height: 500
                          width: 500
                        - variant: PT05
                          link: https://m.media-amazon.com/images/I/61LwHkljX-L.jpg
                          height: 1000
                          width: 1000
                        - variant: PT05
                          link: https://m.media-amazon.com/images/I/51wJTQty3PL.jpg
                          height: 500
                          width: 500
                        - variant: PT06
                          link: https://m.media-amazon.com/images/I/61uvoB4VvoL.jpg
                          height: 1000
                          width: 1000
                        - variant: PT06
                          link: https://m.media-amazon.com/images/I/51ZexIO628L.jpg
                          height: 500
                          width: 500
                        - variant: PT07
                          link: https://m.media-amazon.com/images/I/7121MGd2ncL.jpg
                          height: 1000
                          width: 1000
                        - variant: PT07
                          link: https://m.media-amazon.com/images/I/61QK+JBMrGL.jpg
                          height: 500
                          width: 500
                        - variant: PT08
                          link: https://m.media-amazon.com/images/I/61ECcGlG4IL.jpg
                          height: 1080
                          width: 1920
                        - variant: PT08
                          link: https://m.media-amazon.com/images/I/31TxwfqvB5L.jpg
                          height: 281
                          width: 500
                        - variant: PT09
                          link: https://m.media-amazon.com/images/I/41B5vgmp4IL.jpg
                          height: 375
                          width: 500
                        - variant: PT10
                          link: https://m.media-amazon.com/images/I/51S5IY3AV0L.jpg
                          height: 375
                          width: 500
                        - variant: PT11
                          link: https://m.media-amazon.com/images/I/41-6bmPtUlL.jpg
                          height: 375
                          width: 500
                        - variant: PT12
                          link: https://m.media-amazon.com/images/I/41s9Q6gWJ7L.jpg
                          height: 448
                          width: 500
                        - variant: PT13
                          link: https://m.media-amazon.com/images/I/519nG0mRzuL.jpg
                          height: 314
                          width: 500
                        - variant: PT14
                          link: https://m.media-amazon.com/images/I/71sHhrGMc7L.jpg
                          height: 1097
                          width: 1500
                        - variant: PT14
                          link: https://m.media-amazon.com/images/I/41CH6gKtU5L.jpg
                          height: 366
                          width: 500
                        - variant: PT15
                          link: https://m.media-amazon.com/images/I/21-s7QYrTxL.jpg
                          height: 500
                          width: 175
                        - variant: EEGL
                          link: https://m.media-amazon.com/images/I/61i3dsKD09L.jpg
                          height: 1375
                          width: 370
                        - variant: EEGL
                          link: https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg
                          height: 500
                          width: 135
                        - variant: EGUS
                          link: https://m.media-amazon.com/images/I/61i3dsKD09L.jpg
                          height: 1375
                          width: 370
                        - variant: EGUS
                          link: https://m.media-amazon.com/images/I/41E7ku-qdGL.jpg
                          height: 500
                          width: 135
                  productTypes:
                    - marketplaceId: ATVPDKIKX0DER
                      productType: TELEVISION
                  salesRanks:
                    - marketplaceId: ATVPDKIKX0DER
                      classificationRanks:
                        - classificationId: '21489946011'
                          title: QLED TVs
                          link: >-
                            http://www.amazon.com/gp/bestsellers/electronics/21489946011
                          rank: 113
                      displayGroupRanks:
                        - websiteDisplayGroup: ce_display_on_website
                          title: Electronics
                          link: http://www.amazon.com/gp/bestsellers/electronics
                          rank: 72855
                  summaries:
                    - marketplaceId: ATVPDKIKX0DER
                      brand: SAMSUNG
                      browseClassification:
                        displayName: QLED TVs
                        classificationId: '21489946011'
                      color: Black
                      itemClassification: BASE_PRODUCT
                      itemName: >-
                        Samsung QN82Q60RAFXZA Flat 82-Inch QLED 4K Q60 Series
                        (2019) Ultra HD Smart TV with HDR and Alexa
                        Compatibility
                      manufacturer: Samsung
                      modelNumber: QN82Q60RAFXZA
                      packageQuantity: 1
                      partNumber: QN82Q60RAFXZA
                      size: 82-Inch
                      style: TV only
                      websiteDisplayGroup: home_theater_display_on_website
                      websiteDisplayGroupName: Home Theater
                  relationships:
                    - marketplaceId: ATVPDKIKX0DER
                      relationships:
                        - type: VARIATION
                          parentAsins:
                            - B08J7TQ9FL
                          variationTheme:
                            attributes:
                              - color
                              - size
                            theme: SIZE_NAME/COLOR_NAME
                  vendorDetails:
                    - marketplaceId: ATVPDKIKX0DER
                      brandCode: SAMF9
                      manufacturerCode: SAMF9
                      manufacturerCodeParent: SAMF9
                      productCategory:
                        displayName: Televisions
                        value: '50400100'
                      productGroup: Home Entertainment
                      productSubcategory:
                        displayName: Plasma TVs
                        value: '50400120'
                      replenishmentCategory: OBSOLETE
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-04-01_ErrorList'
  /finances/v0/financialEventGroups:
    get:
      summary: Returns financial event groups for a given date range.
      description: >-
        Returns financial event groups for a given date range. It may take up to
        48 hours for orders to appear in your financial events.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 30 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: listFinancialEventGroups
      parameters:
        - name: MaxResultsPerPage
          in: query
          description: >-
            The maximum number of results to return per page. If the response
            exceeds the maximum number of transactions or 10 MB, the API
            responds with 'InvalidInput'.
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: FinancialEventGroupStartedBefore
          in: query
          description: >-
            A date used for selecting financial event groups that opened before
            (but not at) a specified date and time, in ISO 8601 format. The
            date-time  must be later than FinancialEventGroupStartedAfter and no
            later than two minutes before the request was submitted. If
            FinancialEventGroupStartedAfter and FinancialEventGroupStartedBefore
            are more than 180 days apart, no financial event groups are
            returned.
          schema:
            type: string
            format: date-time
        - name: FinancialEventGroupStartedAfter
          in: query
          description: >-
            A date used for selecting financial event groups that opened after
            (or at) a specified date and time, in ISO 8601 format. The date-time
            must be no later than two minutes before the request was submitted.
          schema:
            type: string
            format: date-time
        - name: NextToken
          in: query
          description: A string token returned in the response of your previous request.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventGroupsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    MaxResultsPerPage:
                      value: 1
                    FinancialEventGroupStartedBefore:
                      value: '2019-10-31'
                    FinancialEventGroupStartedAfter:
                      value: '2019-10-13'
                response:
                  payload:
                    NextToken: '3493805734095308457308475'
                    FinancialEventGroupList:
                      - FinancialEventGroupId: '1'
                        ProcessingStatus: PROCESSED
                        FundTransferStatus: TRANSFERED
                        OriginalTotal:
                          CurrencyCode: USD
                          CurrencyAmount: 10.34
                        ConvertedTotal:
                          CurrencyCode: USD
                          CurrencyAmount: 39.43
                        FundTransferDate: '2020-02-07T14:38:42.128Z'
                        TraceId: '34550454504545'
                        AccountTail: '4854564857'
                        BeginningBalance:
                          CurrencyCode: USD
                          CurrencyAmount: 55.33
                        FinancialEventGroupStart: '2020-02-07T14:38:42.128Z'
                        FinancialEventGroupEnd: '2020-02-07T14:38:42.128Z'
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventGroupsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    MaxResultsPerPage:
                      value: 10
                response:
                  errors:
                    - code: InvalidInput
                      message: Date range is invalid.
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventGroupsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventGroupsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventGroupsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventGroupsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventGroupsResponse'
      tags:
        - finances_other
  /finances/v0/financialEventGroups/{eventGroupId}/financialEvents:
    get:
      description: >-
        Returns all financial events for the specified financial event group. It
        may take up to 48 hours for orders to appear in your financial events.


        **Note:** This operation will only retrieve group's data for the past
        two years. If a request is submitted for data spanning more than two
        years, an empty response is returned.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 30 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: listFinancialEventsByGroupId
      parameters:
        - name: MaxResultsPerPage
          in: query
          description: >-
            The maximum number of results to return per page. If the response
            exceeds the maximum number of transactions or 10 MB, the API
            responds with 'InvalidInput'.
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: PostedAfter
          in: query
          description: >-
            A date used for selecting financial events posted after (or at) a
            specified time. The date-time **must** be more than two minutes
            before the time of the request, in ISO 8601 date time format.
          schema:
            type: string
            format: date-time
        - name: PostedBefore
          in: query
          description: >-
            A date used for selecting financial events posted before (but not
            at) a specified time. The date-time must be later than `PostedAfter`
            and no later than two minutes before the request was submitted, in
            ISO 8601 date time format. If `PostedAfter` and `PostedBefore` are
            more than 180 days apart, no financial events are returned. You must
            specify the `PostedAfter` parameter if you specify the
            `PostedBefore` parameter. Default: Now minus two minutes.
          schema:
            type: string
            format: date-time
        - name: eventGroupId
          in: path
          description: >-
            The identifier of the financial event group to which the events
            belong.
          required: true
          schema:
            type: string
        - name: NextToken
          in: query
          description: A string token returned in the response of your previous request.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    MaxResultsPerPage:
                      value: 10
                    eventGroupId:
                      value: '485734534857'
                response:
                  payload:
                    NextToken: Next token value
                    FinancialEvents:
                      ChargebackEventList:
                        - AmazonOrderId: 444-555-3343433
                          SellerOrderId: '454645645656456'
                          MarketplaceName: '1'
                          OrderChargeList:
                            - ChargeType: Tax
                              ChargeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          OrderChargeAdjustmentList:
                            - ChargeType: Tax
                              ChargeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          ShipmentFeeList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          ShipmentFeeAdjustmentList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          OrderFeeList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          OrderFeeAdjustmentList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          DirectPaymentList:
                            - DirectPaymentType: StoredValueCardRevenue
                              DirectPaymentAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          PostedDate: '2020-02-05T13:56:00.363Z'
                          ShipmentItemList:
                            - SellerSKU: '456454455464'
                              OrderItemId: '4565465645646'
                              OrderAdjustmentItemId: '456456465464'
                              QuantityShipped: 0
                              ItemChargeList:
                                - ChargeType: Tax
                                  ChargeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              ItemChargeAdjustmentList:
                                - ChargeType: Tax
                                  ChargeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              ItemFeeList:
                                - FeeType: FixedClosingFee
                                  FeeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              ItemFeeAdjustmentList:
                                - FeeType: FixedClosingFee
                                  FeeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              ItemTaxWithheldList:
                                - TaxCollectionModel: Free
                                  TaxesWithheld:
                                    - ChargeType: Tax
                                      ChargeAmount:
                                        CurrencyCode: USD
                                        CurrencyAmount: 25.37
                              PromotionList:
                                - PromotionType: Free
                                  PromotionId: '546564565'
                                  PromotionAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              PromotionAdjustmentList:
                                - PromotionType: Free
                                  PromotionId: '546564565'
                                  PromotionAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              CostOfPointsGranted:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                              CostOfPointsReturned:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          ShipmentItemAdjustmentList:
                            - SellerSKU: '456454455464'
                              OrderItemId: '4565465645646'
                              OrderAdjustmentItemId: '456456465464'
                              QuantityShipped: 0
                              ItemChargeList:
                                - ChargeType: Tax
                                  ChargeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              ItemChargeAdjustmentList:
                                - ChargeType: Tax
                                  ChargeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              ItemFeeList:
                                - FeeType: FixedClosingFee
                                  FeeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              ItemFeeAdjustmentList:
                                - FeeType: FixedClosingFee
                                  FeeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              ItemTaxWithheldList:
                                - TaxCollectionModel: Free
                                  TaxesWithheld:
                                    - ChargeType: Tax
                                      ChargeAmount:
                                        CurrencyCode: USD
                                        CurrencyAmount: 25.37
                              PromotionList:
                                - PromotionType: Free
                                  PromotionId: '546564565'
                                  PromotionAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              PromotionAdjustmentList:
                                - PromotionType: Free
                                  PromotionId: '546564565'
                                  PromotionAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                              CostOfPointsGranted:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                              CostOfPointsReturned:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                      ImagingServicesFeeEventList:
                        - ImagingRequestBillingItemID: '456456456'
                          ASIN: '4564565456456546456'
                          PostedDate: '2020-02-05T13:56:00.363Z'
                          FeeList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                      NetworkComminglingTransactionEventList:
                        - TransactionType: Free
                          PostedDate: '2020-02-05T13:56:00.363Z'
                          NetCoTransactionID: '4565645'
                          SwapReason: None
                          ASIN: '464567656576'
                          MarketplaceId: string
                          TaxExclusiveAmount:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          TaxAmount:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                      AffordabilityExpenseReversalEventList:
                        - AmazonOrderId: 444-555-3343433
                          PostedDate: '2020-02-05T13:56:00.363Z'
                          MarketplaceId: '1'
                          TransactionType: Free
                          BaseExpense:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          TaxTypeCGST:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          TaxTypeSGST:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          TaxTypeIGST:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          TotalExpense:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                      TrialShipmentEventList:
                        - AmazonOrderId: 444-555-3343433
                          FinancialEventGroupId: '1'
                          PostedDate: '2020-02-05T13:56:00.363Z'
                          SKU: '456454455464'
                          FeeList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                      TaxWithholdingEventList:
                        - PostedDate: '2020-02-05T13:56:00.363Z'
                          BaseAmount:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          WithheldAmount:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          TaxWithholdingPeriod:
                            StartDate: '2020-02-05T13:56:00.363Z'
                            EndDate: '2020-02-05T13:56:00.363Z'
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    eventGroupId:
                      value: BADID
                response:
                  errors:
                    - code: InvalidInput
                      message: Bad event group ID provided.
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
      tags:
        - finances_other
  /finances/v0/orders/{orderId}/financialEvents:
    get:
      description: >-
        Returns all financial events for the specified order. It may take up to
        48 hours for orders to appear in your financial events.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 30 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: listFinancialEventsByOrderId
      parameters:
        - name: orderId
          in: path
          description: An Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
        - name: MaxResultsPerPage
          in: query
          description: >-
            The maximum number of results to return per page. If the response
            exceeds the maximum number of transactions or 10 MB, the API
            responds with 'InvalidInput'.
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: NextToken
          in: query
          description: A string token returned in the response of your previous request.
          schema:
            type: string
      responses:
        '200':
          description: Financial Events successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    MaxResultsPerPage:
                      value: 10
                    orderId:
                      value: 485-734-5434857
                response:
                  payload:
                    NextToken: Next token value
                    FinancialEvents:
                      RetrochargeEventList:
                        - RetrochargeEventType: Retrocharge
                          AmazonOrderId: 444-555-3343433
                          PostedDate: '2020-02-05T13:56:00.363Z'
                          BaseTax:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          ShippingTax:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          MarketplaceName: '1'
                          RetrochargeTaxWithheldList:
                            - TaxCollectionModel: Free
                              TaxesWithheld:
                                - ChargeType: Tax
                                  ChargeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                      RentalTransactionEventList:
                        - AmazonOrderId: 444-555-3343433
                          RentalEventType: string
                          ExtensionLength: 0
                          PostedDate: '2020-02-05T13:56:00.363Z'
                          RentalChargeList:
                            - ChargeType: Tax
                              ChargeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          RentalFeeList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          MarketplaceName: '1'
                          RentalInitialValue:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          RentalReimbursement:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          RentalTaxWithheldList:
                            - TaxCollectionModel: Free
                              TaxesWithheld:
                                - ChargeType: Tax
                                  ChargeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                      ProductAdsPaymentEventList:
                        - postedDate: '2020-02-05T13:56:00.363Z'
                          transactionType: Free
                          invoiceId: '3454535453'
                          baseValue:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          taxValue:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          transactionValue:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                      ServiceFeeEventList:
                        - AmazonOrderId: 444-555-3343433
                          FeeReason: Free
                          FeeList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          SellerSKU: '456454455464'
                          FnSKU: Fn134
                          FeeDescription: FeeDescription
                          ASIN: KJHJ457648GHD
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: BAD-ORDER
                response:
                  errors:
                    - code: InvalidInput
                      message: Bad order ID provided.
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
      tags:
        - finances_other
  /finances/v0/financialEvents:
    get:
      description: >-
        Returns financial events for the specified data range. It may take up to
        48 hours for orders to appear in your financial events.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 30 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: listFinancialEvents
      parameters:
        - name: MaxResultsPerPage
          in: query
          description: >-
            The maximum number of results to return per page. If the response
            exceeds the maximum number of transactions or 10 MB, the API
            responds with 'InvalidInput'.
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: PostedAfter
          in: query
          description: >-
            A date used for selecting financial events posted after (or at) a
            specified time. The date-time must be no later than two minutes
            before the request was submitted, in ISO 8601 date time format.
          schema:
            type: string
            format: date-time
        - name: PostedBefore
          in: query
          description: >-
            A date used for selecting financial events posted before (but not
            at) a specified time. The date-time must be later than PostedAfter
            and no later than two minutes before the request was submitted, in
            ISO 8601 date time format. If PostedAfter and PostedBefore are more
            than 180 days apart, no financial events are returned. You must
            specify the PostedAfter parameter if you specify the PostedBefore
            parameter. Default: Now minus two minutes.
          schema:
            type: string
            format: date-time
        - name: NextToken
          in: query
          description: A string token returned in the response of your previous request.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    MaxResultsPerPage:
                      value: 10
                    NextToken:
                      value: jehgri34yo7jr9e8f984tr9i4o
                response:
                  payload:
                    NextToken: Next token value
                    FinancialEvents:
                      PayWithAmazonEventList:
                        - SellerOrderId: '454645645656456'
                          TransactionPostedDate: '2020-02-05T13:56:00.363Z'
                          BusinessObjectType: Free
                          SalesChannel: None
                          Charge:
                            ChargeType: Tax
                            ChargeAmount:
                              CurrencyCode: USD
                              CurrencyAmount: 25.37
                          FeeList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          PaymentAmountType: Tax
                          AmountDescription: Tax
                          FulfillmentChannel: FulfillmentChannel
                          StoreName: Etsy
                      ServiceProviderCreditEventList:
                        - ProviderTransactionType: Free
                          SellerOrderId: '454645645656456'
                          MarketplaceId: '1'
                          MarketplaceCountryCode: US
                          SellerId: '4564565546'
                          SellerStoreName: Etsy
                          ProviderId: '1'
                          ProviderStoreName: Etsy
                          TransactionAmount:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          TransactionCreationDate: '2020-02-05T13:56:00.363Z'
                      RentalTransactionEventList:
                        - AmazonOrderId: 444-555-3343433
                          RentalEventType: string
                          ExtensionLength: 0
                          PostedDate: '2020-02-05T13:56:00.363Z'
                          RentalChargeList:
                            - ChargeType: Tax
                              ChargeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          RentalFeeList:
                            - FeeType: FixedClosingFee
                              FeeAmount:
                                CurrencyCode: USD
                                CurrencyAmount: 25.37
                          MarketplaceName: '1'
                          RentalInitialValue:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          RentalReimbursement:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          RentalTaxWithheldList:
                            - TaxCollectionModel: Free
                              TaxesWithheld:
                                - ChargeType: Tax
                                  ChargeAmount:
                                    CurrencyCode: USD
                                    CurrencyAmount: 25.37
                      ProductAdsPaymentEventList:
                        - postedDate: '2020-02-05T13:56:00.363Z'
                          transactionType: Free
                          invoiceId: '3454535453'
                          baseValue:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          taxValue:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
                          transactionValue:
                            CurrencyCode: USD
                            CurrencyAmount: 25.37
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    MaxResultsPerPage:
                      value: 2
                response:
                  errors:
                    - code: InvalidInput
                      message: Input not valid.
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ListFinancialEventsResponse'
      tags:
        - finances_other
  /listings/2021-08-01/items/{sellerId}/{sku}:
    get:
      summary: getListingsItem
      tags:
        - listingsItems_listings
      description: >-
        Returns details about a listings item for a selling partner.


        **Note:** The parameters associated with this operation may contain
        special characters that must be encoded to successfully call the API. To
        avoid errors with SKUs when encoding URLs, refer to [URL
        Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getListingsItem
      parameters:
        - name: sellerId
          in: path
          description: >-
            A selling partner identifier, such as a merchant account or vendor
            code.
          required: true
          schema:
            type: string
        - name: sku
          in: path
          description: A selling partner provided identifier for an Amazon listing.
          required: true
          schema:
            type: string
        - name: marketplaceIds
          in: query
          description: >-
            A comma-delimited list of Amazon marketplace identifiers for the
            request.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: ATVPDKIKX0DER
        - name: issueLocale
          in: query
          description: >-
            A locale for localization of issues. When not provided, the default
            language code of the first marketplace is used. Examples: "en_US",
            "fr_CA", "fr_FR". Localized messages default to "en_US" when a
            localization is not available in the specified locale.
          schema:
            type: string
          example: en_US
        - name: includedData
          in: query
          description: >-
            A comma-delimited list of data sets to include in the response.
            Default: summaries.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - summaries
                - attributes
                - issues
                - offers
                - fulfillmentAvailability
                - procurement
              x-docgen-enum-table-extension:
                - value: summaries
                  description: Summary details of the listing item.
                - value: attributes
                  description: >-
                    JSON object containing structured listing item attribute
                    data keyed by attribute name.
                - value: issues
                  description: Issues associated with the listing item.
                - value: offers
                  description: Current offers for the listing item.
                - value: fulfillmentAvailability
                  description: Fulfillment availability details for the listing item.
                - value: procurement
                  description: 'Vendor procurement details for the listing item. '
          example: summaries
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_Item'
              example:
                sku: GM-ZDPI-9B4E
                summaries:
                  - marketplaceId: ATVPDKIKX0DER
                    asin: B071VG5N9D
                    productType: LUGGAGE
                    conditionType: new_new
                    status:
                      - BUYABLE
                    itemName: Hardside Carry-On Spinner Suitcase Luggage
                    createdDate: '2021-02-01T00:00:00Z'
                    lastUpdatedDate: '2021-03-01T00:00:00Z'
                    mainImage:
                      link: https://www.example.com/luggage.png
                      height: 500
                      width: 500
                offers:
                  - marketplaceId: ATVPDKIKX0DER
                    offerType: B2C
                    price:
                      currencyCode: USD
                      amount: '100.00'
                fulfillmentAvailability:
                  - fulfillmentChannelCode: DEFAULT
                    quantity: 100
                issues: []
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body: {}
                response:
                  sku: GM-ZDPI-9B4E
                  summaries:
                    - marketplaceId: ATVPDKIKX0DER
                      asin: B071VG5N9D
                      productType: LUGGAGE
                      conditionType: new_new
                      status:
                        - BUYABLE
                      itemName: Hardside Carry-On Spinner Suitcase Luggage
                      createdDate: '2021-02-01T00:00:00Z'
                      lastUpdatedDate: '2021-03-01T00:00:00Z'
                      mainImage:
                        link: https://www.example.com/luggage.png
                        height: 500
                        width: 500
                  offers:
                    - marketplaceId: ATVPDKIKX0DER
                      offerType: B2C
                      price:
                        currencyCode: USD
                        amount: '100.00'
                  fulfillmentAvailability:
                    - fulfillmentChannelCode: DEFAULT
                      quantity: 100
                  issues: []
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    sku:
                      value: BadSKU
                response:
                  errors:
                    - code: BAD_REQUEST
                      message: Invalid input
                      details: Invalid input
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
    put:
      tags:
        - listingsItems_listings
      description: >-
        Creates a new or fully-updates an existing listings item for a selling
        partner.


        **Note:** The parameters associated with this operation may contain
        special characters that must be encoded to successfully call the API. To
        avoid errors with SKUs when encoding URLs, refer to [URL
        Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: putListingsItem
      parameters:
        - name: sellerId
          in: path
          description: >-
            A selling partner identifier, such as a merchant account or vendor
            code.
          required: true
          schema:
            type: string
        - name: sku
          in: path
          description: A selling partner provided identifier for an Amazon listing.
          required: true
          schema:
            type: string
        - name: marketplaceIds
          in: query
          description: >-
            A comma-delimited list of Amazon marketplace identifiers for the
            request.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: ATVPDKIKX0DER
        - name: issueLocale
          in: query
          description: >-
            A locale for localization of issues. When not provided, the default
            language code of the first marketplace is used. Examples: "en_US",
            "fr_CA", "fr_FR". Localized messages default to "en_US" when a
            localization is not available in the specified locale.
          schema:
            type: string
          example: en_US
      requestBody:
        description: The request body schema for the putListingsItem operation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2021-08-01_ListingsItemPutRequest'
        required: true
      responses:
        '200':
          description: >-
            Successfully understood the request to create or fully-update a
            listings item. See the response to determine if the submission has
            been accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ListingsItemSubmissionResponse'
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body: {}
                response:
                  sku: GM-ZDPI-9B4E
                  status: ACCEPTED
                  submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                  issues: []
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    sku:
                      value: BadSKU
                response:
                  errors:
                    - code: BAD_REQUEST
                      message: Invalid input
                      details: Invalid input
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
      x-codegen-request-body-name: body
    delete:
      tags:
        - listingsItems_listings
      description: >-
        Delete a listings item for a selling partner.


        **Note:** The parameters associated with this operation may contain
        special characters that must be encoded to successfully call the API. To
        avoid errors with SKUs when encoding URLs, refer to [URL
        Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: deleteListingsItem
      parameters:
        - name: sellerId
          in: path
          description: >-
            A selling partner identifier, such as a merchant account or vendor
            code.
          required: true
          schema:
            type: string
        - name: sku
          in: path
          description: A selling partner provided identifier for an Amazon listing.
          required: true
          schema:
            type: string
        - name: marketplaceIds
          in: query
          description: >-
            A comma-delimited list of Amazon marketplace identifiers for the
            request.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: ATVPDKIKX0DER
        - name: issueLocale
          in: query
          description: >-
            A locale for localization of issues. When not provided, the default
            language code of the first marketplace is used. Examples: "en_US",
            "fr_CA", "fr_FR". Localized messages default to "en_US" when a
            localization is not available in the specified locale.
          schema:
            type: string
          example: en_US
      responses:
        '200':
          description: >-
            Successfully understood the listings item delete request. See the
            response to determine whether the submission has been accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ListingsItemSubmissionResponse'
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  sku: GM-ZDPI-9B4E
                  status: ACCEPTED
                  submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                  issues: []
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    sku:
                      value: BadSKU
                response:
                  errors:
                    - code: BAD_REQUEST
                      message: Invalid input
                      details: Invalid input
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
    patch:
      tags:
        - listingsItems_listings
      description: >-
        Partially update (patch) a listings item for a selling partner. Only
        top-level listings item attributes can be patched. Patching nested
        attributes is not supported.


        **Note:** The parameters associated with this operation may contain
        special characters that must be encoded to successfully call the API. To
        avoid errors with SKUs when encoding URLs, refer to [URL
        Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: patchListingsItem
      parameters:
        - name: sellerId
          in: path
          description: >-
            A selling partner identifier, such as a merchant account or vendor
            code.
          required: true
          schema:
            type: string
        - name: sku
          in: path
          description: A selling partner provided identifier for an Amazon listing.
          required: true
          schema:
            type: string
        - name: marketplaceIds
          in: query
          description: >-
            A comma-delimited list of Amazon marketplace identifiers for the
            request.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: ATVPDKIKX0DER
        - name: issueLocale
          in: query
          description: >-
            A locale for localization of issues. When not provided, the default
            language code of the first marketplace is used. Examples: "en_US",
            "fr_CA", "fr_FR". Localized messages default to "en_US" when a
            localization is not available in the specified locale.
          schema:
            type: string
          example: en_US
      requestBody:
        description: The request body schema for the patchListingsItem operation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2021-08-01_ListingsItemPatchRequest'
        required: true
      responses:
        '200':
          description: >-
            Successfully understood the listings item patch request. See the
            response to determine if the submission was accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ListingsItemSubmissionResponse'
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body: {}
                response:
                  sku: GM-ZDPI-9B4E
                  status: ACCEPTED
                  submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                  issues: []
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    sku:
                      value: BadSKU
                response:
                  errors:
                    - code: BAD_REQUEST
                      message: Invalid input
                      details: Invalid input
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
      x-codegen-request-body-name: body
  /listings/2021-08-01/restrictions:
    get:
      tags:
        - listingsRestrictions_listings
      description: >-
        Returns listing restrictions for an item in the Amazon Catalog. 


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getListingsRestrictions
      parameters:
        - name: asin
          in: query
          description: The Amazon Standard Identification Number (ASIN) of the item.
          required: true
          schema:
            type: string
          example: B0000ASIN1
        - name: conditionType
          in: query
          description: The condition used to filter restrictions.
          schema:
            type: string
            enum:
              - new_new
              - new_open_box
              - new_oem
              - refurbished_refurbished
              - used_like_new
              - used_very_good
              - used_good
              - used_acceptable
              - collectible_like_new
              - collectible_very_good
              - collectible_good
              - collectible_acceptable
              - club_club
            x-docgen-enum-table-extension:
              - value: new_new
                description: New
              - value: new_open_box
                description: New - Open Box.
              - value: new_oem
                description: New - OEM.
              - value: refurbished_refurbished
                description: Refurbished
              - value: used_like_new
                description: Used - Like New.
              - value: used_very_good
                description: Used - Very Good.
              - value: used_good
                description: Used - Good.
              - value: used_acceptable
                description: Used - Acceptable.
              - value: collectible_like_new
                description: Collectible - Like New.
              - value: collectible_very_good
                description: Collectible - Very Good.
              - value: collectible_good
                description: Collectible - Good.
              - value: collectible_acceptable
                description: Collectible - Acceptable.
              - value: club_club
                description: Club
          example: used_very_good
          x-docgen-enum-table-extension:
            - value: new_new
              description: New
            - value: new_open_box
              description: New - Open Box.
            - value: new_oem
              description: New - OEM.
            - value: refurbished_refurbished
              description: Refurbished
            - value: used_like_new
              description: Used - Like New.
            - value: used_very_good
              description: Used - Very Good.
            - value: used_good
              description: Used - Good.
            - value: used_acceptable
              description: Used - Acceptable.
            - value: collectible_like_new
              description: Collectible - Like New.
            - value: collectible_very_good
              description: Collectible - Very Good.
            - value: collectible_good
              description: Collectible - Good.
            - value: collectible_acceptable
              description: Collectible - Acceptable.
            - value: club_club
              description: Club
        - name: sellerId
          in: query
          description: A selling partner identifier, such as a merchant account.
          required: true
          schema:
            type: string
        - name: marketplaceIds
          in: query
          description: >-
            A comma-delimited list of Amazon marketplace identifiers for the
            request.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: ATVPDKIKX0DER
        - name: reasonLocale
          in: query
          description: >-
            A locale for reason text localization. When not provided, the
            default language code of the first marketplace is used. Examples:
            "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US"
            when a localization is not available in the specified locale.
          schema:
            type: string
          example: en_US
      responses:
        '200':
          description: Successfully retrieved the listings restrictions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_RestrictionList'
              example:
                restrictions:
                  - marketplaceId: ATVPDKIKX0DER
                    conditionType: used_acceptable
                    reasons:
                      - message: You cannot list the product in this condition.
                        links:
                          - resource: >-
                              https://sellercentral.amazon.com/hz/approvalrequest/restrictions/approve?asin=B0000ASIN1
                            verb: GET
                            title: Request Approval via Seller Central.
                            type: text/html
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body: {}
                response:
                  restrictions:
                    - marketplaceId: ATVPDKIKX0DER
                      conditionType: used_acceptable
                      reasons:
                        - message: You cannot list the product in this condition.
                          links:
                            - resource: >-
                                https://sellercentral.amazon.com/hz/approvalrequest/restrictions/approve?asin=B0000ASIN1
                              verb: GET
                              title: Request Approval via Seller Central.
                              type: text/html
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    asin:
                      value: BAD_ASIN
                response:
                  - code: BAD_REQUEST
                    message: Invalid 'asin' provided.
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-08-01_ErrorList'
  /notifications/v1/subscriptions/{notificationType}:
    get:
      tags:
        - notifications_notifications
      description: >-
        Returns information about subscriptions of the specified notification
        type. You can use this API to get subscription information when you do
        not have a subscription identifier.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getSubscription
      parameters:
        - name: notificationType
          in: path
          description: |-
            The type of notification.

             For more information about notification types, see [the Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
            Successful Response:
              example:
                payload:
                  subscriptionId: 7fcacc7e-727b-11e9-8848-1681be663d3e
                  payloadVersion: '1.0'
                  destinationId: 3acafc7e-121b-1329-8ae8-1571be663aa2
                  processingDirective:
                    eventFilter:
                      marketplaceIds:
                        - ATVPDKIKX0DER
                        - A2EUQ1WTGCTBG2
                      aggregationSettings:
                        aggregationTimePeriod: FiveMinutes
                      eventFilterType: ANY_OFFER_CHANGED
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    subscriptionId: TEST_CASE_200_SUBSCRIPTION_ID
                    payloadVersion: '1.0'
                    destinationId: TEST_CASE_200_DESTINATION_ID
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
    post:
      tags:
        - notifications_notifications
      description: >-
        Creates a subscription for the specified notification type to be
        delivered to the specified destination. Before you can subscribe, you
        must first create the destination by calling the createDestination
        operation.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: createSubscription
      parameters:
        - name: notificationType
          in: path
          description: |-
            The type of notification.

             For more information about notification types, see [the Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_CreateSubscriptionRequest'
        required: true
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
            Successful Response:
              example:
                payload:
                  subscriptionId: 7fcacc7e-727b-11e9-8848-1681be663d3e
                  payloadVersion: '1.0'
                  destinationId: 3acafc7e-121b-1329-8ae8-1571be663aa2
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    subscriptionId: TEST_CASE_200_SUBSCRIPTION_ID
                    payloadVersion: '1.0'
                    destinationId: TEST_CASE_200_DESTINATION_ID
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
        '409':
          description: The resource specified conflicts with the current state.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateSubscriptionResponse'
      x-codegen-request-body-name: body
  /notifications/v1/subscriptions/{notificationType}/{subscriptionId}:
    get:
      tags:
        - notifications_notifications
      description: >-
        Returns information about a subscription for the specified notification
        type. The getSubscriptionById API is grantless. For more information,
        see [Grantless operations](doc:grantless-operations) in the Selling
        Partner API Developer Guide.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getSubscriptionById
      parameters:
        - name: subscriptionId
          in: path
          description: The identifier for the subscription that you want to get.
          required: true
          schema:
            type: string
        - name: notificationType
          in: path
          description: |-
            The type of notification.

             For more information about notification types, see [the Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
            Successful Response:
              example:
                payload:
                  subscriptionId: 7fcacc7e-727b-11e9-8848-1681be663d3e
                  payloadVersion: '1.0'
                  destinationId: 3acafc7e-121b-1329-8ae8-1571be663aa2
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    subscriptionId: TEST_CASE_200_SUBSCRIPTION_ID
                    payloadVersion: '1.0'
                    destinationId: TEST_CASE_200_DESTINATION_ID
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionResponse'
        '409':
          description: The resource specified conflicts with the current state.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetSubscriptionByIdResponse'
    delete:
      tags:
        - notifications_notifications
      description: >-
        Deletes the subscription indicated by the subscription identifier and
        notification type that you specify. The subscription identifier can be
        for any subscription associated with your application. After you
        successfully call this operation, notifications will stop being sent for
        the associated subscription. The deleteSubscriptionById API is
        grantless. For more information, see [Grantless
        operations](doc:grantless-operations) in the Selling Partner API
        Developer Guide.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: deleteSubscriptionById
      parameters:
        - name: subscriptionId
          in: path
          description: The identifier for the subscription that you want to delete.
          required: true
          schema:
            type: string
        - name: notificationType
          in: path
          description: |-
            The type of notification.

             For more information about notification types, see [the Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
            Successful Operation Response:
              example: {}
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
        '409':
          description: The resource specified conflicts with the current state.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteSubscriptionByIdResponse'
  /notifications/v1/destinations:
    get:
      tags:
        - notifications_notifications
      description: >-
        Returns information about all destinations. The getDestinations API is
        grantless. For more information, see [Grantless
        operations](doc:grantless-operations) in the Selling Partner API
        Developer Guide.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getDestinations
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
            Successful Response:
              example:
                payload:
                  - destinationId: 9e7a83ee-7730-11e9-8f9e-2a86e4085a59
                    name: SQSDestination
                    resource:
                      sqs:
                        arn: arn:aws:sqs:us-east-2:444455556666:queue1
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    - destinationId: TEST_CASE_200
                      resource:
                        sqs:
                          arn: arn:aws:sqs:us-east-2:444455556666:queue1
                      name: SQSDestination
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
        '409':
          description: The resource specified conflicts with the current state.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationsResponse'
    post:
      tags:
        - notifications_notifications
      description: >-
        Creates a destination resource to receive notifications. The
        createDestination API is grantless. For more information, see [Grantless
        operations](doc:grantless-operations) in the Selling Partner API
        Developer Guide.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: createDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_CreateDestinationRequest'
        required: true
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
            Successful Response:
              example:
                payload:
                  destinationId: 9e7a83ee-7730-11e9-8f9e-2a86e4085a59
                  resource:
                    sqs:
                      arn: arn:aws:sqs:us-east-2:444455556666:queue1
                  name: SQSDestination
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    destinationId: TEST_CASE_200_DESTINATION_ID
                    resource:
                      sqs:
                        arn: arn:aws:sqs:us-east-2:444455556666:queue1
                    name: SQSDestination
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
        '409':
          description: The resource specified conflicts with the current state.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateDestinationResponse'
      x-codegen-request-body-name: body
  /notifications/v1/destinations/{destinationId}:
    get:
      tags:
        - notifications_notifications
      description: >-
        Returns information about the destination that you specify. The
        getDestination API is grantless. For more information, see [Grantless
        operations](doc:grantless-operations) in the Selling Partner API
        Developer Guide.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getDestination
      parameters:
        - name: destinationId
          in: path
          description: The identifier generated when you created the destination.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
            Successful Response:
              example:
                payload:
                  destinationId: 9e7a83ee-7730-11e9-8f9e-2a86e4085a59
                  name: SQSDestination
                  resource:
                    sqs:
                      arn: arn:aws:sqs:us-east-2:444455556666:queue1
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    destinationId: TEST_CASE_200_DESTINATION
                    resource:
                      sqs:
                        arn: arn:aws:sqs:us-east-2:444455556666:queue1
                    name: SQSDestination
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
        '409':
          description: The resource specified conflicts with the current state.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetDestinationResponse'
    delete:
      tags:
        - notifications_notifications
      description: >-
        Deletes the destination that you specify. The deleteDestination API is
        grantless. For more information, see [Grantless
        operations](doc:grantless-operations) in the Selling Partner API
        Developer Guide.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 5 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: deleteDestination
      parameters:
        - name: destinationId
          in: path
          description: The identifier for the destination that you want to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
            Successful Response:
              example: {}
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
        '409':
          description: The resource specified conflicts with the current state.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_DeleteDestinationResponse'
  /orders/v0/orders:
    get:
      tags:
        - orders_ordersV0
      description: >-
        Returns orders created or updated during the time frame indicated by the
        specified parameters. You can also apply a range of filtering criteria
        to narrow the list of orders returned. If NextToken is present, that
        will be used to retrieve the orders instead of other criteria.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0167 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getOrders
      parameters:
        - name: CreatedAfter
          in: query
          description: >-
            A date used for selecting orders created after (or at) a specified
            time. Only orders placed after the specified time are returned.
            Either the CreatedAfter parameter or the LastUpdatedAfter parameter
            is required. Both cannot be empty. The date must be in ISO 8601
            format.
          schema:
            type: string
        - name: CreatedBefore
          in: query
          description: >-
            A date used for selecting orders created before (or at) a specified
            time. Only orders placed before the specified time are returned. The
            date must be in ISO 8601 format.
          schema:
            type: string
        - name: LastUpdatedAfter
          in: query
          description: >-
            A date used for selecting orders that were last updated after (or
            at) a specified time. An update is defined as any change in order
            status, including the creation of a new order. Includes updates made
            by Amazon and by the seller. The date must be in ISO 8601 format.
          schema:
            type: string
        - name: LastUpdatedBefore
          in: query
          description: >-
            A date used for selecting orders that were last updated before (or
            at) a specified time. An update is defined as any change in order
            status, including the creation of a new order. Includes updates made
            by Amazon and by the seller. The date must be in ISO 8601 format.
          schema:
            type: string
        - name: OrderStatuses
          in: query
          description: >-
            A list of `OrderStatus` values used to filter the results.


            **Possible values:**

            - `PendingAvailability` (This status is available for pre-orders
            only. The order has been placed, payment has not been authorized,
            and the release date of the item is in the future.)

            - `Pending` (The order has been placed but payment has not been
            authorized.)

            - `Unshipped` (Payment has been authorized and the order is ready
            for shipment, but no items in the order have been shipped.)

            - `PartiallyShipped` (One or more, but not all, items in the order
            have been shipped.)

            - `Shipped` (All items in the order have been shipped.)

            - `InvoiceUnconfirmed` (All items in the order have been shipped.
            The seller has not yet given confirmation to Amazon that the invoice
            has been shipped to the buyer.)

            - `Canceled` (The order has been canceled.)

            - `Unfulfillable` (The order cannot be fulfilled. This state applies
            only to Multi-Channel Fulfillment orders.)
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: MarketplaceIds
          in: query
          description: >-
            A list of MarketplaceId values. Used to select orders that were
            placed in the specified marketplaces.


            Refer to [Marketplace
            IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids)
            for a complete list of marketplaceId values.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 50
            type: array
            items:
              type: string
        - name: FulfillmentChannels
          in: query
          description: >-
            A list that indicates how an order was fulfilled. Filters the
            results by fulfillment channel. Possible values: AFN (Fulfillment by
            Amazon); MFN (Fulfilled by the seller).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: PaymentMethods
          in: query
          description: >-
            A list of payment method values. Used to select orders paid using
            the specified payment methods. Possible values: COD (Cash on
            delivery); CVS (Convenience store payment); Other (Any payment
            method other than COD or CVS).
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: BuyerEmail
          in: query
          description: >-
            The email address of a buyer. Used to select orders that contain the
            specified email address.
          schema:
            type: string
        - name: SellerOrderId
          in: query
          description: >-
            An order identifier that is specified by the seller. Used to select
            only the orders that match the order identifier. If SellerOrderId is
            specified, then FulfillmentChannels, OrderStatuses, PaymentMethod,
            LastUpdatedAfter, LastUpdatedBefore, and BuyerEmail cannot be
            specified.
          schema:
            type: string
        - name: MaxResultsPerPage
          in: query
          description: >-
            A number that indicates the maximum number of orders that can be
            returned per page. Value must be 1 - 100. Default 100.
          schema:
            type: integer
        - name: EasyShipShipmentStatuses
          in: query
          description: >-
            A list of `EasyShipShipmentStatus` values. Used to select Easy Ship
            orders with statuses that match the specified values. If
            `EasyShipShipmentStatus` is specified, only Amazon Easy Ship orders
            are returned.


            **Possible values:**

            - `PendingSchedule` (The package is awaiting the schedule for
            pick-up.)

            - `PendingPickUp` (Amazon has not yet picked up the package from the
            seller.)

            - `PendingDropOff` (The seller will deliver the package to the
            carrier.)

            - `LabelCanceled` (The seller canceled the pickup.)

            - `PickedUp` (Amazon has picked up the package from the seller.)

            - `DroppedOff` (The package is delivered to the carrier by the
            seller.)

            - `AtOriginFC` (The packaged is at the origin fulfillment center.)

            - `AtDestinationFC` (The package is at the destination fulfillment
            center.)

            - `Delivered` (The package has been delivered.)

            - `RejectedByBuyer` (The package has been rejected by the buyer.)

            - `Undeliverable` (The package cannot be delivered.)

            - `ReturningToSeller` (The package was not delivered and is being
            returned to the seller.)

            - `ReturnedToSeller` (The package was not delivered and was returned
            to the seller.)

            - `Lost` (The package is lost.)

            - `OutForDelivery` (The package is out for delivery.)

            - `Damaged` (The package was damaged by the carrier.)
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: ElectronicInvoiceStatuses
          in: query
          description: >-
            A list of `ElectronicInvoiceStatus` values. Used to select orders
            with electronic invoice statuses that match the specified values.


            **Possible values:**

            - `NotRequired` (Electronic invoice submission is not required for
            this order.)

            - `NotFound` (The electronic invoice was not submitted for this
            order.)

            - `Processing` (The electronic invoice is being processed for this
            order.)

            - `Errored` (The last submitted electronic invoice was rejected for
            this order.)

            - `Accepted` (The last submitted electronic invoice was submitted
            and accepted.)
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: NextToken
          in: query
          description: A string token returned in the response of your previous request.
          schema:
            type: string
        - name: AmazonOrderIds
          in: query
          description: >-
            A list of AmazonOrderId values. An AmazonOrderId is an
            Amazon-defined order identifier, in 3-7-7 format.
          style: form
          explode: false
          schema:
            maxItems: 50
            type: array
            items:
              type: string
        - name: ActualFulfillmentSupplySourceId
          in: query
          description: >-
            Denotes the recommended sourceId where the order should be fulfilled
            from.
          schema:
            type: string
        - name: IsISPU
          in: query
          description: >-
            When true, this order is marked to be picked up from a store rather
            than delivered.
          schema:
            type: boolean
        - name: StoreChainStoreId
          in: query
          description: >-
            The store chain store identifier. Linked to a specific store in a
            store chain.
          schema:
            type: string
        - name: EarliestDeliveryDateBefore
          in: query
          description: >-
            A date used for selecting orders with a earliest delivery date
            before (or at) a specified time. The date must be in ISO 8601
            format.
          schema:
            type: string
        - name: EarliestDeliveryDateAfter
          in: query
          description: >-
            A date used for selecting orders with a earliest delivery date after
            (or at) a specified time. The date must be in ISO 8601 format.
          schema:
            type: string
        - name: LatestDeliveryDateBefore
          in: query
          description: >-
            A date used for selecting orders with a latest delivery date before
            (or at) a specified time. The date must be in ISO 8601 format.
          schema:
            type: string
        - name: LatestDeliveryDateAfter
          in: query
          description: >-
            A date used for selecting orders with a latest delivery date after
            (or at) a specified time. The date must be in ISO 8601 format.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrdersResponse'
              example:
                payload:
                  NextToken: 2YgYW55IGNhcm5hbCBwbGVhc3VyZS4
                  Orders:
                    - AmazonOrderId: 902-3159896-1390916
                      PurchaseDate: '2017-01-20T19:49:35Z'
                      LastUpdateDate: '2017-01-20T19:49:35Z'
                      OrderStatus: Pending
                      FulfillmentChannel: SellerFulfilled
                      NumberOfItemsShipped: 0
                      NumberOfItemsUnshipped: 0
                      PaymentMethod: Other
                      PaymentMethodDetails:
                        - CreditCard
                        - GiftCerificate
                      MarketplaceId: ATVPDKIKX0DER
                      ShipmentServiceLevelCategory: Standard
                      OrderType: StandardOrder
                      EarliestShipDate: '2017-01-20T19:51:16Z'
                      LatestShipDate: '2017-01-25T19:49:35Z'
                      IsBusinessOrder: false
                      IsPrime: false
                      IsAccessPointOrder: false
                      IsGlobalExpressEnabled: false
                      IsPremiumOrder: false
                      IsSoldByAB: false
                      IsIBA: false
                      ShippingAddress:
                        Name: Michigan address
                        AddressLine1: 1 Cross St.
                        City: Canton
                        StateOrRegion: MI
                        PostalCode: '48817'
                        CountryCode: US
                      BuyerInfo:
                        BuyerEmail: user@example.com
                        BuyerName: John Doe
                        BuyerTaxInfo:
                          CompanyLegalName: A Company Name
                        PurchaseOrderNumber: '1234567890123'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    CreatedAfter:
                      value: TEST_CASE_200
                    MarketplaceIds:
                      value:
                        - ATVPDKIKX0DER
                response:
                  payload:
                    CreatedBefore: '1.569521782042E9'
                    Orders:
                      - AmazonOrderId: 902-1845936-5435065
                        PurchaseDate: '1970-01-19T03:58:30Z'
                        LastUpdateDate: '1970-01-19T03:58:32Z'
                        OrderStatus: Unshipped
                        FulfillmentChannel: MFN
                        SalesChannel: Amazon.com
                        ShipServiceLevel: Std US D2D Dom
                        OrderTotal:
                          CurrencyCode: USD
                          Amount: '11.01'
                        NumberOfItemsShipped: 0
                        NumberOfItemsUnshipped: 1
                        PaymentMethod: Other
                        PaymentMethodDetails:
                          - Standard
                        IsReplacementOrder: false
                        MarketplaceId: ATVPDKIKX0DER
                        ShipmentServiceLevelCategory: Standard
                        OrderType: StandardOrder
                        EarliestShipDate: '1970-01-19T03:59:27Z'
                        LatestShipDate: '1970-01-19T04:05:13Z'
                        EarliestDeliveryDate: '1970-01-19T04:06:39Z'
                        LatestDeliveryDate: '1970-01-19T04:15:17Z'
                        IsBusinessOrder: false
                        IsPrime: false
                        IsGlobalExpressEnabled: false
                        IsPremiumOrder: false
                        IsSoldByAB: false
                        IsIBA: false
                        DefaultShipFromLocationAddress:
                          Name: MFNIntegrationTestMerchant
                          AddressLine1: 2201 WESTLAKE AVE
                          City: SEATTLE
                          StateOrRegion: WA
                          PostalCode: 98121-2778
                          CountryCode: US
                          Phone: +1 480-386-0930 ext. 73824
                          AddressType: Commercial
                        FulfillmentInstruction:
                          FulfillmentSupplySourceId: sampleSupplySourceId
                        IsISPU: false
                        IsAccessPointOrder: false
                        AutomatedShippingSettings:
                          HasAutomatedShippingSettings: false
                        EasyShipShipmentStatus: PendingPickUp
                        ElectronicInvoiceStatus: NotRequired
                      - AmazonOrderId: 902-8745147-1934268
                        PurchaseDate: '1970-01-19T03:58:30Z'
                        LastUpdateDate: '1970-01-19T03:58:32Z'
                        OrderStatus: Unshipped
                        FulfillmentChannel: MFN
                        SalesChannel: Amazon.com
                        ShipServiceLevel: Std US D2D Dom
                        OrderTotal:
                          CurrencyCode: USD
                          Amount: '11.01'
                        NumberOfItemsShipped: 0
                        NumberOfItemsUnshipped: 1
                        PaymentMethod: Other
                        PaymentMethodDetails:
                          - Standard
                        IsReplacementOrder: false
                        MarketplaceId: ATVPDKIKX0DER
                        ShipmentServiceLevelCategory: Standard
                        OrderType: StandardOrder
                        EarliestShipDate: '1970-01-19T03:59:27Z'
                        LatestShipDate: '1970-01-19T04:05:13Z'
                        EarliestDeliveryDate: '1970-01-19T04:06:39Z'
                        LatestDeliveryDate: '1970-01-19T04:15:17Z'
                        IsBusinessOrder: false
                        IsPrime: false
                        IsAccessPointOrder: false
                        IsGlobalExpressEnabled: false
                        IsPremiumOrder: false
                        IsSoldByAB: false
                        IsIBA: false
                        EasyShipShipmentStatus: PendingPickUp
                        ElectronicInvoiceStatus: NotRequired
              - request:
                  parameters:
                    CreatedAfter:
                      value: TEST_CASE_200_NEXT_TOKEN
                    MarketplaceIds:
                      value:
                        - ATVPDKIKX0DER
                response:
                  payload:
                    NextToken: 2YgYW55IGNhcm5hbCBwbGVhc3VyZS4
                    Orders:
                      - AmazonOrderId: 902-3159896-1390916
                        PurchaseDate: '2017-01-20T19:49:35Z'
                        LastUpdateDate: '2017-01-20T19:49:35Z'
                        OrderStatus: Pending
                        FulfillmentChannel: SellerFulfilled
                        NumberOfItemsShipped: 0
                        NumberOfItemsUnshipped: 0
                        PaymentMethod: Other
                        PaymentMethodDetails:
                          - CreditCard
                          - GiftCerificate
                        MarketplaceId: ATVPDKIKX0DER
                        ShipmentServiceLevelCategory: Standard
                        OrderType: StandardOrder
                        EasyShipShipmentStatus: PendingPickUp
                        ElectronicInvoiceStatus: NotRequired
                        EarliestShipDate: '2017-01-20T19:51:16Z'
                        LatestShipDate: '2017-01-25T19:49:35Z'
                        IsBusinessOrder: false
                        IsPrime: false
                        IsAccessPointOrder: false
                        IsGlobalExpressEnabled: false
                        IsPremiumOrder: false
                        IsSoldByAB: false
                        IsIBA: false
              - request:
                  parameters:
                    CreatedAfter:
                      value: TEST_CASE_200_NEXT_TOKEN
                    MarketplaceIds:
                      value:
                        - ATVPDKIKX0DER
                    NextToken:
                      value: 2YgYW55IGNhcm5hbCBwbGVhc3VyZS4
                response:
                  payload:
                    Orders:
                      - AmazonOrderId: 902-3159896-1390916
                        PurchaseDate: '2017-01-20T19:49:35Z'
                        LastUpdateDate: '2017-01-20T19:49:35Z'
                        OrderStatus: Pending
                        FulfillmentChannel: SellerFulfilled
                        NumberOfItemsShipped: 0
                        NumberOfItemsUnshipped: 0
                        PaymentMethod: Other
                        PaymentMethodDetails:
                          - CreditCard
                          - GiftCerificate
                        MarketplaceId: ATVPDKIKX0DER
                        ShipmentServiceLevelCategory: Standard
                        OrderType: StandardOrder
                        EasyShipShipmentStatus: PendingPickUp
                        ElectronicInvoiceStatus: NotRequired
                        EarliestShipDate: '2017-01-20T19:51:16Z'
                        LatestShipDate: '2017-01-25T19:49:35Z'
                        IsBusinessOrder: false
                        IsPrime: false
                        IsAccessPointOrder: false
                        IsGlobalExpressEnabled: false
                        IsPremiumOrder: false
                        IsSoldByAB: false
                        IsIBA: false
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrdersResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    CreatedAfter:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid Input
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrdersResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrdersResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrdersResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrdersResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrdersResponse'
  /orders/v0/orders/{orderId}:
    get:
      tags:
        - orders_ordersV0
      description: >-
        Returns the order that you specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0167 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          description: An Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderResponse'
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  PurchaseDate: '2017-01-20T19:49:35Z'
                  LastUpdateDate: '2017-01-20T19:49:35Z'
                  OrderStatus: Pending
                  FulfillmentChannel: SellerFulfilled
                  NumberOfItemsShipped: 0
                  NumberOfItemsUnshipped: 0
                  PaymentMethod: Other
                  PaymentMethodDetails:
                    - CreditCard
                    - GiftCerificate
                  MarketplaceId: ATVPDKIKX0DER
                  ShipmentServiceLevelCategory: Standard
                  OrderType: StandardOrder
                  EarliestShipDate: '2017-01-20T19:51:16Z'
                  LatestShipDate: '2017-01-25T19:49:35Z'
                  IsBusinessOrder: false
                  IsPrime: false
                  IsGlobalExpressEnabled: false
                  IsPremiumOrder: false
                  IsSoldByAB: false
                  IsIBA: false
                  DefaultShipFromLocationAddress:
                    Name: MFNIntegrationTestMerchant
                    AddressLine1: 2201 WESTLAKE AVE
                    City: SEATTLE
                    StateOrRegion: WA
                    PostalCode: 98121-2778
                    CountryCode: US
                    Phone: +1 480-386-0930 ext. 73824
                    AddressType: Commercial
                  FulfillmentInstruction:
                    FulfillmentSupplySourceId: sampleSupplySourceId
                  IsISPU: false
                  IsAccessPointOrder: false
                  ShippingAddress:
                    Name: Michigan address
                    AddressLine1: 1 Cross St.
                    City: Canton
                    StateOrRegion: MI
                    PostalCode: '48817'
                    CountryCode: US
                  BuyerInfo:
                    BuyerEmail: user@example.com
                    BuyerName: John Doe
                    BuyerTaxInfo:
                      CompanyLegalName: A Company Name
                    PurchaseOrderNumber: '1234567890123'
                  AutomatedShippingSettings:
                    HasAutomatedShippingSettings: false
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_200
                response:
                  payload:
                    AmazonOrderId: 902-1845936-5435065
                    PurchaseDate: '1970-01-19T03:58:30Z'
                    LastUpdateDate: '1970-01-19T03:58:32Z'
                    OrderStatus: Unshipped
                    FulfillmentChannel: MFN
                    SalesChannel: Amazon.com
                    ShipServiceLevel: Std US D2D Dom
                    OrderTotal:
                      CurrencyCode: USD
                      Amount: '11.01'
                    NumberOfItemsShipped: 0
                    NumberOfItemsUnshipped: 1
                    PaymentMethod: Other
                    PaymentMethodDetails:
                      - Standard
                    IsReplacementOrder: false
                    MarketplaceId: ATVPDKIKX0DER
                    ShipmentServiceLevelCategory: Standard
                    OrderType: StandardOrder
                    EarliestShipDate: '1970-01-19T03:59:27Z'
                    LatestShipDate: '1970-01-19T04:05:13Z'
                    EarliestDeliveryDate: '1970-01-19T04:06:39Z'
                    LatestDeliveryDate: '1970-01-19T04:15:17Z'
                    IsBusinessOrder: false
                    IsPrime: false
                    IsGlobalExpressEnabled: false
                    IsPremiumOrder: false
                    IsSoldByAB: false
                    IsIBA: false
                    DefaultShipFromLocationAddress:
                      Name: MFNIntegrationTestMerchant
                      AddressLine1: 2201 WESTLAKE AVE
                      City: SEATTLE
                      StateOrRegion: WA
                      PostalCode: 98121-2778
                      CountryCode: US
                      Phone: +1 480-386-0930 ext. 73824
                      AddressType: Commercial
                    FulfillmentInstruction:
                      FulfillmentSupplySourceId: sampleSupplySourceId
                    IsISPU: false
                    IsAccessPointOrder: false
                    AutomatedShippingSettings:
                      HasAutomatedShippingSettings: false
                    EasyShipShipmentStatus: PendingPickUp
                    ElectronicInvoiceStatus: NotRequired
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_IBA_200
                response:
                  payload:
                    AmazonOrderId: 921-3175655-0452641
                    PurchaseDate: '2019-05-07T15:42:57.058Z'
                    LastUpdateDate: '2019-05-08T21:59:59Z'
                    OrderStatus: Shipped
                    FulfillmentChannel: AFN
                    SalesChannel: Amazon.de
                    ShipServiceLevel: Standard
                    OrderTotal:
                      CurrencyCode: EUR
                      Amount: '100.00'
                    NumberOfItemsShipped: 1
                    NumberOfItemsUnshipped: 0
                    PaymentMethod: Other
                    PaymentMethodDetails:
                      - Invoice
                    IsReplacementOrder: false
                    MarketplaceId: A1PA6795UKMFR9
                    ShipmentServiceLevelCategory: Standard
                    OrderType: StandardOrder
                    EarliestShipDate: '1970-01-19T03:59:27Z'
                    LatestShipDate: '2019-05-08T21:59:59Z'
                    EarliestDeliveryDate: '2019-05-10T21:59:59Z'
                    LatestDeliveryDate: '2019-05-12T21:59:59Z'
                    IsBusinessOrder: true
                    IsPrime: false
                    IsGlobalExpressEnabled: false
                    IsPremiumOrder: false
                    IsSoldByAB: true
                    IsIBA: true
                    DefaultShipFromLocationAddress:
                      Name: MFNIntegrationTestMerchant
                      AddressLine1: 2201 WESTLAKE AVE
                      City: SEATTLE
                      StateOrRegion: WA
                      PostalCode: 98121-2778
                      CountryCode: US
                      Phone: +1 480-386-0930 ext. 73824
                      AddressType: Commercial
                    FulfillmentInstruction:
                      FulfillmentSupplySourceId: sampleSupplySourceId
                    IsISPU: false
                    IsAccessPointOrder: false
                    AutomatedShippingSettings:
                      HasAutomatedShippingSettings: false
                    EasyShipShipmentStatus: PendingPickUp
                    ElectronicInvoiceStatus: NotRequired
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid Input
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderResponse'
  /orders/v0/orders/{orderId}/buyerInfo:
    get:
      tags:
        - orders_ordersV0
      description: >-
        Returns buyer information for the order that you specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0167 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getOrderBuyerInfo
      parameters:
        - name: orderId
          in: path
          description: An orderId is an Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderBuyerInfoResponse'
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  BuyerEmail: user@example.com
                  BuyerName: John Smith
                  BuyerTaxInfo:
                    CompanyLegalName: Company Name
                  PurchaseOrderNumber: '1234567890123'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_200
                response:
                  payload:
                    AmazonOrderId: 902-1845936-5435065
                    BuyerEmail: fzyrv6gwkhbb15c@example.com
                    BuyerName: MFNIntegrationTestMerchant
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderBuyerInfoResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid Input
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderBuyerInfoResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderBuyerInfoResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderBuyerInfoResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderBuyerInfoResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderBuyerInfoResponse'
  /orders/v0/orders/{orderId}/address:
    get:
      tags:
        - orders_ordersV0
      description: >-
        Returns the shipping address for the order that you specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0167 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getOrderAddress
      parameters:
        - name: orderId
          in: path
          description: An orderId is an Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderAddressResponse'
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  ShippingAddress:
                    Name: Michigan address
                    AddressLine1: 1 cross st
                    City: Canton
                    StateOrRegion: MI
                    PostalCode: '48817'
                    CountryCode: US
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_200
                response:
                  payload:
                    AmazonOrderId: 902-1845936-5435065
                    ShippingAddress:
                      Name: MFNIntegrationTestMerchant
                      AddressLine1: 2201 WESTLAKE AVE
                      City: SEATTLE
                      StateOrRegion: WA
                      PostalCode: 98121-2778
                      CountryCode: US
                      Phone: +1 480-386-0930 ext. 73824
                      AddressType: Commercial
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderAddressResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid Input
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderAddressResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderAddressResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderAddressResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderAddressResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderAddressResponse'
  /orders/v0/orders/{orderId}/orderItems:
    get:
      tags:
        - orders_ordersV0
      description: >-
        Returns detailed order item information for the order that you specify.
        If NextToken is provided, it's used to retrieve the next page of order
        items.


        __Note__: When an order is in the Pending state (the order has been
        placed but payment has not been authorized), the getOrderItems operation
        does not return information about pricing, taxes, shipping charges, gift
        status or promotions for the order items in the order. After an order
        leaves the Pending state (this occurs when payment has been authorized)
        and enters the Unshipped, Partially Shipped, or Shipped state, the
        getOrderItems operation returns information about pricing, taxes,
        shipping charges, gift status and promotions for the order items in the
        order.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 30 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getOrderItems
      parameters:
        - name: orderId
          in: path
          description: An Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
        - name: NextToken
          in: query
          description: A string token returned in the response of your previous request.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsResponse'
              example:
                payload:
                  AmazonOrderId: 903-1671087-0812628
                  NextToken: 2YgYW55IGNhcm5hbCBwbGVhc3VyZS4
                  OrderItems:
                    - ASIN: BT0093TELA
                      OrderItemId: '68828574383266'
                      SellerSKU: CBA_OTF_1
                      Title: Example item name
                      QuantityOrdered: 1
                      QuantityShipped: 1
                      PointsGranted:
                        PointsNumber: 10
                        PointsMonetaryValue:
                          CurrencyCode: JPY
                          Amount: '10.00'
                      ItemPrice:
                        CurrencyCode: JPY
                        Amount: '25.99'
                      ShippingPrice:
                        CurrencyCode: JPY
                        Amount: '1.26'
                      ScheduledDeliveryEndDate: '2013-09-09T01:30:00Z'
                      ScheduledDeliveryStartDate: '2013-09-07T02:00:00Z'
                      CODFee:
                        CurrencyCode: JPY
                        Amount: '10.00'
                      CODFeeDiscount:
                        CurrencyCode: JPY
                        Amount: '1.00'
                      PriceDesignation: BusinessPrice
                      BuyerInfo:
                        BuyerCustomizedInfo:
                          CustomizedURL: >-
                            https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1
                        GiftMessageText: For you!
                        GiftWrapPrice:
                          CurrencyCode: GBP
                          Amount: '41.99'
                        GiftWrapLevel: Classic
                      BuyerRequestedCancel:
                        IsBuyerRequestedCancel: true
                        BuyerCancelReason: Found cheaper somewhere else.
                      SerialNumbers:
                        - '854'
                    - ASIN: BCTU1104UEFB
                      OrderItemId: '79039765272157'
                      SellerSKU: CBA_OTF_5
                      Title: Example item name
                      QuantityOrdered: 2
                      ItemPrice:
                        CurrencyCode: JPY
                        Amount: '17.95'
                      PromotionIds:
                        - FREESHIP
                      ConditionId: Used
                      ConditionSubtypeId: Mint
                      ConditionNote: Example ConditionNote
                      PriceDesignation: BusinessPrice
                      BuyerInfo:
                        BuyerCustomizedInfo:
                          CustomizedURL: >-
                            https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1
                        GiftMessageText: For you!
                        GiftWrapPrice:
                          CurrencyCode: JPY
                          Amount: '1.99'
                        GiftWrapLevel: Classic
                      BuyerRequestedCancel:
                        IsBuyerRequestedCancel: true
                        BuyerCancelReason: Found cheaper somewhere else.
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_200
                response:
                  payload:
                    AmazonOrderId: 902-1845936-5435065
                    OrderItems:
                      - ASIN: B00551Q3CS
                        OrderItemId: '05015851154158'
                        SellerSKU: NABetaASINB00551Q3CS
                        Title: B00551Q3CS [Card Book]
                        QuantityOrdered: 1
                        QuantityShipped: 0
                        ProductInfo:
                          NumberOfItems: 1
                        ItemPrice:
                          CurrencyCode: USD
                          Amount: '10.00'
                        ItemTax:
                          CurrencyCode: USD
                          Amount: '1.01'
                        PromotionDiscount:
                          CurrencyCode: USD
                          Amount: '0.00'
                        IsGift: false
                        ConditionId: New
                        ConditionSubtypeId: New
                        IsTransparency: false
                        SerialNumberRequired: false
                        IossNumber: ''
                        DeemedResellerCategory: IOSS
                        StoreChainStoreId: ISPU_StoreId
                        BuyerRequestedCancel:
                          IsBuyerRequestedCancel: true
                          BuyerCancelReason: Found cheaper somewhere else.
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid Input
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsResponse'
  /orders/v0/orders/{orderId}/orderItems/buyerInfo:
    get:
      tags:
        - orders_ordersV0
      description: >-
        Returns buyer information for the order items in the order that you
        specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 30 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getOrderItemsBuyerInfo
      parameters:
        - name: orderId
          in: path
          description: An Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
        - name: NextToken
          in: query
          description: A string token returned in the response of your previous request.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsBuyerInfoResponse'
              example:
                payload:
                  OrderItemId: 903-1671087-0812628
                  BuyerCustomizedInfo:
                    CustomizedURL: >-
                      https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1
                  GiftMessageText: For you!
                  GiftWrapPrice:
                    CurrencyCode: JPY
                    Amount: '1.99'
                  GiftWrapLevel: Classic
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_200
                response:
                  payload:
                    AmazonOrderId: 902-1845936-5435065
                    OrderItems:
                      - BuyerCustomizedInfo:
                          CustomizedURL: >-
                            https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1
                        GiftMessageText: Et toi!
                        GiftWrapPrice:
                          CurrencyCode: JPY
                          Amount: '1.99'
                        GiftWrapLevel: Classic
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsBuyerInfoResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid Input
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsBuyerInfoResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsBuyerInfoResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsBuyerInfoResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsBuyerInfoResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderItemsBuyerInfoResponse'
  /orders/v0/orders/{orderId}/shipment:
    post:
      tags:
        - orders_shipment
      description: >-
        Update the shipment status for an order that you specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 15 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: updateShipmentStatus
      parameters:
        - name: orderId
          in: path
          description: An Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
      requestBody:
        description: The request body for the updateShipmentStatus operation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0_UpdateShipmentStatusRequest'
        required: true
      responses:
        '204':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content: {}
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateShipmentStatusErrorResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        marketplaceId: '1'
                        shipmentStatus: ReadyForPickup
                response:
                  errors:
                    - code: InvalidInput
                      message: Marketplace id is not defined
                      details: '1001'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateShipmentStatusErrorResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateShipmentStatusErrorResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateShipmentStatusErrorResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateShipmentStatusErrorResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateShipmentStatusErrorResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateShipmentStatusErrorResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateShipmentStatusErrorResponse'
      x-codegen-request-body-name: payload
  /orders/v0/orders/{orderId}/regulatedInfo:
    get:
      tags:
        - orders_ordersV0
      description: >-
        Returns regulated information for the order that you specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 30 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getOrderRegulatedInfo
      parameters:
        - name: orderId
          in: path
          description: An orderId is an Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderRegulatedInfoResponse'
            PendingOrder:
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  RequiresDosageLabel: false
                  RegulatedInformation:
                    Fields:
                      - FieldId: pet_prescription_name
                        FieldLabel: Name
                        FieldType: Text
                        FieldValue: Ruffus
                      - FieldId: pet_prescription_species
                        FieldLabel: Species
                        FieldType: Text
                        FieldValue: Dog
                  RegulatedOrderVerificationStatus:
                    Status: Pending
                    RequiresMerchantAction: true
                    ValidRejectionReasons:
                      - RejectionReasonId: shield_pom_vps_reject_product
                        RejectionReasonDescription: This medicine is not suitable for your pet.
                      - RejectionReasonId: shield_pom_vps_reject_age
                        RejectionReasonDescription: Your pet is too young for this medicine.
                      - RejectionReasonId: shield_pom_vps_reject_incorrect_weight
                        RejectionReasonDescription: Your pet's weight does not match ordered size.
            ApprovedOrder:
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  RequiresDosageLabel: false
                  RegulatedInformation:
                    Fields:
                      - FieldId: pet_prescription_name
                        FieldLabel: Name
                        FieldType: Text
                        FieldValue: Ruffus
                      - FieldId: pet_prescription_species
                        FieldLabel: Species
                        FieldType: Text
                        FieldValue: Dog
                  RegulatedOrderVerificationStatus:
                    Status: Approved
                    RequiresMerchantAction: false
                    ValidRejectionReasons: []
                    ExternalReviewerId: externalId
                    ReviewDate: '1970-01-19T03:59:27Z'
            RejectedOrder:
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  RequiresDosageLabel: false
                  RegulatedInformation:
                    Fields:
                      - FieldId: pet_prescription_name
                        FieldLabel: Name
                        FieldType: Text
                        FieldValue: Ruffus
                      - FieldId: pet_prescription_species
                        FieldLabel: Species
                        FieldType: Text
                        FieldValue: Dog
                  RegulatedOrderVerificationStatus:
                    Status: Rejected
                    RequiresMerchantAction: false
                    RejectionReason:
                      RejectionReasonId: shield_pom_vps_reject_species
                      RejectionReasonDescription: This medicine is not suitable for this type of pet.
                    ValidRejectionReasons: []
                    ExternalReviewerId: externalId
                    ReviewDate: '1970-01-19T03:59:27Z'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: 902-3159896-1390916
                response:
                  payload:
                    AmazonOrderId: 902-3159896-1390916
                    RequiresDosageLabel: false
                    RegulatedInformation:
                      Fields:
                        - FieldId: pet_prescription_name
                          FieldLabel: Name
                          FieldType: Text
                          FieldValue: Ruffus
                        - FieldId: pet_prescription_species
                          FieldLabel: Species
                          FieldType: Text
                          FieldValue: Dog
                    RegulatedOrderVerificationStatus:
                      Status: Pending
                      RequiresMerchantAction: true
                      ValidRejectionReasons:
                        - RejectionReasonId: shield_pom_vps_reject_product
                          RejectionReasonDescription: This medicine is not suitable for your pet.
                        - RejectionReasonId: shield_pom_vps_reject_age
                          RejectionReasonDescription: Your pet is too young for this medicine.
                        - RejectionReasonId: shield_pom_vps_reject_incorrect_weight
                          RejectionReasonDescription: Your pet's weight does not match ordered size.
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderRegulatedInfoResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid Input
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderRegulatedInfoResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderRegulatedInfoResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderRegulatedInfoResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderRegulatedInfoResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetOrderRegulatedInfoResponse'
    patch:
      tags:
        - orders_ordersV0
      description: >-
        Updates (approves or rejects) the verification status of an order
        containing regulated products.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 30 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: updateVerificationStatus
      parameters:
        - name: orderId
          in: path
          description: An orderId is an Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
      requestBody:
        description: The request body for the updateVerificationStatus operation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0_UpdateVerificationStatusRequest'
        required: true
      responses:
        '204':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content: {}
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: 902-3159896-1390916
                    body:
                      value:
                        regulatedOrderVerificationStatus:
                          status: Rejected
                          externalReviewerId: reviewer1234
                          rejectionReasonId: shield_pom_vps_reject_incorrect_weight
                response: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateVerificationStatusErrorResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: 902-3159896-1390916
                    body:
                      value:
                        regulatedOrderVerificationStatus:
                          status: Rejected
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing request parameter: rejectionReasonId.'
                    - code: InvalidInput
                      message: 'Missing request parameter: externalReviewerId.'
              - request:
                  parameters:
                    orderId:
                      value: 902-3159896-1390916
                    body:
                      value:
                        regulatedOrderVerificationStatus:
                          status: Cancelled
                          externalReviewerId: reviewer1234
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Invalid request parameter `status`. Must be one of
                        [Approved, Rejected].
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateVerificationStatusErrorResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateVerificationStatusErrorResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateVerificationStatusErrorResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateVerificationStatusErrorResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateVerificationStatusErrorResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateVerificationStatusErrorResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_UpdateVerificationStatusErrorResponse'
      x-codegen-request-body-name: payload
  /orders/v0/orders/{orderId}/shipmentConfirmation:
    post:
      tags:
        - orders_ordersV0
      description: >-
        Updates the shipment confirmation status for a specified order.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 2 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values then those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: confirmShipment
      parameters:
        - name: orderId
          in: path
          description: An Amazon-defined order identifier, in 3-7-7 format.
          required: true
          schema:
            type: string
      requestBody:
        description: Request body of confirmShipment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0_ConfirmShipmentRequest'
        required: true
      responses:
        '204':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content: {}
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: 902-1106328-1059050
                    body:
                      value:
                        marketplaceId: ATVPDKIKX0DER
                        packageDetail:
                          packageReferenceId: '1'
                          carrierCode: FedEx
                          carrierName: FedEx
                          shippingMethod: FedEx Ground
                          trackingNumber: '112345678'
                          shipDate: '2022-02-11T01:00:00.000Z'
                          shipFromSupplySourceId: 057d3fcc-b750-419f-bbcd-4d340c60c430
                          orderItems:
                            - orderItemId: '79039765272157'
                              quantity: 1
                              transparencyCodes:
                                - '09876543211234567890'
                response: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ConfirmShipmentErrorResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    orderId:
                      value: 902-1106328-1059050
                    body:
                      value:
                        marketplaceId: ATVPDKIKX0DER
                        packageDetail:
                          packageReferenceId: '1'
                          carrierCode: FedEx
                          carrierName: FedEx
                          shippingMethod: FedEx Ground
                          trackingNumber: '112345678'
                          shipDate: 02/21/2022
                          shipFromSupplySourceId: 057d3fcc-b750-419f-bbcd-4d340c60c430
                          orderItems:
                            - orderItemId: '79039765272157'
                              quantity: 1
                              transparencyCodes:
                                - '09876543211234567890'
                response:
                  errors:
                    - code: Invalid Input
                      message: Invalid Input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ConfirmShipmentErrorResponse'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ConfirmShipmentErrorResponse'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ConfirmShipmentErrorResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ConfirmShipmentErrorResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ConfirmShipmentErrorResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_ConfirmShipmentErrorResponse'
      x-codegen-request-body-name: payload
  /products/fees/v0/listings/{SellerSKU}/feesEstimate:
    post:
      tags:
        - productFees_fees
      description: >-
        Returns the estimated fees for the item indicated by the specified
        seller SKU in the marketplace specified in the request body.


        **Note:** The parameters associated with this operation may contain
        special characters that require URL encoding to call the API. To avoid
        errors with SKUs when encoding URLs, refer to [URL
        Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).


        You can call `getMyFeesEstimateForSKU` for an item on behalf of a
        selling partner before the selling partner sets the item's price. The
        selling partner can then take any estimated fees into account. Each fees
        estimate request must include an original identifier. This identifier is
        included in the fees estimate so that you can correlate a fees estimate
        with the original request.


        **Note:** This identifier value is used to identify an estimate. Actual
        costs may vary. Search "fees" in [Seller
        Central](https://sellercentral.amazon.com/) and consult the
        store-specific fee schedule for the most up-to-date information.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 2 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getMyFeesEstimateForSKU
      parameters:
        - name: SellerSKU
          in: path
          description: >-
            Used to identify an item in the given marketplace. SellerSKU is
            qualified by the seller's SellerId, which is included with every
            operation that you submit.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0_GetMyFeesEstimateRequest'
        required: true
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        FeesEstimateRequest:
                          MarketplaceId: ATVPDKIKX0DER
                          IsAmazonFulfilled: false
                          PriceToEstimateFees:
                            ListingPrice:
                              CurrencyCode: USD
                              Amount: 10
                            Shipping:
                              CurrencyCode: USD
                              Amount: 10
                            Points:
                              PointsNumber: 0
                              PointsMonetaryValue:
                                CurrencyCode: USD
                                Amount: 0
                          Identifier: UmaS1
                response:
                  payload:
                    FeesEstimateResult:
                      Status: Success
                      FeesEstimateIdentifier:
                        MarketplaceId: ATVPDKIKX0DER
                        IdType: ASIN
                        SellerId: AXXXXXXXXXXXXX
                        SellerInputIdentifier: UmaS1
                        IsAmazonFulfilled: false
                        IdValue: B00V5DG6IQ
                        PriceToEstimateFees:
                          ListingPrice:
                            CurrencyCode: USD
                            Amount: 10
                          Shipping:
                            CurrencyCode: USD
                            Amount: 10
                          Points:
                            PointsNumber: 0
                            PointsMonetaryValue:
                              CurrencyCode: USD
                              Amount: 0
                      FeesEstimate:
                        TimeOfFeesEstimation: Mon Oct 28 18:49:32 UTC 2019
                        TotalFeesEstimate:
                          CurrencyCode: USD
                          Amount: 3
                        FeeDetailList: []
                      Error:
                        Type: ''
                        Code: ''
                        Message: ''
                        Detail: []
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        FeesEstimateRequest:
                          MarketplaceId: WRNGMRKTPLCE
                response:
                  errors:
                    - code: InvalidInput
                      message: Incorrect Marketplace identifier.
                      details: ''
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
      x-codegen-request-body-name: body
  /products/fees/v0/items/{Asin}/feesEstimate:
    post:
      tags:
        - productFees_fees
      description: >-
        Returns the estimated fees for the item indicated by the specified ASIN
        in the marketplace specified in the request body.


        You can call `getMyFeesEstimateForASIN` for an item on behalf of a
        selling partner before the selling partner sets the item's price. The
        selling partner can then take estimated fees into account. Each fees
        request must include an original identifier. This identifier is included
        in the fees estimate so you can correlate a fees estimate with the
        original request.


        **Note:** This identifier value is used to identify an estimate. Actual
        costs may vary. Search "fees" in [Seller
        Central](https://sellercentral.amazon.com/) and consult the
        store-specific fee schedule for the most up-to-date information.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 2 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getMyFeesEstimateForASIN
      parameters:
        - name: Asin
          in: path
          description: The Amazon Standard Identification Number (ASIN) of the item.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0_GetMyFeesEstimateRequest'
        required: true
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        FeesEstimateRequest:
                          MarketplaceId: ATVPDKIKX0DER
                          IsAmazonFulfilled: false
                          PriceToEstimateFees:
                            ListingPrice:
                              CurrencyCode: USD
                              Amount: 10
                            Shipping:
                              CurrencyCode: USD
                              Amount: 10
                            Points:
                              PointsNumber: 0
                              PointsMonetaryValue:
                                CurrencyCode: USD
                                Amount: 0
                          Identifier: UmaS1
                response:
                  payload:
                    FeesEstimateResult:
                      Status: Success
                      FeesEstimateIdentifier:
                        MarketplaceId: ATVPDKIKX0DER
                        IdType: ASIN
                        SellerId: AXXXXXXXXXXXXX
                        SellerInputIdentifier: UmaS1
                        IsAmazonFulfilled: false
                        IdValue: B00V5DG6IQ
                        PriceToEstimateFees:
                          ListingPrice:
                            CurrencyCode: USD
                            Amount: 10
                          Shipping:
                            CurrencyCode: USD
                            Amount: 10
                          Points:
                            PointsNumber: 0
                            PointsMonetaryValue:
                              CurrencyCode: USD
                              Amount: 0
                      FeesEstimate:
                        TimeOfFeesEstimation: Mon Oct 28 18:49:32 UTC 2019
                        TotalFeesEstimate:
                          CurrencyCode: USD
                          Amount: 3
                        FeeDetailList: []
                      Error:
                        Type: ''
                        Code: ''
                        Message: ''
                        Detail: []
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        FeesEstimateRequest:
                          MarketplaceId: WRNGMRKTPLCE
                response:
                  errors:
                    - code: InvalidInput
                      message: Incorrect Marketplace identifier.
                      details: ''
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimateResponse'
      x-codegen-request-body-name: body
  /products/fees/v0/feesEstimate:
    post:
      tags:
        - productFees_fees
      description: >-
        Returns the estimated fees for a list of products.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.5 | 1 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getMyFeesEstimates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0_GetMyFeesEstimatesRequest'
        required: true
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimatesResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        - FeesEstimateRequest:
                            MarketplaceId: ATVPDKIKX0DER
                            IsAmazonFulfilled: false
                            PriceToEstimateFees:
                              ListingPrice:
                                CurrencyCode: USD
                                Amount: 10
                              Shipping:
                                CurrencyCode: USD
                                Amount: 10
                              Points:
                                PointsNumber: 0
                                PointsMonetaryValue:
                                  CurrencyCode: USD
                                  Amount: 0
                            Identifier: UmaS1
                          IdType: ASIN
                          IdValue: asin123
                        - FeesEstimateRequest:
                            MarketplaceId: A1AM78C64UM0Y8
                            IsAmazonFulfilled: true
                            PriceToEstimateFees:
                              ListingPrice:
                                CurrencyCode: MXN
                                Amount: 10
                              Shipping:
                                CurrencyCode: MXN
                                Amount: 10
                              Points:
                                PointsNumber: 0
                                PointsMonetaryValue:
                                  CurrencyCode: MXN
                                  Amount: 0
                            Identifier: UmaS2
                          IdType: SellerSKU
                          IdValue: sku123
                response:
                  - Status: Success
                    FeesEstimateIdentifier:
                      MarketplaceId: ATVPDKIKX0DER
                      IdType: ASIN
                      SellerId: AXXXXXXXXXXXXX
                      SellerInputIdentifier: UmaS1
                      IsAmazonFulfilled: false
                      IdValue: asin123
                      PriceToEstimateFees:
                        ListingPrice:
                          CurrencyCode: USD
                          Amount: 10
                        Shipping:
                          CurrencyCode: USD
                          Amount: 10
                        Points:
                          PointsNumber: 0
                          PointsMonetaryValue:
                            CurrencyCode: USD
                            Amount: 0
                    FeesEstimate:
                      TimeOfFeesEstimation: Mon Oct 28 18:49:32 UTC 2019
                      TotalFeesEstimate:
                        CurrencyCode: USD
                        Amount: 3
                      FeeDetailList: []
                    Error:
                      Type: ''
                      Code: ''
                      Message: ''
                      Detail: []
                  - Status: Success
                    FeesEstimateIdentifier:
                      MarketplaceId: A1AM78C64UM0Y8
                      IdType: SellerSKU
                      SellerId: AXXXXXXXXXXXXX
                      SellerInputIdentifier: UmaS2
                      IsAmazonFulfilled: false
                      IdValue: sku123
                      PriceToEstimateFees:
                        ListingPrice:
                          CurrencyCode: MXN
                          Amount: 10
                        Shipping:
                          CurrencyCode: MXN
                          Amount: 10
                        Points:
                          PointsNumber: 0
                          PointsMonetaryValue:
                            CurrencyCode: MXN
                            Amount: 0
                    FeesEstimate:
                      TimeOfFeesEstimation: Mon Oct 28 18:49:32 UTC 2019
                      TotalFeesEstimate:
                        CurrencyCode: MXN
                        Amount: 3
                      FeeDetailList: []
                    Error:
                      Type: ''
                      Code: ''
                      Message: ''
                      Detail: []
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimatesErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        - FeesEstimateRequest:
                            MarketplaceId: INVALIDMARKETPLACEID
                            IsAmazonFulfilled: false
                            PriceToEstimateFees:
                              ListingPrice:
                                CurrencyCode: USD
                                Amount: 10
                              Shipping:
                                CurrencyCode: USD
                                Amount: 10
                              Points:
                                PointsNumber: 0
                                PointsMonetaryValue:
                                  CurrencyCode: USD
                                  Amount: 0
                            Identifier: UmaS1
                          IdType: ASIN
                          IdValue: asin123
                response:
                  errors:
                    - code: InvalidInput
                      message: Incorrect Marketplace identifier.
                      details: ''
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimatesErrorList'
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include **Access Denied**, **Unauthorized**, **Expired Token**, or
            **Invalid Signature**.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimatesErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimatesErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimatesErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimatesErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0_GetMyFeesEstimatesErrorList'
      x-codegen-request-body-name: body
  /batches/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice:
    post:
      tags:
        - productPricing_productPricing
      description: >-
        Returns the set of responses that correspond to the batched list of up
        to 40 requests defined in the request body. The response for each
        successful (HTTP status code 200) request in the set includes the
        computed listing price at or below which a seller can expect to become
        the featured offer (before applicable promotions). This is called the
        featured offer expected price (FOEP). Featured offer is not guaranteed,
        because competing offers may change, and different offers may be
        featured based on other factors, including fulfillment capabilities to a
        specific customer. The response to an unsuccessful request includes the
        available error text.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.033 | 1 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getFeaturedOfferExpectedPriceBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/2022-05-01_GetFeaturedOfferExpectedPriceBatchRequest
        required: true
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/2022-05-01_GetFeaturedOfferExpectedPriceBatchResponse
              example:
                responses:
                  - request:
                      marketplaceId: MARKETPLACE_ID
                      sku: MY_SKU
                    status:
                      statusCode: 200
                      reasonPhrase: Success
                    headers: {}
                    body:
                      offerIdentifier:
                        asin: ASIN
                        sku: MY_SKU
                        marketplaceId: MARKETPLACE_ID
                        fulfillmentType: AFN
                        sellerId: MY_SELLER_ID
                      featuredOfferExpectedPriceResults:
                        - featuredOfferExpectedPrice:
                            listingPrice:
                              amount: 10
                              currencyCode: USD
                            points:
                              pointsNumber: 3
                              pointsMonetaryValue:
                                amount: 0.03
                                currencyCode: USD
                          resultStatus: VALID_FOEP
                          competingFeaturedOffer:
                            offerIdentifier:
                              asin: ASIN
                              marketplaceId: MARKETPLACE_ID
                              fulfillmentType: AFN
                              sellerId: OTHER_SELLER_ID
                            condition: New
                            price:
                              listingPrice:
                                amount: 12
                                currencyCode: USD
                              shippingPrice:
                                amount: 0
                                currencyCode: USD
                              points:
                                pointsNumber: 3
                                pointsMonetaryValue:
                                  amount: 0.03
                                  currencyCode: USD
                          currentFeaturedOffer:
                            offerIdentifier:
                              asin: ASIN
                              marketplaceId: MARKETPLACE_ID
                              fulfillmentType: AFN
                              sellerId: OTHER_SELLER_ID
                            condition: New
                            price:
                              listingPrice:
                                amount: 12
                                currencyCode: USD
                              shippingPrice:
                                amount: 0
                                currencyCode: USD
                              points:
                                pointsNumber: 3
                                pointsMonetaryValue:
                                  amount: 0.03
                                  currencyCode: USD
                  - request:
                      marketplaceId: MARKETPLACE_ID
                      sku: MY_UNIQUE_SKU
                    status:
                      statusCode: 200
                      reasonPhrase: Success
                    headers: {}
                    body:
                      offerIdentifier:
                        asin: ASIN
                        sku: MY_UNIQUE_SKU
                        marketplaceId: MARKETPLACE_ID
                        fulfillmentType: AFN
                        sellerId: MY_SELLER_ID
                      featuredOfferExpectedPriceResults:
                        - resultStatus: NO_COMPETING_OFFERS
                          currentFeaturedOffer:
                            offerIdentifier:
                              asin: ASIN
                              marketplaceId: MARKETPLACE_ID
                              fulfillmentType: AFN
                              sellerId: MY_SELLER_ID
                            condition: New
                            price:
                              listingPrice:
                                amount: 12
                                currencyCode: USD
                              shippingPrice:
                                amount: 0
                                currencyCode: USD
                              points:
                                pointsNumber: 3
                                pointsMonetaryValue:
                                  amount: 0.03
                                  currencyCode: USD
                  - request:
                      marketplaceId: MARKETPLACE_ID
                      sku: MY_NONEXISTENT_SKU
                    status:
                      statusCode: 400
                      reasonPhrase: Client Error
                    headers: {}
                    body:
                      errors:
                        - code: INVALID_SKU
                          message: >-
                            The requested SKU does not exist for the seller in
                            the requested marketplace.
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        requests:
                          - marketplaceId: MARKETPLACE_ID
                            sku: MY_SKU
                            method: GET
                            uri: >-
                              /products/pricing/2022-05-01/offer/featuredOfferExpectedPrice
                          - marketplaceId: MARKETPLACE_ID
                            sku: MY_UNIQUE_SKU
                            method: GET
                            uri: >-
                              /products/pricing/2022-05-01/offer/featuredOfferExpectedPrice
                          - marketplaceId: MARKETPLACE_ID
                            sku: INVALID_SKU
                            method: GET
                            uri: >-
                              /products/pricing/2022-05-01/offer/featuredOfferExpectedPrice
                response:
                  responses:
                    - request:
                        marketplaceId: MARKETPLACE_ID
                        sku: MY_SKU
                      status:
                        statusCode: 200
                        reasonPhrase: Success
                      headers: {}
                      body:
                        offerIdentifier:
                          asin: ASIN
                          sku: MY_SKU
                          marketplaceId: MARKETPLACE_ID
                          fulfillmentType: AFN
                          sellerId: MY_SELLER_ID
                        featuredOfferExpectedPriceResults:
                          - featuredOfferExpectedPrice:
                              listingPrice:
                                amount: 10
                                currencyCode: USD
                              points:
                                pointsNumber: 3
                                pointsMonetaryValue:
                                  amount: 0.03
                                  currencyCode: USD
                            resultStatus: VALID_FOEP
                            competingFeaturedOffer:
                              offerIdentifier:
                                asin: ASIN
                                marketplaceId: MARKETPLACE_ID
                                fulfillmentType: AFN
                                sellerId: OTHER_SELLER_ID
                              condition: New
                              price:
                                listingPrice:
                                  amount: 12
                                  currencyCode: USD
                                shippingPrice:
                                  amount: 0
                                  currencyCode: USD
                                points:
                                  pointsNumber: 3
                                  pointsMonetaryValue:
                                    amount: 0.03
                                    currencyCode: USD
                            currentFeaturedOffer:
                              offerIdentifier:
                                asin: ASIN
                                marketplaceId: MARKETPLACE_ID
                                fulfillmentType: AFN
                                sellerId: OTHER_SELLER_ID
                              condition: New
                              price:
                                listingPrice:
                                  amount: 12
                                  currencyCode: USD
                                shippingPrice:
                                  amount: 0
                                  currencyCode: USD
                                points:
                                  pointsNumber: 3
                                  pointsMonetaryValue:
                                    amount: 0.03
                                    currencyCode: USD
                    - request:
                        marketplaceId: MARKETPLACE_ID
                        sku: MY_UNIQUE_SKU
                      status:
                        statusCode: 200
                        reasonPhrase: Success
                      headers: {}
                      body:
                        offerIdentifier:
                          asin: ASIN
                          sku: MY_UNIQUE_SKU
                          marketplaceId: MARKETPLACE_ID
                          fulfillmentType: AFN
                          sellerId: MY_SELLER_ID
                        featuredOfferExpectedPriceResults:
                          - resultStatus: NO_COMPETING_OFFERS
                            currentFeaturedOffer:
                              offerIdentifier:
                                asin: ASIN
                                marketplaceId: MARKETPLACE_ID
                                fulfillmentType: AFN
                                sellerId: MY_SELLER_ID
                              condition: New
                              price:
                                listingPrice:
                                  amount: 12
                                  currencyCode: USD
                                shippingPrice:
                                  amount: 0
                                  currencyCode: USD
                                points:
                                  pointsNumber: 3
                                  pointsMonetaryValue:
                                    amount: 0.03
                                    currencyCode: USD
                    - request:
                        marketplaceId: MARKETPLACE_ID
                        sku: MY_NONEXISTENT_SKU
                      status:
                        statusCode: 400
                        reasonPhrase: Client Error
                      headers: {}
                      body:
                        errors:
                          - code: INVALID_SKU
                            message: >-
                              The requested SKU does not exist for the seller in
                              the requested marketplace.
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-05-01_Errors'
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-05-01_Errors'
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-05-01_Errors'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-05-01_Errors'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-05-01_Errors'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-05-01_Errors'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2022-05-01_Errors'
      x-codegen-request-body-name: getFeaturedOfferExpectedPriceBatchRequestBody
  /reports/2021-06-30/reports:
    get:
      tags:
        - reports_reports
      description: >-
        Returns report details for the reports that match the filters that you
        specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0222 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getReports
      parameters:
        - name: reportTypes
          in: query
          description: >-
            A list of report types used to filter reports. Refer to [Report Type
            Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values)
            for more information. When reportTypes is provided, the other filter
            parameters (processingStatuses, marketplaceIds, createdSince,
            createdUntil) and pageSize may also be provided. Either reportTypes
            or nextToken is required.
          style: form
          explode: false
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              type: string
        - name: processingStatuses
          in: query
          description: A list of processing statuses used to filter reports.
          style: form
          explode: false
          schema:
            minItems: 1
            type: array
            items:
              type: string
              enum:
                - CANCELLED
                - DONE
                - FATAL
                - IN_PROGRESS
                - IN_QUEUE
              x-docgen-enum-table-extension:
                - value: CANCELLED
                  description: >-
                    The report was cancelled. There are two ways a report can be
                    cancelled: an explicit cancellation request before the
                    report starts processing, or an automatic cancellation if
                    there is no data to return.
                - value: DONE
                  description: The report has completed processing.
                - value: FATAL
                  description: The report was aborted due to a fatal error.
                - value: IN_PROGRESS
                  description: The report is being processed.
                - value: IN_QUEUE
                  description: >-
                    The report has not yet started processing. It may be waiting
                    for another IN_PROGRESS report.
        - name: marketplaceIds
          in: query
          description: >-
            A list of marketplace identifiers used to filter reports. The
            reports returned will match at least one of the marketplaces that
            you specify.
          style: form
          explode: false
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              type: string
        - name: pageSize
          in: query
          description: The maximum number of reports to return in a single call.
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 10
        - name: createdSince
          in: query
          description: >-
            The earliest report creation date and time for reports to include in
            the response, in ISO 8601 date time format. The default is 90 days
            ago. Reports are retained for a maximum of 90 days.
          schema:
            type: string
            format: date-time
        - name: createdUntil
          in: query
          description: >-
            The latest report creation date and time for reports to include in
            the response, in ISO 8601 date time format. The default is now.
          schema:
            type: string
            format: date-time
        - name: nextToken
          in: query
          description: >-
            A string token returned in the response to your previous request.
            nextToken is returned when the number of results exceeds the
            specified pageSize value. To get the next page of results, call the
            getReports operation and include this token as the only parameter.
            Specifying nextToken with any other parameters will cause the
            request to fail.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_GetReportsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportTypes:
                      value:
                        - FEE_DISCOUNTS_REPORT
                        - GET_AFN_INVENTORY_DATA
                    processingStatuses:
                      value:
                        - IN_QUEUE
                        - IN_PROGRESS
                response:
                  nextToken: >-
                    VGhpcyB0b2tlbiBpcyBvcGFxdWUgYW5kIGludGVudGlvbmFsbHkgb2JmdXNjYXRlZA==
                  reports:
                    - reportId: ReportId1
                      reportType: FEE_DISCOUNTS_REPORT
                      dataStartTime: '2019-12-11T13:47:20.677Z'
                      dataEndTime: '2019-12-12T13:47:20.677Z'
                      createdTime: '2019-12-10T13:47:20.677Z'
                      processingStatus: IN_PROGRESS
                      processingStartTime: '2019-12-10T13:47:20.677Z'
                      processingEndTime: '2019-12-12T13:47:20.677Z'
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportTypes:
                      value:
                        - FEE_DISCOUNTS_REPORT
                        - GET_AFN_INVENTORY_DATA
                    processingStatuses:
                      value:
                        - BAD_VALUE
                        - IN_PROGRESS
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input in processing status
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
    post:
      tags:
        - reports_reports
      description: >-
        Creates a report.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0167 | 15 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: createReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2021-06-30_CreateReportSpecification'
        required: true
      responses:
        '202':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_CreateReportResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        reportType: GET_MERCHANT_LISTINGS_ALL_DATA
                        dataStartTime: '2019-12-10T20:11:24.000Z'
                        marketplaceIds:
                          - A1PA6795UKMFR9
                          - ATVPDKIKX0DER
                response:
                  reportId: ID323
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        reportType: BAD_FEE_DISCOUNTS_REPORT
                        dataStartTime: '2019-12-10T20:11:24.000Z'
                        marketplaceIds:
                          - A1PA6795UKMFR9
                          - ATVPDKIKX0DER
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
      x-codegen-request-body-name: body
  /reports/2021-06-30/reports/{reportId}:
    get:
      tags:
        - reports_reports
      description: >-
        Returns report details (including the reportDocumentId, if available)
        for the report that you specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 2 | 15 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getReport
      parameters:
        - name: reportId
          in: path
          description: >-
            The identifier for the report. This identifier is unique only in
            combination with a seller ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_Report'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportId:
                      value: ID323
                response:
                  reportId: ReportId1
                  reportType: FEE_DISCOUNTS_REPORT
                  dataStartTime: '2019-12-11T13:47:20.677Z'
                  dataEndTime: '2019-12-12T13:47:20.677Z'
                  createdTime: '2019-12-10T13:47:20.677Z'
                  processingStatus: IN_PROGRESS
                  processingStartTime: '2019-12-10T13:47:20.677Z'
                  processingEndTime: '2019-12-12T13:47:20.677Z'
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportId:
                      value: badReportId1
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
    delete:
      tags:
        - reports_reports
      description: >-
        Cancels the report that you specify. Only reports with
        processingStatus=IN_QUEUE can be cancelled. Cancelled reports are
        returned in subsequent calls to the getReport and getReports operations.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0222 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: cancelReport
      parameters:
        - name: reportId
          in: path
          description: >-
            The identifier for the report. This identifier is unique only in
            combination with a seller ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content: {}
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportId:
                      value: ID
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
  /reports/2021-06-30/schedules:
    get:
      tags:
        - reports_reports
      description: >-
        Returns report schedule details that match the filters that you specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0222 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getReportSchedules
      parameters:
        - name: reportTypes
          in: query
          description: >-
            A list of report types used to filter report schedules. Refer to
            [Report Type
            Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values)
            for more information.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ReportScheduleList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportTypes:
                      value:
                        - FEE_DISCOUNTS_REPORT
                        - GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA
                response:
                  reportSchedules:
                    - reportType: FEE_DISCOUNTS_REPORT
                      marketplaceIds:
                        - ATVPDKIKX0DER
                      reportScheduleId: ID1
                      period: PT5M
                      nextReportCreationTime: '2019-12-11T15:03:44.973Z'
                    - reportType: GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA
                      reportScheduleId: ID2
                      period: PT5M
                      nextReportCreationTime: '2019-12-11T15:03:44.973Z'
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportTypes:
                      value:
                        - BAD_FEE_DISCOUNTS_REPORT
                        - BAD_GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
    post:
      tags:
        - reports_reports
      description: >-
        Creates a report schedule. If a report schedule with the same report
        type and marketplace IDs already exists, it will be cancelled and
        replaced with this one.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0222 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: createReportSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/2021-06-30_CreateReportScheduleSpecification
        required: true
      responses:
        '201':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_CreateReportScheduleResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        reportType: FEE_DISCOUNTS_REPORT
                        period: PT5M
                        nextReportCreationTime: '2019-12-10T20:11:24.000Z'
                        marketplaceIds:
                          - A1PA6795UKMFR9
                          - ATVPDKIKX0DER
                response:
                  reportScheduleId: ID323
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        reportType: BAD_FEE_DISCOUNTS_REPORT
                        period: PT5M
                        nextReportCreationTime: '2019-12-10T20:11:24.000Z'
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
      x-codegen-request-body-name: body
  /reports/2021-06-30/schedules/{reportScheduleId}:
    get:
      tags:
        - reports_reports
      description: >-
        Returns report schedule details for the report schedule that you
        specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0222 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getReportSchedule
      parameters:
        - name: reportScheduleId
          in: path
          description: >-
            The identifier for the report schedule. This identifier is unique
            only in combination with a seller ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ReportSchedule'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportScheduleId:
                      value: ID323
                response:
                  reportScheduleId: ReportScheduleId1
                  reportType: FEE_DISCOUNTS_REPORT
                  period: PT5M
                  nextReportCreationTime: '2019-12-12T13:47:20.677Z'
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportScheduleId:
                      value: badReportId1
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
    delete:
      tags:
        - reports_reports
      description: >-
        Cancels the report schedule that you specify.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0222 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: cancelReportSchedule
      parameters:
        - name: reportScheduleId
          in: path
          description: >-
            The identifier for the report schedule. This identifier is unique
            only in combination with a seller ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content: {}
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportScheduleId:
                      value: ID
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
  /reports/2021-06-30/documents/{reportDocumentId}:
    get:
      tags:
        - reports_reports
      description: >-
        Returns the information required for retrieving a report document's
        contents.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.0167 | 15 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getReportDocument
      parameters:
        - name: reportDocumentId
          in: path
          description: The identifier for the report document.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ReportDocument'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportDocumentId:
                      value: 0356cf79-b8b0-4226-b4b9-0ee058ea5760
                response:
                  reportDocumentId: 0356cf79-b8b0-4226-b4b9-0ee058ea5760
                  url: >-
                    https://d34o8swod1owfl.cloudfront.net/Report_47700__GET_MERCHANT_LISTINGS_ALL_DATA_.txt
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reportDocumentId:
                      value: badDocumentId1
                response:
                  errors:
                    - code: '400'
                      message: Invalid input
                      details: Invalid input
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '403':
          description: >-
            Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-06-30_ErrorList'
  /sales/v1/orderMetrics:
    get:
      tags:
        - sales_sales
      description: >-
        Returns aggregated order metrics for given interval, broken down by
        granularity, for given buyer type.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | .5 | 15 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getOrderMetrics
      parameters:
        - name: marketplaceIds
          in: query
          description: >-
            A marketplace identifier. This specifies the marketplace in which
            the order was placed. Only one marketplace can be specified.


            For example, ATVPDKIKX0DER indicates the US marketplace.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: interval
          in: query
          description: >-
            A time interval used for selecting order metrics. This takes the
            form of two dates separated by two hyphens (first date is inclusive;
            second date is exclusive). Dates are in ISO8601 format and must
            represent absolute time (either Z notation or offset notation).
            Example: 2018-09-01T00:00:00-07:00--2018-09-04T00:00:00-07:00
            requests order metrics for Sept 1st, 2nd and 3rd in the -07:00 zone.
          required: true
          schema:
            type: string
        - name: granularityTimeZone
          in: query
          description: >-
            An IANA-compatible time zone for determining the day boundary.
            Required when specifying a granularity value greater than Hour. The
            granularityTimeZone value must align with the offset of the
            specified interval value. For example, if the interval value uses Z
            notation, then granularityTimeZone must be UTC. If the interval
            value uses an offset, then granularityTimeZone must be an
            IANA-compatible time zone that matches the offset. Example:
            US/Pacific to compute day boundaries, accounting for daylight time
            savings, for US/Pacific zone.
          schema:
            type: string
        - name: granularity
          in: query
          description: >-
            The granularity of the grouping of order metrics, based on a unit of
            time. Specifying granularity=Hour results in a successful request
            only if the interval specified is less than or equal to 30 days from
            now. For all other granularities, the interval specified must be
            less or equal to 2 years from now. Specifying granularity=Total
            results in order metrics that are aggregated over the entire
            interval that you specify. If the interval start and end date don’t
            align with the specified granularity, the head and tail end of the
            response interval will contain partial data. Example: Day to get a
            daily breakdown of the request interval, where the day boundary is
            defined by the granularityTimeZone.
          required: true
          schema:
            type: string
            enum:
              - Hour
              - Day
              - Week
              - Month
              - Year
              - Total
            x-docgen-enum-table-extension:
              - value: Hour
                description: Hour
              - value: Day
                description: Day
              - value: Week
                description: Week
              - value: Month
                description: Month
              - value: Year
                description: Year
              - value: Total
                description: Total
          x-docgen-enum-table-extension:
            - value: Hour
              description: Hour
            - value: Day
              description: Day
            - value: Week
              description: Week
            - value: Month
              description: Month
            - value: Year
              description: Year
            - value: Total
              description: Total
        - name: buyerType
          in: query
          description: >-
            Filters the results by the buyer type that you specify, B2B
            (business to business) or B2C (business to customer). Example: B2B,
            if you want the response to include order metrics for only B2B
            buyers.
          schema:
            type: string
            default: All
            enum:
              - B2B
              - B2C
              - All
            x-docgen-enum-table-extension:
              - value: B2B
                description: Business to business.
              - value: B2C
                description: Business to customer.
              - value: All
                description: Business to business and business to customer.
          x-docgen-enum-table-extension:
            - value: B2B
              description: Business to business.
            - value: B2C
              description: Business to customer.
            - value: All
              description: Business to business and business to customer.
        - name: fulfillmentNetwork
          in: query
          description: >-
            Filters the results by the fulfillment network that you specify, MFN
            (merchant fulfillment network) or AFN (Amazon fulfillment network).
            Do not include this filter if you want the response to include order
            metrics for all fulfillment networks. Example: AFN, if you want the
            response to include order metrics for only Amazon fulfillment
            network.
          schema:
            type: string
        - name: firstDayOfWeek
          in: query
          description: >-
            Specifies the day that the week starts on when granularity=Week,
            either Monday or Sunday. Default: Monday. Example: Sunday, if you
            want the week to start on a Sunday.
          schema:
            type: string
            default: Monday
            enum:
              - Monday
              - Sunday
            x-docgen-enum-table-extension:
              - value: Monday
                description: Monday
              - value: Sunday
                description: Sunday
          x-docgen-enum-table-extension:
            - value: Monday
              description: Monday
            - value: Sunday
              description: Sunday
        - name: asin
          in: query
          description: >-
            Filters the results by the ASIN that you specify. Specifying both
            ASIN and SKU returns an error. Do not include this filter if you
            want the response to include order metrics for all ASINs. Example:
            B0792R1RSN, if you want the response to include order metrics for
            only ASIN B0792R1RSN.
          schema:
            type: string
        - name: sku
          in: query
          description: >-
            Filters the results by the SKU that you specify. Specifying both
            ASIN and SKU returns an error. Do not include this filter if you
            want the response to include order metrics for all SKUs. Example:
            TestSKU, if you want the response to include order metrics for only
            SKU TestSKU.
          schema:
            type: string
      responses:
        '200':
          description: OrderMetric action taken on the resource OrderMetrics.
          headers:
            x-amzn-RequestId:
              description: unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation..
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
            payload:
              example:
                dayGranularity:
                  metrics:
                    - interval: 2018-05-01T00:00-07:00--2018-05-02T00:00-07:00
                      unitCount: 1
                      orderItemCount: 1
                      orderCount: 1
                      averageUnitPrice:
                        amount: '22.95'
                        currencyCode: USD
                      totalSales:
                        amount: '22.95'
                        currencyCode: USD
                    - interval: 2018-05-02T00:00-07:00--2018-05-03T00:00-07:00
                      unitCount: 1
                      orderItemCount: 1
                      orderCount: 1
                      averageUnitPrice:
                        amount: '2.05'
                        currencyCode: USD
                      totalSales:
                        amount: '2.05'
                        currencyCode: USD
                totalGranularity:
                  metrics:
                    - interval: 2018-05-01T00:00-07:00--2018-05-03T00:00-07:00
                      unitCount: 2
                      orderItemCount: 2
                      orderCount: 2
                      averageUnitPrice:
                        amount: '12.5'
                        currencyCode: USD
                      totalSales:
                        amount: '25'
                        currencyCode: USD
                asinFilter:
                  metrics:
                    - interval: 2018-05-01T00:00-07:00--2018-05-02T00:00-07:00
                      unitCount: 1
                      orderItemCount: 1
                      orderCount: 1
                      averageUnitPrice:
                        amount: '22.95'
                        currencyCode: USD
                      totalSales:
                        amount: '22.95'
                        currencyCode: USD
                    - interval: 2018-05-02T00:00-07:00--2018-05-03T00:00-07:00
                      unitCount: 0
                      orderItemCount: 0
                      orderCount: 0
                      averageUnitPrice:
                        amount: '0'
                        currencyCode: USD
                      totalSales:
                        amount: '0'
                        currencyCode: USD
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    granularity:
                      value: Total
                response:
                  payload:
                    - interval: 2019-08-01T00:00-07:00--2018-08-03T00:00-07:00
                      unitCount: 2
                      orderItemCount: 2
                      orderCount: 2
                      averageUnitPrice:
                        amount: '12.5'
                        currencyCode: USD
                      totalSales:
                        amount: '25'
                        currencyCode: USD
              - request:
                  parameters:
                    granularity:
                      value: Day
                response:
                  payload:
                    - interval: 2019-08-01T00:00-07:00--2018-08-02T00:00-07:00
                      unitCount: 1
                      orderItemCount: 1
                      orderCount: 1
                      averageUnitPrice:
                        amount: '22.95'
                        currencyCode: USD
                      totalSales:
                        amount: '22.95'
                        currencyCode: USD
                    - interval: 2019-08-02T00:00-07:00--2018-08-03T00:00-07:00
                      unitCount: 1
                      orderItemCount: 1
                      orderCount: 1
                      averageUnitPrice:
                        amount: '2.05'
                        currencyCode: USD
                      totalSales:
                        amount: '2.05'
                        currencyCode: USD
              - request:
                  parameters:
                    granularity:
                      value: Total
                    asin:
                      value: B008OLKVEW
                response:
                  payload:
                    - interval: 2018-05-01T00:00-07:00--2018-05-03T00:00-07:00
                      unitCount: 1
                      orderItemCount: 1
                      orderCount: 1
                      averageUnitPrice:
                        amount: '22.95'
                        currencyCode: USD
                      totalSales:
                        amount: '22.95'
                        currencyCode: USD
              - request:
                  parameters:
                    granularity:
                      value: Day
                    asin:
                      value: B008OLKVEW
                response:
                  payload:
                    - interval: 2018-05-01T00:00-07:00--2018-05-02T00:00-07:00
                      unitCount: 1
                      orderItemCount: 1
                      orderCount: 1
                      averageUnitPrice:
                        amount: '22.95'
                        currencyCode: USD
                      totalSales:
                        amount: '22.95'
                        currencyCode: USD
                    - interval: 2018-05-02T00:00-07:00--2018-05-03T00:00-07:00
                      unitCount: 0
                      orderItemCount: 0
                      orderCount: 0
                      averageUnitPrice:
                        amount: '0'
                        currencyCode: USD
                      totalSales:
                        amount: '0'
                        currencyCode: USD
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
        '403':
          description: >-
            403 can be caused for reasons like Access Denied, Unauthorized,
            Expired Token, Invalid Signature or Resource Not Found.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
        '415':
          description: >-
            The entity of the request is in a format not supported by the
            requested resource.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetOrderMetricsResponse'
  /sellers/v1/marketplaceParticipations:
    get:
      tags:
        - sellers_sellers
      description: >-
        Returns a list of marketplaces that the seller submitting the request
        can sell in and information about the seller's participation in those
        marketplaces.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 0.016 | 15 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getMarketplaceParticipations
      responses:
        '200':
          description: Marketplace participations successfully retrieved.
          headers:
            x-amzn-RequestId:
              description: unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
            payload:
              example:
                - marketplace:
                    id: ATVPDKIKX0DER
                    name: Amazon.com
                    countryCode: US
                    defaultCurrencyCode: USD
                    defaultLanguageCode: en_US
                    domainName: www.amazon.com
                  participation:
                    isParticipating: true
                    hasSuspendedListings: false
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    - marketplace:
                        id: ATVPDKIKX0DER
                        countryCode: US
                        name: Amazon.com
                        defaultCurrencyCode: USD
                        defaultLanguageCode: en_US
                        domainName: www.amazon.com
                      participation:
                        isParticipating: true
                        hasSuspendedListings: false
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
        '403':
          description: >-
            403 can be caused for reasons like Access Denied, Unauthorized,
            Expired Token, Invalid Signature or Resource Not Found.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
        '415':
          description: >-
            The entity of the request is in a format not supported by the
            requested resource.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetMarketplaceParticipationsResponse'
  /service/v1/serviceJobs/{serviceJobId}:
    get:
      tags:
        - services_service
      description: >-
        Gets details of service job indicated by the provided `serviceJobID`.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 20 | 40 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getServiceJobByServiceJobId
      parameters:
        - name: serviceJobId
          in: path
          description: A service job identifier.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                response:
                  payload: {}
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobByServiceJobIdResponse'
  /service/v1/serviceJobs/{serviceJobId}/cancellations:
    put:
      tags:
        - services_service
      description: >-
        Cancels the service job indicated by the service job identifier
        specified.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: cancelServiceJobByServiceJobId
      parameters:
        - name: serviceJobId
          in: path
          description: An Amazon defined service job identifier.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: cancellationReasonCode
          in: query
          description: >-
            A cancel reason code that specifies the reason for cancelling a
            service job.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            pattern: ^[A-Z0-9_]*$
            type: string
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                    cancellationReasonCode:
                      value: V1
                response: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                    cancellationReasonCode:
                      value: V1
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [serviceJobId]'
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                    cancellationReasonCode:
                      value: 'NULL'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Missing or invalid request parameters:
                        [cancellationReasonCode]
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                    cancellationReasonCode:
                      value: 'NULL'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Missing or invalid request parameters: [serviceJobId,
                        cancellationReasonCode]
                      details: ''
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: unauthorizedJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                    cancellationReasonCode:
                      value: V1
                response:
                  errors:
                    - code: UnauthorizedAction
                      message: >-
                        Not authorized to access this resource.Please check your
                        input again
                      details: ''
              - request:
                  parameters: {}
                response: {}
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: completedJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                    cancellationReasonCode:
                      value: V1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Job with jobId
                        completedJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut and
                        jobStatus COMPLETED cannot be cancelled
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                    cancellationReasonCode:
                      value: INV1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Received invalid input reason code IV1 for jobId
                        validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: invalidJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                    cancellationReasonCode:
                      value: V1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Job not found for jobId
                        invalidJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                      details: ''
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelServiceJobByServiceJobIdResponse'
  /service/v1/serviceJobs/{serviceJobId}/completions:
    put:
      tags:
        - services_service
      description: >-
        Completes the service job indicated by the service job identifier
        specified.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: completeServiceJobByServiceJobId
      parameters:
        - name: serviceJobId
          in: path
          description: An Amazon defined service job identifier.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                response: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [serviceJobId]'
                      details: ''
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: unauthorizedJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                response:
                  errors:
                    - code: UnauthorizedAction
                      message: >-
                        Not authorized to access this resource.Please check your
                        input again
                      details: ''
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: cancelledJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Operation not allowed on job with jobId :
                        cancelledJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut and
                        jobState : CANCELLED
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: invalidJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Job not found for jobId
                        invalidJobId-48b6d5a3-b708-dbe9-038d-dd95e8d74iut
                      details: ''
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/v1_CompleteServiceJobByServiceJobIdResponse
  /service/v1/serviceJobs:
    get:
      tags:
        - services_service
      description: >-
        Gets service job details for the specified filter query.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 10 | 40 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getServiceJobs
      parameters:
        - name: serviceOrderIds
          in: query
          description: >-
            List of service order ids for the query you want to perform.Max
            values supported 20.
          style: form
          explode: false
          schema:
            maxItems: 20
            minItems: 1
            type: array
            items:
              type: string
        - name: serviceJobStatus
          in: query
          description: >-
            A list of one or more job status by which to filter the list of
            jobs.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - NOT_SERVICED
                - CANCELLED
                - COMPLETED
                - PENDING_SCHEDULE
                - NOT_FULFILLABLE
                - HOLD
                - PAYMENT_DECLINED
              x-docgen-enum-table-extension:
                - value: NOT_SERVICED
                  description: Jobs which are not serviced.
                - value: CANCELLED
                  description: Jobs which are cancelled.
                - value: COMPLETED
                  description: Jobs successfully completed.
                - value: PENDING_SCHEDULE
                  description: Jobs which are pending schedule.
                - value: NOT_FULFILLABLE
                  description: Jobs which are not fulfillable.
                - value: HOLD
                  description: Jobs which are on hold.
                - value: PAYMENT_DECLINED
                  description: Jobs for which payment was declined.
        - name: pageToken
          in: query
          description: String returned in the response of your previous request.
          schema:
            type: string
        - name: pageSize
          in: query
          description: >-
            A non-negative integer that indicates the maximum number of jobs to
            return in the list, Value must be 1 - 20. Default 20.
          schema:
            maximum: 20
            minimum: 1
            type: integer
            default: 20
        - name: sortField
          in: query
          description: Sort fields on which you want to sort the output.
          schema:
            type: string
            enum:
              - JOB_DATE
              - JOB_STATUS
            x-docgen-enum-table-extension:
              - value: JOB_DATE
                description: Sort on job date.
              - value: JOB_STATUS
                description: Sort on job status.
          x-docgen-enum-table-extension:
            - value: JOB_DATE
              description: Sort on job date.
            - value: JOB_STATUS
              description: Sort on job status.
        - name: sortOrder
          in: query
          description: Sort order for the query you want to perform.
          schema:
            type: string
            enum:
              - ASC
              - DESC
            x-docgen-enum-table-extension:
              - value: ASC
                description: Sort in ascending order.
              - value: DESC
                description: Sort in descending order.
          x-docgen-enum-table-extension:
            - value: ASC
              description: Sort in ascending order.
            - value: DESC
              description: Sort in descending order.
        - name: createdAfter
          in: query
          description: >-
            A date used for selecting jobs created at or after a specified time.
            Must be in ISO 8601 format. Required if `LastUpdatedAfter` is not
            specified. Specifying both `CreatedAfter` and `LastUpdatedAfter`
            returns an error.
          schema:
            type: string
        - name: createdBefore
          in: query
          description: >-
            A date used for selecting jobs created at or before a specified
            time. Must be in ISO 8601 format.
          schema:
            type: string
        - name: lastUpdatedAfter
          in: query
          description: >-
            A date used for selecting jobs updated at or after a specified time.
            Must be in ISO 8601 format. Required if `createdAfter` is not
            specified. Specifying both `CreatedAfter` and `LastUpdatedAfter`
            returns an error.
          schema:
            type: string
        - name: lastUpdatedBefore
          in: query
          description: >-
            A date used for selecting jobs updated at or before a specified
            time. Must be in ISO 8601 format.
          schema:
            type: string
        - name: scheduleStartDate
          in: query
          description: >-
            A date used for filtering jobs schedules at or after a specified
            time. Must be in ISO 8601 format. Schedule end date should not be
            earlier than schedule start date.
          schema:
            type: string
        - name: scheduleEndDate
          in: query
          description: >-
            A date used for filtering jobs schedules at or before a specified
            time. Must be in ISO 8601 format. Schedule end date should not be
            earlier than schedule start date.
          schema:
            type: string
        - name: marketplaceIds
          in: query
          description: Used to select jobs that were placed in the specified marketplaces.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
        - name: asins
          in: query
          description: >-
            List of Amazon Standard Identification Numbers (ASIN) of the items.
            Max values supported is 20.
          style: form
          explode: false
          schema:
            maxItems: 20
            minItems: 1
            type: array
            items:
              maxLength: 10
              minLength: 10
              type: string
        - name: requiredSkills
          in: query
          description: >-
            A defined set of related knowledge, skills, experience, tools,
            materials, and work processes common to service delivery for a set
            of products and/or service scenarios. Max values supported is 20.
          style: form
          explode: false
          schema:
            maxItems: 20
            minItems: 1
            type: array
            items:
              maxLength: 50
              minLength: 1
              type: string
        - name: storeIds
          in: query
          description: >-
            List of Amazon-defined identifiers for the region scope. Max values
            supported is 50.
          style: form
          explode: false
          schema:
            maxItems: 50
            minItems: 1
            type: array
            items:
              maxLength: 100
              minLength: 1
              type: string
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters: {}
                response:
                  payload:
                    totalResultSize: 1
                    nextPageToken: merchantSklktoreIdbcdcd2ad-5883-4e48-b114-f13328a9e9f
                    previousPageToken: merchantSklktoreIdbcdcd2ad-5883-4e48-b114-f13328a9e9f
                    jobs:
                      - serviceOrderId: '2345324'
                        serviceJobId: '34534399990035'
                        createTime: '2019-12-11T14:49:53.952Z'
                        serviceJobStatus: COMPLETED
                        buyer:
                          name: nameExample
                        appointments:
                          - appointmentId: appointmentIdExample
                            appointmentStatus: COMPLETED
                            appointmentTime:
                              startTime: '2020-01-31T06:38:56.961Z'
                              durationInMinutes: 60
                            assignedTechnicians:
                              - technicianId: technicianIdExample
                                name: nameExample
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    createdAfter:
                      value: TEST_CASE_400
                response:
                  errors:
                    - code: InvalidInput
                      message: Invalid Input
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetServiceJobsResponse'
  /service/v1/serviceJobs/{serviceJobId}/appointments:
    post:
      tags:
        - services_service
      description: >-
        Adds an appointment to the service job indicated by the service job
        identifier specified.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: addAppointmentForServiceJobByServiceJobId
      parameters:
        - name: serviceJobId
          in: path
          description: An Amazon defined service job identifier.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
      requestBody:
        description: Add appointment operation input details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_AddAppointmentRequest'
        required: true
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                response:
                  appointmentId: >-
                    validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                          durationInMinutes: 60
                response:
                  appointmentId: >-
                    validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                          durationInMinutes: 60
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [serviceJobId]'
                      details: ''
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                response:
                  errors:
                    - code: UnauthorizedAction
                      message: >-
                        Not authorized to access this resource. Please check
                        your input again.
                      details: ''
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000+05:30'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        ISO8601 time 2021-01-01T10:00:00.000+05:30 is not in
                        UTC.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: 2021-01-01T10-00:00.000Z
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Failed to parse ISO8601 input: 2021-01-01T10-00:00.000Z'
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        No job exist with jobId :
                        invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Operation not allowed on job with jobId :
                        completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468 and
                        jobState : COMPLETED
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: >-
                        withActiveAppointmentJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to add appointment for jobId :
                        withActiveAppointmentJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468,
                        reason : Job already has an active appointmentId.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2019-01-01T10:00:00.000Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to add appointment for jobId :
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason
                        : Start time of appointment should be in the future.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2022-01-01T10:00:00.000Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to add appointment for jobId :
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason
                        : Start time for appointment is beyond the maximum
                        allowed period of 365 days.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:15:00.000Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to add appointment for jobId :
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason
                        : Appointment slot is not available.
                      details: ''
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
      x-codegen-request-body-name: body
  /service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}:
    post:
      tags:
        - services_service
      description: >-
        Reschedules an appointment for the service job indicated by the service
        job identifier specified.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: rescheduleAppointmentForServiceJobByServiceJobId
      parameters:
        - name: serviceJobId
          in: path
          description: An Amazon defined service job identifier.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: appointmentId
          in: path
          description: An existing appointment identifier for the Service Job.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
      requestBody:
        description: Reschedule appointment operation input details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_RescheduleAppointmentRequest'
        required: true
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                        rescheduleReasonCode: R1
                response:
                  appointmentId: >-
                    validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_new_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                          durationInMinutes: 60
                        rescheduleReasonCode: R1
                response:
                  appointmentId: >-
                    validJobId-2-9cb9bc29-3d7d-5e49-5709-efb693d34468_new_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-3-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-3-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                          durationInMinutes: 60
                        rescheduleReasonCode: R1
                response:
                  appointmentId: >-
                    validJobId-3-9cb9bc29-3d7d-5e49-5709-efb693d34468_new_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                  warnings:
                    - code: RESOURCES_UNASSIGNED
                      message: 'Unassigned resources : ATechnicianId,BTechnicianId'
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                    appointmentId:
                      value: >-
                        validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                          durationInMinutes: 60
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [serviceJobId]'
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: nullAppointmentId
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                          durationInMinutes: 60
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [appointmentId]'
                      details: ''
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: UnauthorizedAction
                      message: >-
                        Not authorized to access this resource. Please check
                        your input again.
                      details: ''
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000+05:30'
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        ISO8601 time 2021-01-01T10:00:00.000+05:30 is not in
                        UTC.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: 2021-01-01T10-00:00.000Z
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Failed to parse ISO8601 input: 2021-01-01T10-00:00.000Z'
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        No job exist with jobId :
                        invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Operation not allowed on job with jobId :
                        completedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468 and
                        jobState : COMPLETED
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2019-01-01T10:00:00.000Z'
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to add appointment for jobId :
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason
                        : Start time of appointment should be in the future.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2022-01-01T10:00:00.000Z'
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to add appointment for jobId :
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason
                        : Start time for appointment is beyond the maximum
                        allowed period of 365 days.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:15:00.000Z'
                        rescheduleReasonCode: R1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to add appointment for jobId :
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason
                        : Appointment slot is not available.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentTime:
                          startTime: '2021-01-01T10:00:00.000Z'
                        rescheduleReasonCode: U1
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to add appointment for jobId :
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468, reason
                        : Appointment reschedule reason code is not valid.
                      details: ''
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_SetAppointmentResponse'
      x-codegen-request-body-name: body
  /service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}/resources:
    put:
      tags:
        - services_service
      description: >-
        Assigns new resource(s) or overwrite/update the existing one(s) to a
        service job appointment.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 2 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: assignAppointmentResources
      parameters:
        - name: serviceJobId
          in: path
          description: >-
            An Amazon-defined service job identifier. Get this value by calling
            the `getServiceJobs` operation of the Services API.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: appointmentId
          in: path
          description: An Amazon-defined identifier of active service job appointment.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_AssignAppointmentResourcesRequest'
        required: true
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response: {}
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - {}
                response: {}
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: overBookedResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  payload:
                    warnings:
                      - code: RESOURCES_OVERBOOKED
                        message: Resources overbooked for this time window.
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [serviceJobId]'
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: nullAppointmentId
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [appointmentId]'
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                    appointmentId:
                      value: nullAppointmentId
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Missing or invalid request parameters: [appointmentId,
                        serviceJobId]
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value: {}
                response:
                  errors:
                    - code: InvalidInput
                      message: "Resources\_not\_provided\_in\_input\_JSON\_payload."
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources: []
                response:
                  errors:
                    - code: InvalidInput
                      message: "Resources\_must\_have\_size\_greater\_than\_or\_equal\_to\_1."
                      details: ''
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: unauthorizedJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: UnauthorizedAction
                      message: >-
                        Not authorized to access this resource. Please check
                        your input again.
                      details: ''
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: invalidJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        No job exists with jobId :
                        invalidJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        invalidAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Failed to Update Appointment for jobId :
                        invalidJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687,
                        appointmentId :
                        invalidAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d,
                        reason : No appointment exists with appointmentId:
                        invalidAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: badResourceId
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Invalid resourceId : badResourceId provided in the
                        input.
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: completedJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        completedAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Operation not allowed on job with jobId :
                        completedJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                        and jobState : COMPLETED
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: cancelledJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        cancelledAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Operation not allowed on job with jobId :
                        cancelledJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                        and jobState : CANCELLED
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        cancelledAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: validResourceId-A8B3M999LMHF2
                          - resourceId: validResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Appointment metadata update is not allowed for
                        appointmentId
                        cancelledAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                      details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        resources:
                          - resourceId: invalidResourceId-A8B3M999LMHF2
                          - resourceId: invalidResourceId-AMIDIAX1H5V
                response:
                  errors:
                    - code: RESOURCES_MISMATCHED_SERVICE_LOCATION_TYPE
                      message: >-
                        Resources do not have same service location type as job.
                        Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V
                      details: ''
                    - code: RESOURCES_MISSING_REQUIRED_SKILLS
                      message: >-
                        Resources Missing required XYZ skills. Applicable
                        resources: A8B3M999LMHF2,AMIDIAX1H5V
                      details: ''
                    - code: RESOURCES_NOT_AVAILABLE_IN_LOCATION
                      message: >-
                        Resources are not available in the store. Applicable
                        resources: A8B3M999LMHF2,AMIDIAX1H5V
                      details: ''
                    - code: RESOURCES_NOT_REGISTERED_UNDER_MERCHANT
                      message: >-
                        Resources are not registered under this Merchant.
                        Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V
                      details: ''
                    - code: RESOURCES_BACKGROUND_CHECK_INCOMPLETE
                      message: >-
                        Resources background check is incomplete. Applicable
                        resources: A8B3M999LMHF2,AMIDIAX1H5V
                      details: ''
                    - code: RESOURCES_NOT_AVAILABLE_IN_TIME_WINDOW
                      message: >-
                        Resources do not have sufficient available capacity.
                        Applicable resources: A8B3M999LMHF2,AMIDIAX1H5V
                      details: ''
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_AssignAppointmentResourcesResponse'
      x-codegen-request-body-name: body
  /service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}/fulfillment:
    put:
      tags:
        - services_service
      description: >-
        Updates the appointment fulfillment data related to a given `jobID` and
        `appointmentID`.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: setAppointmentFulfillmentData
      parameters:
        - name: serviceJobId
          in: path
          description: >-
            An Amazon-defined service job identifier. Get this value by calling
            the `getServiceJobs` operation of the Services API.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: appointmentId
          in: path
          description: An Amazon-defined identifier of active service job appointment.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
      requestBody:
        description: Appointment fulfillment data collection details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_SetAppointmentFulfillmentDataRequest'
        required: true
      responses:
        '204':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                response: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                response: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: 348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                response: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        fulfillmentDocuments:
                          - uploadDestinationId: 348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687
                    appointmentId:
                      value: >-
                        validAppointmentId-1-9cb9bc29-3d7d-5e49-5709-efb693t25687_87b9d5f2-839d-y13e-sd4d-dae1c3996s3d
                    body:
                      value:
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: 348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response: ''
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                    appointmentId:
                      value: >-
                        validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: 'Missing or invalid request parameters: [serviceJobId]'
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: nullAppointmentId
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: 'Missing or invalid request parameters: [appointmentId]'
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: nullAppointmentId
                    body:
                      value: {}
                response:
                  - code: InvalidInput
                    message: No fulfillment artifacts provided in JSON payload.
                    details: ''
        '403':
          description: >-
            403 can be caused for reasons like Access Denied, Unauthorized,
            Expired Token, Invalid Signature or Resource Not Found.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        unauthorizedJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: 348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: UnauthorizedAction
                    message: >-
                      Not authorized to access this resource. Please check your
                      input again.
                    details: ''
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
        '415':
          description: >-
            The entity of the request is in a format not supported by the
            requested resource.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        invalidAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      No job exist with jobId :
                      invalidJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: InvalidStatusJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        invalidStatusAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Job with id
                      InvalidStatusJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                      can not be updated. Please check if the job is in valid
                      status.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        invalidAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment with id
                      invalidAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                      is not present in the job. Please check the input again.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        InvalidStatusCancelledAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-02T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment with appointment id
                      InvalidStatusCancelledAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                      is not valid to update. Please check the input again
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          endTime: '2021-01-03T13:18:10.668Z'
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment start time is required. Please check the input
                      again.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2021-01-01T10:00:00.000+05:30'
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment end time is required. Please check the input
                      again.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2021-01-01T10:00:00.000+05:30'
                          endTime: '2021-01-03T13:18:10.668Z'
                response:
                  - code: InvalidInput
                    message: >-
                      ISO8601 time 2021-01-01T10:00:00.000+05:30 is not in UTC
                      format. Please provide time in UTC
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: 2021-01-01T10-00:00.000Z
                          endTime: '2021-01-03T13:18:10.668Z'
                response:
                  - code: InvalidInput
                    message: >-
                      Could not parse given time input 2021-01-01T10-00:00.000Z.
                      Please provide time in ISO8601 format
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '9999-01-01T10:00:00.000Z'
                          endTime: '2021-01-03T13:18:10.668Z'
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment start time should not be in future. Please
                      check the input again
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-01T10:00:00.000+05:30'
                          endTime: '9999-01-03T13:18:10.668Z'
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment end time should not be in future. Please check
                      the input again
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2020-01-04T10:00:00.000+05:30'
                          endTime: '2020-01-03T13:18:10.668Z'
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment end time should be after start time. Please
                      check the input again.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentResources:
                          - resourceId: InValidResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                response:
                  - code: InvalidInput
                    message: >-
                      One or more resources provided is invalid. Please check
                      the input again.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        appointmentResources:
                          - resourceId: ResourceIdNotExist-20334421900
                          - resourceId: validResourceId-82309484378
                response:
                  - code: InvalidInput
                    message: >-
                      One or more resources provided does not exist or is
                      deleted. Please check the input again.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              InvalidUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Input document id does not exist. Please check the input
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              UploadDestinationIdExpired-9cb9bc29-3d7d-5e49-5709-efb693d34468
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Input document parameters are invalid. Please check the
                      input.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              InvalidDocumentTypeUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Document failed to meet content type restrictions. Please
                      review document uploaded
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              InvalidDocumentLengthUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Failed to retrieve document content length. Please review
                      document uploaded
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              ExceededDcoumentLengthUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Document failed to meet content length restrictions.
                      Please review document uploaded
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              DocumentNotUploadedUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Document encrypted not found or exist. Please review
                      document uploaded
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              IncorrectEncryptedDocumentUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Document failed to decrypt or decipher. Please review the
                      uploaded document
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDestinationId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                            contentSha256: InvalidSHA256GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Document failed to meet sanity check. Could not get a
                      Sha256 Message Digest instance. Please review document
                      uploaded
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              UploadedFileDetectedMalwareUploadeDestinationId-348293-2384982-239847982379
                            contentSha256: validSHA256GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Document failed to meet malware check. Please review
                      document uploaded
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: InValidResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              InValidUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      ne or more resources provided is invalid. Please check the
                      input again.
                    details: ''
                  - code: InvalidInput
                    message: >-
                      Appointment start time is required. Please check the input
                      again.
                    details: ''
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Input document id does not exist. Please check the input
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              InValidUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment start time is required. Please check the input
                      again.
                    details: ''
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Input document id does not exist. Please check the input
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Appointment start time is required. Please check the input
                      again.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2022-01-03T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: ResourceIdNotExist-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              validUploadDesitnationID348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      One or more resources provided does not exist or is
                      deleted. Please check the input again.
                    details: ''
              - request:
                  parameters:
                    serviceJobId:
                      value: validJobId-1-9cb9bc29-3d7d-5e49-5709-efb693d34468
                    appointmentId:
                      value: >-
                        validAppointmentId-9cb9bc29-3d7d-5e49-5709-efb693d34468_00b9d5f2-839d-c13e-b8cd-dae1c3995b2a
                    body:
                      value:
                        fulfillmentTime:
                          startTime: '2022-01-03T13:18:10.668Z'
                          endTime: '2022-01-03T13:18:10.668Z'
                        appointmentResources:
                          - resourceId: validResourceId-20334421900
                          - resourceId: validResourceId-82309484378
                        fulfillmentDocuments:
                          - uploadDestinationId: >-
                              UploadedFileDetectedMalwareUploadeDestinationId-348293-2384982-239847982379
                            contentSha256: z06EuBzgzc7GiDNVqcxMqYEr7n0BCS9EtNN7szHe0RT=
                response:
                  - code: InvalidInput
                    message: >-
                      Failed to process proof of appointment input. Reason:
                      Document failed to meet malware check. Please review
                      document uploaded
                    details: ''
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_ErrorList'
      x-codegen-request-body-name: body
  /service/v1/serviceResources/{resourceId}/capacity/range:
    post:
      tags:
        - services_service
      description: >-
        Provides capacity slots in a format similar to availability records.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getRangeSlotCapacity
      parameters:
        - name: resourceId
          in: path
          description: Resource Identifier.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: marketplaceIds
          in: query
          description: An identifier for the marketplace in which the resource operates.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
        - name: nextPageToken
          in: query
          description: Next page token returned in the response of your previous request.
          schema:
            type: string
      requestBody:
        description: Request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_RangeSlotCapacityQuery'
        required: true
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacity'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                          - AVAILABLE_CAPACITY
                        startDateTime: '2021-04-04T00:00:00Z'
                        endDateTime: '2021-04-04T02:00:00Z'
                response:
                  resourceId: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48
                  capacities:
                    - capacityType: SCHEDULED_CAPACITY
                      slots:
                        - startDateTime: '2021-04-04T00:00:00Z'
                          endDateTime: '2021-04-04T02:00:00Z'
                          capacity: 1
                    - capacityType: AVAILABLE_CAPACITY
                      slots:
                        - startDateTime: '2021-04-04T00:00:00Z'
                          endDateTime: '2021-04-04T01:00:00Z'
                          capacity: 0
                        - startDateTime: '2021-04-04T01:00:00Z'
                          endDateTime: '2021-04-04T02:00:00Z'
                          capacity: 1
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f29
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                          - AVAILABLE_CAPACITY
                        startDateTime: '2022-03-01T00:00:00Z'
                        endDateTime: '2022-05-30T00:00:00Z'
                response:
                  resourceId: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48
                  nextPageToken: MjAyMi0wNC0wNVQwMDowMDowMFo%3D
                  capacities:
                    - capacityType: SCHEDULED_CAPACITY
                      slots:
                        - startDateTime: '2022-03-01T00:00:00Z'
                          endDateTime: '2022-04-05T00:00:00Z'
                          capacity: 1
                    - capacityType: AVAILABLE_CAPACITY
                      slots:
                        - startDateTime: '2022-03-01T00:00:00Z'
                          endDateTime: '2022-03-01T10:00:00Z'
                          capacity: 0
                        - startDateTime: '2022-03-01T10:00:00Z'
                          endDateTime: '2022-04-05T00:00:00Z'
                          capacity: 1
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f29
                    nextPageToken:
                      value: MjAyMi0wNC0wNVQwMDowMDowMFo%3D
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                          - AVAILABLE_CAPACITY
                        startDateTime: '2022-03-01T00:00:00Z'
                        endDateTime: '2022-05-30T00:00:00Z'
                response:
                  resourceId: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48
                  capacities:
                    - capacityType: SCHEDULED_CAPACITY
                      slots:
                        - startDateTime: '2022-04-05T00:00:00Z'
                          endDateTime: '2022-05-30T00:00:00Z'
                          capacity: 1
                    - capacityType: AVAILABLE_CAPACITY
                      slots:
                        - startDateTime: '2022-04-05T00:00:00Z'
                          endDateTime: '2022-05-30T10:00:00Z'
                          capacity: 1
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9d267d55-9426-5bfp-cc47-f167gbadfhak32
                    body:
                      value:
                        capacityTypes:
                          - RESERVED_CAPACITY
                          - AVAILABLE_CAPACITY
                        startDateTime: '2021-04-04T00:00:00Z'
                        endDateTime: '2021-04-04T02:00:00Z'
                response:
                  resourceId: validResourceId-9d267d55-9426-5bfp-cc47-f167gbadfhak32
                  capacities:
                    - capacityType: AVAILABLE_CAPACITY
                      slots:
                        - startDateTime: '2021-04-04T00:00:00Z'
                          endDateTime: '2021-04-04T01:00:00Z'
                          capacity: 0
                        - startDateTime: '2021-04-04T01:00:00Z'
                          endDateTime: '2021-04-04T02:00:00Z'
                          capacity: 1
                    - capacityType: RESERVED_CAPACITY
                      slots:
                        - startDateTime: '2021-04-04T00:00:00Z'
                          endDateTime: '2021-04-04T01:00:00Z'
                          capacity: 1
                        - startDateTime: '2021-04-04T01:00:00Z'
                          endDateTime: '2021-04-04T02:00:00Z'
                          capacity: 0
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: '2021-04-04T00:00:00Z'
                        endDateTime: '2021-04-04T02:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [Missing or invalid
                        request parameters: [resourceId]]
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48a
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: '2021-04-04T00:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [startDateTime or
                        endDateTime are not present]
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48b
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: '2021-04-04T02:00:00Z'
                        endDateTime: '2021-04-04T00:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [endDateTime should be
                        after Start Time]
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9d267d55-9426-5bfp-cc47-f167gb969f48c
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: 2021-0
                        endDateTime: '2021-04-04T00:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [startDateTime is not a
                        valid ISO date/time object]
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_RangeSlotCapacityErrors'
      x-codegen-request-body-name: body
  /service/v1/serviceResources/{resourceId}/capacity/fixed:
    post:
      tags:
        - services_service
      description: >-
        Provides capacity in fixed-size slots. 


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getFixedSlotCapacity
      parameters:
        - name: resourceId
          in: path
          description: Resource Identifier.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: marketplaceIds
          in: query
          description: An identifier for the marketplace in which the resource operates.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
        - name: nextPageToken
          in: query
          description: Next page token returned in the response of your previous request.
          schema:
            type: string
      requestBody:
        description: Request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_FixedSlotCapacityQuery'
        required: true
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacity'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9e378g66-9537-6ggq-dd48-f167gb969f48
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                          - RESERVED_CAPACITY
                        startDateTime: '2021-04-04T00:00:00Z'
                        endDateTime: '2021-04-04T02:00:00Z'
                        slotDuration: 30
                response:
                  resourceId: validResourceId-9e378g66-9537-6ggq-dd48-f167gb969f48
                  slotDuration: 30
                  capacities:
                    - startDateTime: '2021-04-04T00:00:00Z'
                      scheduledCapacity: 1
                      reservedCapacity: 1
                    - startDateTime: '2021-04-04T00:30:00Z'
                      scheduledCapacity: 1
                      reservedCapacity: 0
                    - startDateTime: '2021-04-04T01:00:00Z'
                      scheduledCapacity: 0
                      reservedCapacity: 0
                    - startDateTime: '2021-04-04T01:30:00Z'
                      scheduledCapacity: 0
                      reservedCapacity: 0
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: '2021-04-04T00:00:00Z'
                        endDateTime: '2021-04-04T02:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [Missing or invalid
                        request parameters: [resourceId]]
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9d267d55-9dfa-5bfp-cc47-f167gb969f48a
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: '2021-04-04T00:00:00Z'
                        endDateTime: '2021-04-04T02:00:00Z'
                        slotDuration: 400
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [Slot duration is not
                        valid, it should be a multiple of 5 and within allowed
                        range.]
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9e378g66-9537-6ggq-dd48-f1klmb969f48
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: '2021-04-04T02:00:00Z'
                        endDateTime: '2021-04-04T00:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [endDateTime should be
                        after Start Time]
              - request:
                  parameters:
                    body:
                      resourceId:
                        value: validResourceId-9e378g66-9537-6ggq-dd48-f1klmb969f482
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: '2021-04-04T00:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [startDateTime or
                        endDateTime are not present]
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9e378g66-9537-6ggq-dd48-f1klmb969f483
                    body:
                      value:
                        capacityTypes:
                          - SCHEDULED_CAPACITY
                        startDateTime: 2021-0
                        endDateTime: '2021-04-04T00:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: This is invalid input
                      details: >-
                        Received the following errors: [startDateTime is not a
                        valid ISO date/time object]
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_FixedSlotCapacityErrors'
      x-codegen-request-body-name: body
  /service/v1/serviceResources/{resourceId}/schedules:
    put:
      tags:
        - services_service
      description: >-
        Update the schedule of the given resource.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: updateSchedule
      parameters:
        - name: resourceId
          in: path
          description: Resource (store) Identifier
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: marketplaceIds
          in: query
          description: An identifier for the marketplace in which the resource operates.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
      requestBody:
        description: Schedule details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_UpdateScheduleRequest'
        required: true
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                    body:
                      value:
                        schedules:
                          - startTime: '2020-01-01T00:00:00.00-07'
                            endTime: '2020-01-01T23:59:00.00-07'
                            recurrence:
                              endTime: '2020-01-06T23:59:00.00-07'
                              daysOfWeek:
                                - MONDAY
                                - TUESDAY
                                - WEDNESDAY
                                - THURSDAY
                                - FRIDAY
                          - startTime: '2020-01-11T00:00:00.00-07'
                            endTime: '2020-01-11T23:59:00.00-07'
                            recurrence:
                              endTime: '2020-01-16T23:59:00.00-07'
                              daysOfWeek:
                                - MONDAY
                                - TUESDAY
                                - WEDNESDAY
                response: {}
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                    body:
                      value:
                        schedules:
                          - startTime: '2020-01-01T12:00:00.00-07'
                            endTime: '2020-01-01T23:59:00.00-07'
                            recurrence:
                              endTime: '2020-01-06T23:59:00.00-07'
                              daysOfWeek:
                                - MONDAY
                                - TUESDAY
                                - WEDNESDAY
                                - THURSDAY
                                - FRIDAY
                          - startTime: '2020-01-11T00:00:00.00-07'
                            endTime: '2020-01-11T23:59:00.00-07'
                            recurrence:
                              endTime: '2020-01-16T23:59:00.00-07'
                              daysOfWeek:
                                - MONDAY
                                - TUESDAY
                                - WEDNESDAY
                response:
                  payload:
                    - availability:
                        startTime: '2020-01-01T12:00:00.00-07'
                        endTime: '2020-01-01T23:59:00.00-07'
                        recurrence:
                          endTime: '2020-01-06T23:59:00.00-07'
                          daysOfWeek:
                            - MONDAY
                            - TUESDAY
                            - WEDNESDAY
                            - THURSDAY
                            - FRIDAY
                      warnings:
                        - code: ScheduleOverride
                          message: >-
                            This AvailabilityRecord will override the current
                            schedule as the time-ranges overlap
              - request:
                  parameters:
                    resourceId:
                      value: invalidResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                    body:
                      value:
                        schedules:
                          - startTime: '2020-01-01T00:00:00.00-07'
                            endTime: '2020-01-01T23:59:00.00-07'
                            recurrence:
                              endTime: '2020-01-06T23:59:00.00-07'
                              daysOfWeek:
                                - MONDAY
                                - TUESDAY
                                - WEDNESDAY
                                - THURSDAY
                                - FRIDAY
                          - startTime: '2020-01-11T00:00:00.00-07'
                            endTime: '2020-01-11T23:59:00.00-07'
                            recurrence:
                              endTime: '2020-01-16T23:59:00.00-07'
                              daysOfWeek:
                                - MONDAY
                                - TUESDAY
                                - WEDNESDAY
                response:
                  errors:
                    - message: 'Invalid request parameters: [resourceId]'
                      code: InvalidInput
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    resourceId:
                      value: 'null'
                    body:
                      value:
                        schedules: []
                response:
                  errors:
                    - message: 'Missing or invalid request parameters: [resourceId]'
                      code: InvalidInput
              - request:
                  parameters:
                    resourceId:
                      value: validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                    body:
                      value:
                        schedules: []
                response:
                  errors:
                    - message: 'Missing or invalid request parameters: [schedule]'
                      code: InvalidInput
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateScheduleResponse'
      x-codegen-request-body-name: body
  /service/v1/reservation:
    post:
      tags:
        - services_service
      description: >-
        Create a reservation.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: createReservation
      parameters:
        - name: marketplaceIds
          in: query
          description: An identifier for the marketplace in which the resource operates.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
      requestBody:
        description: Reservation details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_CreateReservationRequest'
        required: true
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        resourceId: validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                        reservation:
                          availability:
                            startTime: '2020-04-01T10:00:00.00-07'
                            endTime: '2020-04-01T11:00:00.00-07'
                          type: BREAK
                response:
                  payload:
                    reservation:
                      reservationId: '457'
              - request:
                  parameters:
                    body:
                      value:
                        resourceId: invalidResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                        reservation:
                          availability:
                            startTime: '2020-04-01T10:00:00.00-07'
                            endTime: '2020-04-01T11:00:00.00-07'
                          type: BREAK
                response:
                  errors:
                    - message: 'Invalid request parameters: [resourceId]'
                      code: InvalidInput
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        resourceId: 'null'
                        reservation: {}
                response:
                  errors:
                    - message: 'Missing or invalid request parameters: [resourceId]'
                      code: InvalidInput
              - request:
                  parameters:
                    body:
                      value:
                        resourceId: validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                        reservation: {}
                response:
                  errors:
                    - message: 'Missing or invalid request parameters: [reservation]'
                      code: InvalidInput
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateReservationResponse'
      x-codegen-request-body-name: body
  /service/v1/reservation/{reservationId}:
    put:
      tags:
        - services_service
      description: >-
        Update a reservation.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: updateReservation
      parameters:
        - name: reservationId
          in: path
          description: Reservation Identifier
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: marketplaceIds
          in: query
          description: An identifier for the marketplace in which the resource operates.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
      requestBody:
        description: Reservation details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_UpdateReservationRequest'
        required: true
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reservationId:
                      value: '456'
                    body:
                      value:
                        resourceId: validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                        reservation:
                          availability:
                            startTime: '2020-04-01T10:00:00.00-07'
                            endTime: '2020-04-01T11:00:00.00-07'
                          type: BREAK
                response:
                  payload:
                    reservation:
                      reservationId: '457'
              - request:
                  parameters:
                    reservationId:
                      value: '456'
                    body:
                      value:
                        resourceId: invalidResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                        reservation:
                          availability:
                            startTime: '2020-04-01T10:00:00.00-07'
                            endTime: '2020-04-01T11:00:00.00-07'
                          type: BREAK
                response:
                  errors:
                    - message: 'Invalid request parameters: [resourceId]'
                      code: InvalidInput
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        resourceId: 'null'
                        reservation: {}
                response:
                  errors:
                    - message: 'Missing or invalid request parameters: [resourceId]'
                      code: InvalidInput
              - request:
                  parameters:
                    body:
                      value:
                        resourceId: validResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                        reservation: {}
                response:
                  errors:
                    - message: 'Missing or invalid request parameters: [reservation]'
                      code: InvalidInput
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
        '404':
          description: The reservation specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reservationId:
                      value: not-existent-456
                    body:
                      value:
                        resourceId: invalidResourceId-9c156c44-8315-4aeb-bb36-e056fa827e36
                        reservation:
                          availability:
                            startTime: '2020-04-01T10:00:00.00-07'
                            endTime: '2020-04-01T11:00:00.00-07'
                          type: BREAK
                response:
                  errors:
                    - message: 'Could not find reservation with ID: [not-existent-456]'
                      code: InvalidInput
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_UpdateReservationResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
        - services_service
      description: >-
        Cancel a reservation. 


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: cancelReservation
      parameters:
        - name: reservationId
          in: path
          description: Reservation Identifier
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: marketplaceIds
          in: query
          description: An identifier for the marketplace in which the resource operates.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
      responses:
        '204':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reservationId:
                      value: validReservationId-9c156c44-8315-4aeb-bb36-e056fa827e36
                response: {}
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reservationId:
                      value: invalidReservationId-a654baa-8315-4aeb-bb36-e056fa827e36
                response:
                  errors:
                    - message: 'Missing or invalid request parameters: [reservationId]'
                      code: InvalidInput
        '403':
          description: >-
            403 can be caused for reasons like Access Denied, Unauthorized,
            Expired Token, Invalid Signature or Resource Not Found.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
        '404':
          description: The reservation specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    reservationId:
                      value: >-
                        nonExistingReservationId-a3726c44-8315-4aeb-bb36-e056fa827e36
                response:
                  errors:
                    - message: Reservation does not exist
                      code: InvalidInput
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
        '415':
          description: >-
            The entity of the request is in a format not supported by the
            requested resource.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
        '500':
          description: >-
            Encountered an unexpected condition which prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CancelReservationResponse'
  /service/v1/serviceJobs/{serviceJobId}/appointmentSlots:
    get:
      tags:
        - services_service
      description: >-
        Gets appointment slots for the service associated with the service job
        id specified.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getAppointmmentSlotsByJobId
      parameters:
        - name: serviceJobId
          in: path
          description: >-
            A service job identifier to retrive appointment slots for associated
            service.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: marketplaceIds
          in: query
          description: An identifier for the marketplace in which the resource operates.
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
        - name: startTime
          in: query
          description: >-
            A time from which the appointment slots will be retrieved. The
            specified time must be in ISO 8601 format. If `startTime` is
            provided, `endTime` should also be provided. Default value is as per
            business configuration.
          schema:
            type: string
        - name: endTime
          in: query
          description: >-
            A time up to which the appointment slots will be retrieved. The
            specified time must be in ISO 8601 format. If `endTime` is provided,
            `startTime` should also be provided. Default value is as per
            business configuration. Maximum range of appointment slots can be 90
            days.
          schema:
            type: string
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: validJob-9c156c44-8315-4aeb-bb36-e056fa827e36
                response:
                  payload:
                    startTime: '2021-04-04T00:00:00Z'
                    endTime: '2021-04-04T02:00:00Z'
                    schedulingType: REAL_TIME_SCHEDULING
                    appointmentSlots:
                      - startTime: '2021-04-04T00:00:00Z'
                        endTime: 2021-04-04T01:0:00Z
                        capacity: 20
                      - startTime: '2021-04-04T01:00:00Z'
                        endTime: 2021-04-04T02:0:00Z
                        capacity: 0
              - request:
                  parameters:
                    serviceJobId:
                      value: validJob-9c156c44-8315-4aeb-bb36-e056fa827e36
                    startTime:
                      value: '2021-04-04T00:00:00Z'
                    endTime:
                      value: '2021-04-04T02:00:00Z'
                response:
                  payload:
                    startTime: '2021-04-04T00:00:00Z'
                    endTime: '2021-04-04T02:00:00Z'
                    schedulingType: REAL_TIME_SCHEDULING
                    appointmentSlots:
                      - startTime: '2021-04-04T00:00:00Z'
                        endTime: 2021-04-04T01:0:00Z
                        capacity: 20
                      - startTime: '2021-04-04T01:00:00Z'
                        endTime: 2021-04-04T02:0:00Z
                        capacity: 0
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    serviceJobId:
                      value: nullJobId
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [serviceJobId]'
              - request:
                  parameters:
                    serviceJobId:
                      value: validJob-9c156c44-8315-4aeb-bb36-e056fa827e36
                    endTime:
                      value: 20-21-04-04T01:00:00Z
                response:
                  errors:
                    - code: InvalidInput
                      message: End Time is not a valid ISO date/time object
              - request:
                  parameters:
                    serviceJobId:
                      value: validJob-9c156c44-8315-4aeb-bb36-e056fa827e36
                    startTime:
                      value: '2021-04-04T05:00:00Z'
                    endTime:
                      value: '2021-04-04T02:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: End Time should be after Start Time
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
  /service/v1/appointmentSlots:
    get:
      tags:
        - services_service
      description: >-
        Gets appointment slots as per the service context specified.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 20 | 40 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getAppointmentSlots
      parameters:
        - name: asin
          in: query
          description: ASIN associated with the service.
          required: true
          schema:
            type: string
        - name: storeId
          in: query
          description: >-
            Store identifier defining the region scope to retrive appointment
            slots.
          required: true
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: marketplaceIds
          in: query
          description: >-
            An identifier for the marketplace for which appointment slots are
            queried
          required: true
          style: form
          explode: false
          schema:
            maxItems: 1
            type: array
            items:
              type: string
        - name: startTime
          in: query
          description: >-
            A time from which the appointment slots will be retrieved. The
            specified time must be in ISO 8601 format. If `startTime` is
            provided, `endTime` should also be provided. Default value is as per
            business configuration.
          schema:
            type: string
        - name: endTime
          in: query
          description: >-
            A time up to which the appointment slots will be retrieved. The
            specified time must be in ISO 8601 format. If `endTime` is provided,
            `startTime` should also be provided. Default value is as per
            business configuration. Maximum range of appointment slots can be 90
            days.
          schema:
            type: string
      responses:
        '200':
          description: Success response.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    asin:
                      value: B07BB1RGT5
                    storeId:
                      value: 53694163-6dc8-4f80-b6b1-ec47b7b9747e
                response:
                  payload:
                    startTime: '2021-04-04T00:00:00Z'
                    endTime: '2021-04-04T02:00:00Z'
                    schedulingType: REAL_TIME_SCHEDULING
                    appointmentSlots:
                      - startTime: '2021-04-04T00:00:00Z'
                        endTime: 2021-04-04T01:0:00Z
                        capacity: 20
                      - startTime: '2021-04-04T01:00:00Z'
                        endTime: 2021-04-04T02:0:00Z
                        capacity: 0
              - request:
                  parameters:
                    asin:
                      value: B07BB1RGT6
                    storeId:
                      value: 53694163-6dc8-4f80-b6b1-ec47b7b9747f
                    startTime:
                      value: '2021-04-04T00:00:00Z'
                    endTime:
                      value: '2021-04-04T02:00:00Z'
                response:
                  payload:
                    startTime: '2021-04-04T00:00:00Z'
                    endTime: '2021-04-04T02:00:00Z'
                    schedulingType: NON_REAL_TIME_SCHEDULING
                    appointmentSlots:
                      - startTime: '2021-04-04T00:00:00Z'
                        endTime: 2021-04-04T01:0:00Z
                        capacity: 20
                      - startTime: '2021-04-04T01:00:00Z'
                        endTime: 2021-04-04T02:0:00Z
                        capacity: 0
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    asin:
                      value: nullValue
                    storeId:
                      value: 53694163-6dc8-4f80-b6b1-ec47b7b9747e
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [asin]'
              - request:
                  parameters:
                    asin:
                      value: B07BB1RGT5
                    storeId:
                      value: 53694163-6dc8-4f80-b6b1-ec47b7b9747e
                    endTime:
                      value: 20-21-04-04T01:00:00Z
                response:
                  errors:
                    - code: InvalidInput
                      message: Range End Time is not a valid ISO date/time object
              - request:
                  parameters:
                    asin:
                      value: B07BB1RGT5
                    storeId:
                      value: 53694163-6dc8-4f80-b6b1-ec47b7b9747e
                    startTime:
                      value: '2021-04-04T05:00:00Z'
                    endTime:
                      value: '2021-04-04T02:00:00Z'
                response:
                  errors:
                    - code: InvalidInput
                      message: Range End Time should be after Range Start Time
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_GetAppointmentSlotsResponse'
  /service/v1/documents:
    post:
      tags:
        - services_service
      description: >-
        Creates an upload destination.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 5 | 20 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: createServiceDocumentUploadDestination
      requestBody:
        description: Upload document operation input details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_ServiceUploadDocument'
        required: true
      responses:
        '200':
          description: Successfully created an upload destination for the given resource.
          headers:
            x-amzn-requestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        contentType: PNG
                        contentLength: 1386437
                        contentMD5: 97WrSKv9ffHkDopCdB32mw==
                response:
                  payload:
                    encryptionDetails:
                      standard: AES
                      initializationVector: paPlpo1iBBLmyOhU0mIo5g==
                      key: PDuDJm2l+0ydObrRpS48tB+t2qbtOmWhSEOiFWKnH2k=
                    uploadDestinationId: >-
                      amzn1.tortuga.3.15ba627d-8e24-42ad-89d1-5eb01f5ba0af.T15MXQRST78UTC<->amzn1.tortuga.1.token.DizquVc+EoX/lWAV/7WTlw==
                    url: >-
                      https://tortuga-devo.s3-us-west-2.amazonaws.com/%2FThirtyDays/amzn1.tortuga.3.15ba627d-8e24-42ad-89d1-5eb01f5ba0af.T15MXQRST78UTC?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20210108T103450Z&X-Amz-SignedHeaders=content-type%3Bhost&X-Amz-Expires=300&X-Amz-Credential=AKIAUR3X5C6O5CADVWED%2F20210108%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=dd2fefe6c6102aba14bab1481b33cf07dcc0385bd49f7eb5796d77b082ea5ba3
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value: {}
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        Missing or invalid request parameters: [contentType,
                        contentLength].
                      details: ''
              - request:
                  parameters:
                    body:
                      value:
                        contentType: PNG
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [contentLength].'
                      details: ''
              - request:
                  parameters:
                    body:
                      value:
                        contentLength: 123
                response:
                  errors:
                    - code: InvalidInput
                      message: 'Missing or invalid request parameters: [contentType].'
                      details: ''
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
        '404':
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
        '413':
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
        '415':
          description: The request's Content-Type header is invalid.
          headers:
            x-amzn-requestid:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
        '422':
          description: Unprocessable Entity. Unable to process the contained instructions.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        contentType: PNGr
                        contentLength: 1386437
                        contentMD5: 97WrSKv9ffHkDopCdB32mw==
                response:
                  errors:
                    - code: InvalidInput
                      message: >-
                        contentType parameter is invalid. Use one of ['TIFF',
                        'JPG', 'PNG', 'JPEG', 'GIF', 'PDF']
                      details: ''
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-requestid:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference id.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                **Note:** For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1_CreateServiceDocumentUploadDestination'
      x-codegen-request-body-name: body
  /tokens/2021-03-01/restrictedDataToken:
    post:
      tags:
        - tokens_tokens
      description: >-
        Returns a Restricted Data Token (RDT) for one or more restricted
        resources that you specify. A restricted resource is the HTTP method and
        path from a restricted operation that returns Personally Identifiable
        Information (PII), plus a dataElements value that indicates the type of
        PII requested. See the Tokens API Use Case Guide for a list of
        restricted operations. Use the RDT returned here as the access token in
        subsequent calls to the corresponding restricted operations.


        **Usage Plan:**


        | Rate (requests per second) | Burst |

        | ---- | ---- |

        | 1 | 10 |


        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate
        limits that were applied to the requested operation, when available. The
        table above indicates the default rate and burst values for this
        operation. Selling partners whose business demands require higher
        throughput may see higher rate and burst values than those shown here.
        For more information, see [Usage Plans and Rate Limits in the Selling
        Partner
        API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
      operationId: createRestrictedDataToken
      requestBody:
        description: The restricted data token request details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2021-03-01_CreateRestrictedDataTokenRequest'
        required: true
      responses:
        '200':
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/2021-03-01_CreateRestrictedDataTokenResponse
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        targetApplication: amzn1.sellerapps.app.target-application
                        restrictedResources:
                          - method: GET
                            path: /orders/v0/orders/{orderId}/address
                response:
                  restrictedDataToken: Atz.sprdt|IQEBLjAsAhRmHjNgHpi0U-Dme37rR6CuUpSR
                  expiresIn: 3600
              - request:
                  parameters:
                    body:
                      value:
                        restrictedResources:
                          - method: GET
                            path: /orders/v0/orders/943-12-123434/address
                response:
                  restrictedDataToken: Atz.sprdt|AODFNESLjAsAhRmHjNgHpi0U-Dme37rR6CuUpSR
                  expiresIn: 3600
        '400':
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-03-01_ErrorList'
          x-amzn-api-sandbox:
            static:
              - request:
                  parameters:
                    body:
                      value:
                        targetApplication: amzn1.sellerapps.app.target-application
                        restrictedResources:
                          - method: ''
                            path: /orders/v1/orders/902-1845936-5435065/address
                response:
                  errors:
                    - code: InvalidRequest
                      message: Request is missing or has invalid parameters
                      details: Resource not provided.
        '401':
          description: >-
            The request's Authorization header is not formatted correctly or
            does not contain a valid token.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-03-01_ErrorList'
        '403':
          description: >-
            Indicates that access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-03-01_ErrorList'
        '404':
          description: The specified resource does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-03-01_ErrorList'
        '415':
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-03-01_ErrorList'
        '429':
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-03-01_ErrorList'
        '500':
          description: >-
            An unexpected condition occurred that prevented the server from
            fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-03-01_ErrorList'
        '503':
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: >-
                Your rate limit (requests per second) for this operation.

                _Note:_ For this status code, the rate limit header is
                deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/2021-03-01_ErrorList'
      x-codegen-request-body-name: body
components:
  schemas:
    v1_GetAuthorizationCodeResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_AuthorizationCode'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the GetAuthorizationCode operation.
    v1_AuthorizationCode:
      type: object
      properties:
        authorizationCode:
          type: string
          description: >-
            A Login with Amazon (LWA) authorization code that can be exchanged
            for a refresh token and access token that authorize you to make
            calls to a Selling Partner API.
      description: A Login with Amazon (LWA) authorization code.
    v1_ErrorList:
      type: array
      description: A list of error responses returned when a request is unsuccessful.
      items:
        $ref: '#/components/schemas/v1_Error'
    v1_Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: >-
            A message that describes the error condition in a human-readable
            form.
        details:
          type: string
          description: >-
            Additional details that can help the caller understand or fix the
            issue.
        errorLevel:
          type: string
          description: The type of error.
          enum:
            - ERROR
            - WARNING
          x-docgen-enum-table-extension:
            - value: ERROR
              description: Error
            - value: WARNING
              description: Warning
      description: Error response returned when the request is unsuccessful.
    2022-04-01_Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: A message that describes the error condition.
        details:
          type: string
          description: >-
            Additional details that can help the caller understand or fix the
            issue.
      description: Error response returned when the request is unsuccessful.
    2022-04-01_ErrorList:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/2022-04-01_Error'
      description: A list of error responses returned when a request is unsuccessful.
    2022-04-01_Item:
      required:
        - asin
      type: object
      properties:
        asin:
          $ref: '#/components/schemas/2022-04-01_ItemAsin'
        attributes:
          $ref: '#/components/schemas/2022-04-01_ItemAttributes'
        dimensions:
          $ref: '#/components/schemas/2022-04-01_ItemDimensions'
        identifiers:
          $ref: '#/components/schemas/2022-04-01_ItemIdentifiers'
        images:
          $ref: '#/components/schemas/2022-04-01_ItemImages'
        productTypes:
          $ref: '#/components/schemas/2022-04-01_ItemProductTypes'
        relationships:
          $ref: '#/components/schemas/2022-04-01_ItemRelationships'
        salesRanks:
          $ref: '#/components/schemas/2022-04-01_ItemSalesRanks'
        summaries:
          $ref: '#/components/schemas/2022-04-01_ItemSummaries'
        vendorDetails:
          $ref: '#/components/schemas/2022-04-01_ItemVendorDetails'
      description: An item in the Amazon catalog.
    2022-04-01_ItemAsin:
      type: string
      description: >-
        Amazon Standard Identification Number (ASIN) is the unique identifier
        for an item in the Amazon catalog.
    2022-04-01_ItemAttributes:
      type: object
      description: >-
        A JSON object that contains structured item attribute data keyed by
        attribute name. Catalog item attributes conform to the related product
        type definitions available in the Selling Partner API for Product Type
        Definitions.
    2022-04-01_ItemBrowseClassification:
      required:
        - classificationId
        - displayName
      type: object
      properties:
        displayName:
          type: string
          description: Display name for the classification.
        classificationId:
          type: string
          description: Identifier of the classification (browse node identifier).
      description: Classification (browse node) associated with an Amazon catalog item.
    2022-04-01_ItemContributor:
      required:
        - role
        - value
      type: object
      properties:
        role:
          $ref: '#/components/schemas/2022-04-01_ItemContributorRole'
        value:
          type: string
          description: Name of the contributor, such as Jane Austen.
      description: >-
        Individual contributor to the creation of an item, such as an author or
        actor.
    2022-04-01_ItemContributorRole:
      required:
        - value
      type: object
      properties:
        displayName:
          type: string
          description: >-
            Display name of the role in the requested locale, such as Author or
            Actor.
        value:
          type: string
          description: Role value for the Amazon catalog item, such as author or actor.
      description: >-
        Role of an individual contributor in the creation of an item, such as
        author or actor.
    2022-04-01_Dimension:
      type: object
      properties:
        unit:
          type: string
          description: Measurement unit of the dimension value.
        value:
          type: number
          description: Numeric dimension value.
      description: Individual dimension value of an Amazon catalog item or item package.
    2022-04-01_Dimensions:
      type: object
      properties:
        height:
          $ref: '#/components/schemas/2022-04-01_Dimension'
        length:
          $ref: '#/components/schemas/2022-04-01_Dimension'
        weight:
          $ref: '#/components/schemas/2022-04-01_Dimension'
        width:
          $ref: '#/components/schemas/2022-04-01_Dimension'
      description: Dimensions of an Amazon catalog item or item in its packaging.
    2022-04-01_ItemDimensions:
      type: array
      description: >-
        Array of dimensions associated with the item in the Amazon catalog by
        Amazon marketplace.
      items:
        $ref: '#/components/schemas/2022-04-01_ItemDimensionsByMarketplace'
    2022-04-01_ItemDimensionsByMarketplace:
      required:
        - marketplaceId
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        item:
          $ref: '#/components/schemas/2022-04-01_Dimensions'
        package:
          $ref: '#/components/schemas/2022-04-01_Dimensions'
      description: >-
        Dimensions associated with the item in the Amazon catalog for the
        indicated Amazon marketplace.
    2022-04-01_ItemIdentifiers:
      type: array
      description: >-
        Identifiers associated with the item in the Amazon catalog, such as UPC
        and EAN identifiers.
      items:
        $ref: '#/components/schemas/2022-04-01_ItemIdentifiersByMarketplace'
    2022-04-01_ItemIdentifiersByMarketplace:
      required:
        - identifiers
        - marketplaceId
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        identifiers:
          type: array
          description: >-
            Identifiers associated with the item in the Amazon catalog for the
            indicated Amazon marketplace.
          items:
            $ref: '#/components/schemas/2022-04-01_ItemIdentifier'
      description: >-
        Identifiers associated with the item in the Amazon catalog for the
        indicated Amazon marketplace.
    2022-04-01_ItemIdentifier:
      required:
        - identifier
        - identifierType
      type: object
      properties:
        identifierType:
          type: string
          description: Type of identifier, such as UPC, EAN, or ISBN.
        identifier:
          type: string
          description: Identifier.
      description: >-
        Identifier associated with the item in the Amazon catalog, such as a UPC
        or EAN identifier.
    2022-04-01_ItemImages:
      type: array
      description: Images for an item in the Amazon catalog.
      items:
        $ref: '#/components/schemas/2022-04-01_ItemImagesByMarketplace'
    2022-04-01_ItemImagesByMarketplace:
      required:
        - images
        - marketplaceId
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        images:
          type: array
          description: >-
            Images for an item in the Amazon catalog for the indicated Amazon
            marketplace.
          items:
            $ref: '#/components/schemas/2022-04-01_ItemImage'
      description: >-
        Images for an item in the Amazon catalog for the indicated Amazon
        marketplace.
    2022-04-01_ItemImage:
      required:
        - height
        - link
        - variant
        - width
      type: object
      properties:
        variant:
          type: string
          description: Variant of the image, such as `MAIN` or `PT01`.
          example: MAIN
          enum:
            - MAIN
            - PT01
            - PT02
            - PT03
            - PT04
            - PT05
            - PT06
            - PT07
            - PT08
            - SWCH
          x-docgen-enum-table-extension:
            - value: MAIN
              description: Main image for the item.
            - value: PT01
              description: 'Other image #1 for the item.'
            - value: PT02
              description: 'Other image #2 for the item.'
            - value: PT03
              description: 'Other image #3 for the item.'
            - value: PT04
              description: 'Other image #4 for the item.'
            - value: PT05
              description: 'Other image #5 for the item.'
            - value: PT06
              description: 'Other image #6 for the item.'
            - value: PT07
              description: 'Other image #7 for the item.'
            - value: PT08
              description: 'Other image #8 for the item.'
            - value: SWCH
              description: Swatch image for the item.
        link:
          type: string
          description: Link, or URL, for the image.
        height:
          type: integer
          description: Height of the image in pixels.
        width:
          type: integer
          description: Width of the image in pixels.
      description: Image for an item in the Amazon catalog.
    2022-04-01_ItemProductTypes:
      type: array
      description: Product types associated with the Amazon catalog item.
      items:
        $ref: '#/components/schemas/2022-04-01_ItemProductTypeByMarketplace'
    2022-04-01_ItemProductTypeByMarketplace:
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        productType:
          type: string
          description: Name of the product type associated with the Amazon catalog item.
          example: LUGGAGE
      description: >-
        Product type associated with the Amazon catalog item for the indicated
        Amazon marketplace.
    2022-04-01_ItemSalesRanks:
      type: array
      description: Sales ranks of an Amazon catalog item.
      items:
        $ref: '#/components/schemas/2022-04-01_ItemSalesRanksByMarketplace'
    2022-04-01_ItemSalesRanksByMarketplace:
      required:
        - marketplaceId
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        classificationRanks:
          type: array
          description: >-
            Sales ranks of an Amazon catalog item for an Amazon marketplace by
            classification.
          items:
            $ref: '#/components/schemas/2022-04-01_ItemClassificationSalesRank'
        displayGroupRanks:
          type: array
          description: >-
            Sales ranks of an Amazon catalog item for an Amazon marketplace by
            website display group.
          items:
            $ref: '#/components/schemas/2022-04-01_ItemDisplayGroupSalesRank'
      description: >-
        Sales ranks of an Amazon catalog item for the indicated Amazon
        marketplace.
    2022-04-01_ItemClassificationSalesRank:
      required:
        - classificationId
        - rank
        - title
      type: object
      properties:
        classificationId:
          type: string
          description: Identifier of the classification associated with the sales rank.
        title:
          type: string
          description: Title, or name, of the sales rank.
        link:
          type: string
          description: >-
            Corresponding Amazon retail website link, or URL, for the sales
            rank.
        rank:
          type: integer
          description: Sales rank value.
      description: Sales rank of an Amazon catalog item by classification.
    2022-04-01_ItemDisplayGroupSalesRank:
      required:
        - rank
        - title
        - websiteDisplayGroup
      type: object
      properties:
        websiteDisplayGroup:
          type: string
          description: Name of the website display group associated with the sales rank
        title:
          type: string
          description: Title, or name, of the sales rank.
        link:
          type: string
          description: >-
            Corresponding Amazon retail website link, or URL, for the sales
            rank.
        rank:
          type: integer
          description: Sales rank value.
      description: Sales rank of an Amazon catalog item by website display group.
    2022-04-01_ItemSummaries:
      type: array
      description: Summary details of an Amazon catalog item.
      items:
        $ref: '#/components/schemas/2022-04-01_ItemSummaryByMarketplace'
    2022-04-01_ItemSummaryByMarketplace:
      required:
        - marketplaceId
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        adultProduct:
          type: boolean
          description: >-
            Identifies an Amazon catalog item is intended for an adult audience
            or is sexual in nature.
        autographed:
          type: boolean
          description: >-
            Identifies an Amazon catalog item is autographed by a player or
            celebrity.
        brand:
          type: string
          description: Name of the brand associated with an Amazon catalog item.
        browseClassification:
          $ref: '#/components/schemas/2022-04-01_ItemBrowseClassification'
        color:
          type: string
          description: Name of the color associated with an Amazon catalog item.
        contributors:
          type: array
          description: >-
            Individual contributors to the creation of an item, such as the
            authors or actors.
          items:
            $ref: '#/components/schemas/2022-04-01_ItemContributor'
        itemClassification:
          type: string
          description: Classification type associated with the Amazon catalog item.
          enum:
            - BASE_PRODUCT
            - OTHER
            - PRODUCT_BUNDLE
            - VARIATION_PARENT
          x-docgen-enum-table-extension:
            - value: BASE_PRODUCT
              description: >-
                Represents a standard standalone or a variation child item in
                the Amazon catalog.
            - value: OTHER
              description: >-
                Represents an item in the Amazon catalog that is not
                `BASE_PRODUCT`, `PRODUCT_BUNDLE`, or `VARIATION_PARENT`.
            - value: PRODUCT_BUNDLE
              description: >-
                Represents a parent Amazon catalog item representing a bundle of
                items.
            - value: VARIATION_PARENT
              description: >-
                Represents a parent Amazon catalog item grouping child items
                into a variation family.
        itemName:
          type: string
          description: Name, or title, associated with an Amazon catalog item.
        manufacturer:
          type: string
          description: Name of the manufacturer associated with an Amazon catalog item.
        memorabilia:
          type: boolean
          description: >-
            Identifies an Amazon catalog item is memorabilia valued for its
            connection with historical events, culture, or entertainment.
        modelNumber:
          type: string
          description: Model number associated with an Amazon catalog item.
        packageQuantity:
          type: integer
          description: Quantity of an Amazon catalog item in one package.
        partNumber:
          type: string
          description: Part number associated with an Amazon catalog item.
        releaseDate:
          type: string
          description: >-
            First date on which an Amazon catalog item is shippable to
            customers.
          format: date
        size:
          type: string
          description: Name of the size associated with an Amazon catalog item.
        style:
          type: string
          description: Name of the style associated with an Amazon catalog item.
        tradeInEligible:
          type: boolean
          description: Identifies an Amazon catalog item is eligible for trade-in.
        websiteDisplayGroup:
          type: string
          description: >-
            Identifier of the website display group associated with an Amazon
            catalog item.
        websiteDisplayGroupName:
          type: string
          description: >-
            Display name of the website display group associated with an Amazon
            catalog item.
      description: >-
        Summary details of an Amazon catalog item for the indicated Amazon
        marketplace.
    2022-04-01_ItemVariationTheme:
      type: object
      properties:
        attributes:
          type: array
          description: >-
            Names of the Amazon catalog item attributes associated with the
            variation theme.
          items:
            type: string
        theme:
          type: string
          description: >-
            Variation theme indicating the combination of Amazon item catalog
            attributes that define the variation family.
          example: COLOR_NAME/STYLE_NAME
      description: >-
        Variation theme indicating the combination of Amazon item catalog
        attributes that define the variation family.
    2022-04-01_ItemRelationships:
      type: array
      description: >-
        Relationships by marketplace for an Amazon catalog item (for example,
        variations).
      items:
        $ref: '#/components/schemas/2022-04-01_ItemRelationshipsByMarketplace'
    2022-04-01_ItemRelationshipsByMarketplace:
      required:
        - marketplaceId
        - relationships
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        relationships:
          type: array
          description: Relationships for the item.
          items:
            $ref: '#/components/schemas/2022-04-01_ItemRelationship'
      description: >-
        Relationship details for the Amazon catalog item for the indicated
        Amazon marketplace.
    2022-04-01_ItemRelationship:
      required:
        - type
      type: object
      properties:
        childAsins:
          type: array
          description: >-
            Identifiers (ASINs) of the related items that are children of this
            item.
          items:
            type: string
        parentAsins:
          type: array
          description: >-
            Identifiers (ASINs) of the related items that are parents of this
            item.
          items:
            type: string
        variationTheme:
          $ref: '#/components/schemas/2022-04-01_ItemVariationTheme'
        type:
          type: string
          description: Type of relationship.
          example: VARIATION
          enum:
            - VARIATION
            - PACKAGE_HIERARCHY
          x-docgen-enum-table-extension:
            - value: VARIATION
              description: >-
                The Amazon catalog item in the request is a variation parent or
                variation child of the related item(s) indicated by ASIN.
            - value: PACKAGE_HIERARCHY
              description: >-
                The Amazon catalog item in the request is a package container or
                is contained by the related item(s) indicated by ASIN.
      description: Relationship details for an Amazon catalog item.
    2022-04-01_ItemVendorDetailsCategory:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the product category or subcategory
        value:
          type: string
          description: Value (code) of the product category or subcategory.
      description: Product category or subcategory associated with an Amazon catalog item.
    2022-04-01_ItemVendorDetails:
      type: array
      description: >-
        Vendor details associated with an Amazon catalog item. Vendor details
        are available to vendors only.
      items:
        $ref: '#/components/schemas/2022-04-01_ItemVendorDetailsByMarketplace'
    2022-04-01_ItemVendorDetailsByMarketplace:
      required:
        - marketplaceId
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        brandCode:
          type: string
          description: Brand code associated with an Amazon catalog item.
        manufacturerCode:
          type: string
          description: Manufacturer code associated with an Amazon catalog item.
        manufacturerCodeParent:
          type: string
          description: Parent vendor code of the manufacturer code.
        productCategory:
          $ref: '#/components/schemas/2022-04-01_ItemVendorDetailsCategory'
        productGroup:
          type: string
          description: Product group associated with an Amazon catalog item.
        productSubcategory:
          $ref: '#/components/schemas/2022-04-01_ItemVendorDetailsCategory'
        replenishmentCategory:
          type: string
          description: Replenishment category associated with an Amazon catalog item.
          enum:
            - ALLOCATED
            - BASIC_REPLENISHMENT
            - IN_SEASON
            - LIMITED_REPLENISHMENT
            - MANUFACTURER_OUT_OF_STOCK
            - NEW_PRODUCT
            - NON_REPLENISHABLE
            - NON_STOCKUPABLE
            - OBSOLETE
            - PLANNED_REPLENISHMENT
          x-docgen-enum-table-extension:
            - value: ALLOCATED
              description: >-
                Indicates non-automated purchasing of inventory that has been
                allocated to Amazon by the vendor.
            - value: BASIC_REPLENISHMENT
              description: Indicates non-automated purchasing of inventory.
            - value: IN_SEASON
              description: >-
                Indicates non-automated purchasing of inventory for seasonal
                items.
            - value: LIMITED_REPLENISHMENT
              description: >-
                Holding queue replenishment status before an item is
                `NEW_PRODUCT`.
            - value: MANUFACTURER_OUT_OF_STOCK
              description: >-
                Indicates vendor is out of stock for a longer period of time and
                cannot backorder.
            - value: NEW_PRODUCT
              description: >-
                Indicates a new item that Amazon does not yet stock in
                inventory.
            - value: NON_REPLENISHABLE
              description: >-
                Indicates assortment parent used for detail page display, not
                actual items.
            - value: NON_STOCKUPABLE
              description: >-
                Indicates drop ship inventory that Amazon does not stock in its
                fulfillment centers.
            - value: OBSOLETE
              description: Indicates item is obsolete and should not be ordered.
            - value: PLANNED_REPLENISHMENT
              description: Indicates active items that should be automatically ordered.
      description: >-
        Vendor details associated with an Amazon catalog item for the indicated
        Amazon marketplace.
    2022-04-01_ItemSearchResults:
      required:
        - items
        - numberOfResults
        - pagination
        - refinements
      type: object
      properties:
        numberOfResults:
          type: integer
          description: >-
            For `identifiers`-based searches, the total number of Amazon catalog
            items found. For `keywords`-based searches, the estimated total
            number of Amazon catalog items matched by the search query (only
            results up to the page count limit will be returned per request
            regardless of the number found).


            Note: The maximum number of items (ASINs) that can be returned and
            paged through is 1000.
        pagination:
          $ref: '#/components/schemas/2022-04-01_Pagination'
        refinements:
          $ref: '#/components/schemas/2022-04-01_Refinements'
        items:
          type: array
          description: A list of items from the Amazon catalog.
          items:
            $ref: '#/components/schemas/2022-04-01_Item'
      description: Items in the Amazon catalog and search related metadata.
    2022-04-01_Pagination:
      type: object
      properties:
        nextToken:
          type: string
          description: A token that can be used to fetch the next page.
        previousToken:
          type: string
          description: A token that can be used to fetch the previous page.
      description: >-
        When a request produces a response that exceeds the `pageSize`,
        pagination occurs. This means the response is divided into individual
        pages. To retrieve the next page or the previous page, you must pass the
        `nextToken` value or the `previousToken` value as the `pageToken`
        parameter in the next request. When you receive the last page, there
        will be no `nextToken` key in the pagination object.
    2022-04-01_Refinements:
      required:
        - brands
        - classifications
      type: object
      properties:
        brands:
          type: array
          description: Brand search refinements.
          items:
            $ref: '#/components/schemas/2022-04-01_BrandRefinement'
        classifications:
          type: array
          description: Classification search refinements.
          items:
            $ref: '#/components/schemas/2022-04-01_ClassificationRefinement'
      description: Search refinements.
    2022-04-01_BrandRefinement:
      required:
        - brandName
        - numberOfResults
      type: object
      properties:
        numberOfResults:
          type: integer
          description: >-
            The estimated number of results that would still be returned if
            refinement key applied.
        brandName:
          type: string
          description: Brand name. For display and can be used as a search refinement.
      description: >-
        Description of a brand that can be used to get more fine-grained search
        results.
    2022-04-01_ClassificationRefinement:
      required:
        - classificationId
        - displayName
        - numberOfResults
      type: object
      properties:
        numberOfResults:
          type: integer
          description: >-
            The estimated number of results that would still be returned if
            refinement key applied.
        displayName:
          type: string
          description: Display name for the classification.
        classificationId:
          type: string
          description: >-
            Identifier for the classification that can be used for search
            refinement purposes.
      description: >-
        Description of a classification that can be used to get more
        fine-grained search results.
    v0_AdhocDisbursementEvent:
      type: object
      properties:
        TransactionType:
          type: string
          description: |-
            Indicates the type of transaction.

            Example: "Disbursed to Amazon Gift Card balance"
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        TransactionId:
          type: string
          description: The identifier for the transaction.
        TransactionAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: An event related to an Adhoc Disbursement.
    v0_AdhocDisbursementEventList:
      type: array
      description: A list of `AdhocDisbursement` events.
      items:
        $ref: '#/components/schemas/v0_AdhocDisbursementEvent'
    v0_AdjustmentEvent:
      type: object
      properties:
        AdjustmentType:
          type: string
          description: >-
            The type of adjustment.


            Possible values:


            * FBAInventoryReimbursement - An FBA inventory reimbursement to a
            seller's account. This occurs if a seller's inventory is damaged.


            * ReserveEvent - A reserve event that is generated at the time of a
            settlement period closing. This occurs when some money from a
            seller's account is held back.


            * PostageBilling - The amount paid by a seller for shipping labels.


            * PostageRefund - The reimbursement of shipping labels purchased for
            orders that were canceled or refunded.


            * LostOrDamagedReimbursement - An Amazon Easy Ship reimbursement to
            a seller's account for a package that we lost or damaged.


            * CanceledButPickedUpReimbursement - An Amazon Easy Ship
            reimbursement to a seller's account. This occurs when a package is
            picked up and the order is subsequently canceled. This value is used
            only in the India marketplace.


            * ReimbursementClawback - An Amazon Easy Ship reimbursement clawback
            from a seller's account. This occurs when a prior reimbursement is
            reversed. This value is used only in the India marketplace.


            * SellerRewards - An award credited to a seller's account for their
            participation in an offer in the Seller Rewards program. Applies
            only to the India marketplace.
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        AdjustmentAmount:
          $ref: '#/components/schemas/v0_Currency'
        AdjustmentItemList:
          $ref: '#/components/schemas/v0_AdjustmentItemList'
      description: An adjustment to the seller's account.
    v0_AdjustmentEventList:
      type: array
      description: A list of adjustment event information for the seller's account.
      items:
        $ref: '#/components/schemas/v0_AdjustmentEvent'
    v0_AdjustmentItem:
      type: object
      properties:
        Quantity:
          type: string
          description: >-
            Represents the number of units in the seller's inventory when the
            AdustmentType is FBAInventoryReimbursement.
        PerUnitAmount:
          $ref: '#/components/schemas/v0_Currency'
        TotalAmount:
          $ref: '#/components/schemas/v0_Currency'
        SellerSKU:
          type: string
          description: >-
            The seller SKU of the item. The seller SKU is qualified by the
            seller's seller ID, which is included with every call to the Selling
            Partner API.
        FnSKU:
          type: string
          description: >-
            A unique identifier assigned to products stored in and fulfilled
            from a fulfillment center.
        ProductDescription:
          type: string
          description: A short description of the item.
        ASIN:
          type: string
          description: The Amazon Standard Identification Number (ASIN) of the item.
      description: An item in an adjustment to the seller's account.
    v0_AdjustmentItemList:
      type: array
      description: >-
        A list of information about items in an adjustment to the seller's
        account.
      items:
        $ref: '#/components/schemas/v0_AdjustmentItem'
    v0_AffordabilityExpenseEvent:
      required:
        - TaxTypeCGST
        - TaxTypeIGST
        - TaxTypeSGST
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined identifier for an order.
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        MarketplaceId:
          type: string
          description: An encrypted, Amazon-defined marketplace identifier.
        TransactionType:
          type: string
          description: |-
            Indicates the type of transaction. 

            Possible values:

            * Charge - For an affordability promotion expense.

            * Refund - For an affordability promotion expense reversal.
        BaseExpense:
          $ref: '#/components/schemas/v0_Currency'
        TaxTypeCGST:
          $ref: '#/components/schemas/v0_Currency'
        TaxTypeSGST:
          $ref: '#/components/schemas/v0_Currency'
        TaxTypeIGST:
          $ref: '#/components/schemas/v0_Currency'
        TotalExpense:
          $ref: '#/components/schemas/v0_Currency'
      description: An expense related to an affordability promotion.
    v0_AffordabilityExpenseEventList:
      type: array
      description: A list of expense information related to an affordability promotion.
      items:
        $ref: '#/components/schemas/v0_AffordabilityExpenseEvent'
    v0_BigDecimal:
      type: number
    v0_ChargeComponent:
      type: object
      properties:
        ChargeType:
          type: string
          description: The type of charge.
        ChargeAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: >-
        A charge on the seller's account.


        Possible values:


        * Principal - The selling price of the order item, equal to the selling
        price of the item multiplied by the quantity ordered.


        * Tax - The tax collected by the seller on the Principal.


        * MarketplaceFacilitatorTax-Principal - The tax withheld on the
        Principal.


        * MarketplaceFacilitatorTax-Shipping - The tax withheld on the
        ShippingCharge.


        * MarketplaceFacilitatorTax-Giftwrap - The tax withheld on the Giftwrap
        charge.


        * MarketplaceFacilitatorTax-Other - The tax withheld on other
        miscellaneous charges.


        * Discount - The promotional discount for an order item.


        * TaxDiscount - The tax amount deducted for promotional rebates.


        * CODItemCharge - The COD charge for an order item.


        * CODItemTaxCharge - The tax collected by the seller on a CODItemCharge.


        * CODOrderCharge - The COD charge for an order.


        * CODOrderTaxCharge - The tax collected by the seller on a
        CODOrderCharge.


        * CODShippingCharge - Shipping charges for a COD order.


        * CODShippingTaxCharge - The tax collected by the seller on a
        CODShippingCharge.


        * ShippingCharge - The shipping charge.


        * ShippingTax - The tax collected by the seller on a ShippingCharge.


        * Goodwill - The amount given to a buyer as a gesture of goodwill or to
        compensate for pain and suffering in the buying experience.


        * Giftwrap - The gift wrap charge.


        * GiftwrapTax - The tax collected by the seller on a Giftwrap charge.


        * RestockingFee - The charge applied to the buyer when returning a
        product in certain categories.


        * ReturnShipping - The amount given to the buyer to compensate for
        shipping the item back in the event we are at fault.


        * PointsFee - The value of Amazon Points deducted from the refund if the
        buyer does not have enough Amazon Points to cover the deduction.


        * GenericDeduction - A generic bad debt deduction.


        * FreeReplacementReturnShipping - The compensation for return shipping
        when a buyer receives the wrong item, requests a free replacement, and
        returns the incorrect item.


        * PaymentMethodFee - The fee collected for certain payment methods in
        certain marketplaces.


        * ExportCharge - The export duty that is charged when an item is shipped
        to an international destination as part of the Amazon Global program.


        * SAFE-TReimbursement - The SAFE-T claim amount for the item.


        * TCS-CGST - Tax Collected at Source (TCS) for Central Goods and
        Services Tax (CGST).


        * TCS-SGST - Tax Collected at Source for State Goods and Services Tax
        (SGST).


        * TCS-IGST - Tax Collected at Source for Integrated Goods and Services
        Tax (IGST).


        * TCS-UTGST - Tax Collected at Source for Union Territories Goods and
        Services Tax (UTGST).
    v0_ChargeComponentList:
      type: array
      description: A list of charge information on the seller's account.
      items:
        $ref: '#/components/schemas/v0_ChargeComponent'
    v0_ChargeInstrument:
      type: object
      properties:
        Description:
          type: string
          description: A short description of the charge instrument.
        Tail:
          type: string
          description: The account tail (trailing digits) of the charge instrument.
        Amount:
          $ref: '#/components/schemas/v0_Currency'
      description: A payment instrument.
    v0_ChargeInstrumentList:
      type: array
      description: A list of payment instruments.
      items:
        $ref: '#/components/schemas/v0_ChargeInstrument'
    v0_ChargeRefundEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        ReasonCode:
          type: string
          description: |-
            The reason given for a charge refund.

            Example: `SubscriptionFeeCorrection`
        ReasonCodeDescription:
          type: string
          description: |-
            A description of the Reason Code. 

            Example: `SubscriptionFeeCorrection`
        ChargeRefundTransactions:
          $ref: '#/components/schemas/v0_ChargeRefundTransaction'
      description: An event related to charge refund.
    v0_ChargeRefundEventList:
      type: array
      description: A list of charge refund events.
      items:
        $ref: '#/components/schemas/v0_ChargeRefundEvent'
    v0_ChargeRefundTransaction:
      type: object
      properties:
        ChargeAmount:
          $ref: '#/components/schemas/v0_Currency'
        ChargeType:
          type: string
          description: The type of charge.
      description: The charge refund transaction.
    v0_CouponPaymentEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        CouponId:
          type: string
          description: A coupon identifier.
        SellerCouponDescription:
          type: string
          description: The description provided by the seller when they created the coupon.
        ClipOrRedemptionCount:
          type: integer
          description: The number of coupon clips or redemptions.
          format: int64
        PaymentEventId:
          type: string
          description: A payment event identifier.
        FeeComponent:
          $ref: '#/components/schemas/v0_FeeComponent'
        ChargeComponent:
          $ref: '#/components/schemas/v0_ChargeComponent'
        TotalAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: An event related to coupon payments.
    v0_CouponPaymentEventList:
      type: array
      description: A list of coupon payment event information.
      items:
        $ref: '#/components/schemas/v0_CouponPaymentEvent'
    v0_Currency:
      type: object
      properties:
        CurrencyCode:
          type: string
          description: The three-digit currency code in ISO 4217 format.
        CurrencyAmount:
          $ref: '#/components/schemas/v0_BigDecimal'
      description: A currency type and amount.
    v0_Date:
      type: string
      format: date-time
    v0_DebtRecoveryEvent:
      type: object
      properties:
        DebtRecoveryType:
          type: string
          description: |-
            The debt recovery type.

            Possible values:

            * DebtPayment

            * DebtPaymentFailure

            *DebtAdjustment
        RecoveryAmount:
          $ref: '#/components/schemas/v0_Currency'
        OverPaymentCredit:
          $ref: '#/components/schemas/v0_Currency'
        DebtRecoveryItemList:
          $ref: '#/components/schemas/v0_DebtRecoveryItemList'
        ChargeInstrumentList:
          $ref: '#/components/schemas/v0_ChargeInstrumentList'
      description: A debt payment or debt adjustment.
    v0_DebtRecoveryEventList:
      type: array
      description: A list of debt recovery event information.
      items:
        $ref: '#/components/schemas/v0_DebtRecoveryEvent'
    v0_DebtRecoveryItem:
      type: object
      properties:
        RecoveryAmount:
          $ref: '#/components/schemas/v0_Currency'
        OriginalAmount:
          $ref: '#/components/schemas/v0_Currency'
        GroupBeginDate:
          $ref: '#/components/schemas/v0_Date'
        GroupEndDate:
          $ref: '#/components/schemas/v0_Date'
      description: An item of a debt payment or debt adjustment.
    v0_DebtRecoveryItemList:
      type: array
      description: A list of debt recovery item information.
      items:
        $ref: '#/components/schemas/v0_DebtRecoveryItem'
    v0_DirectPayment:
      type: object
      properties:
        DirectPaymentType:
          type: string
          description: >-
            The type of payment.


            Possible values:


            * StoredValueCardRevenue - The amount that is deducted from the
            seller's account because the seller received money through a stored
            value card.


            * StoredValueCardRefund - The amount that Amazon returns to the
            seller if the order that is bought using a stored value card is
            refunded.


            * PrivateLabelCreditCardRevenue - The amount that is deducted from
            the seller's account because the seller received money through a
            private label credit card offered by Amazon.


            * PrivateLabelCreditCardRefund - The amount that Amazon returns to
            the seller if the order that is bought using a private label credit
            card offered by Amazon is refunded.


            * CollectOnDeliveryRevenue - The COD amount that the seller
            collected directly from the buyer.


            * CollectOnDeliveryRefund - The amount that Amazon refunds to the
            buyer if an order paid for by COD is refunded.
        DirectPaymentAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: A payment made directly to a seller.
    v0_DirectPaymentList:
      type: array
      description: A list of direct payment information.
      items:
        $ref: '#/components/schemas/v0_DirectPayment'
    v0_FailedAdhocDisbursementEventList:
      type: object
      properties:
        FundsTransfersType:
          type: string
          description: |-
            The type of fund transfer. 

            Example "Refund"
        TransferId:
          type: string
          description: The transfer identifier.
        DisbursementId:
          type: string
          description: The disbursement identifier.
        PaymentDisbursementType:
          type: string
          description: |-
            The type of payment for disbursement. 

            Example `CREDIT_CARD`
        Status:
          type: string
          description: |-
            The status of the failed `AdhocDisbursement`. 

            Example `HARD_DECLINED`
        TransferAmount:
          $ref: '#/components/schemas/v0_Currency'
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
      description: Failed ad hoc disbursement event list.
    v0_FBALiquidationEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        OriginalRemovalOrderId:
          type: string
          description: The identifier for the original removal order.
        LiquidationProceedsAmount:
          $ref: '#/components/schemas/v0_Currency'
        LiquidationFeeAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: >-
        A payment event for Fulfillment by Amazon (FBA) inventory liquidation.
        This event is used only in the US marketplace.
    v0_FBALiquidationEventList:
      type: array
      description: A list of FBA inventory liquidation payment events.
      items:
        $ref: '#/components/schemas/v0_FBALiquidationEvent'
    v0_FeeComponent:
      type: object
      properties:
        FeeType:
          type: string
          description: >-
            The type of fee. For more information about Selling on Amazon fees,
            see [Selling on Amazon Fee
            Schedule](https://sellercentral.amazon.com/gp/help/200336920) on
            Seller Central. For more information about Fulfillment by Amazon
            fees, see [FBA features, services and
            fees](https://sellercentral.amazon.com/gp/help/201074400) on Seller
            Central.
        FeeAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: A fee associated with the event.
    v0_FeeComponentList:
      type: array
      description: A list of fee component information.
      items:
        $ref: '#/components/schemas/v0_FeeComponent'
    v0_FinancialEventGroup:
      type: object
      properties:
        FinancialEventGroupId:
          type: string
          description: A unique identifier for the financial event group.
        ProcessingStatus:
          type: string
          description: >-
            The processing status of the financial event group indicates whether
            the balance of the financial event group is settled.


            Possible values:


            * Open


            * Closed
        FundTransferStatus:
          type: string
          description: The status of the fund transfer.
        OriginalTotal:
          $ref: '#/components/schemas/v0_Currency'
        ConvertedTotal:
          $ref: '#/components/schemas/v0_Currency'
        FundTransferDate:
          $ref: '#/components/schemas/v0_Date'
        TraceId:
          type: string
          description: >-
            The trace identifier used by sellers to look up transactions
            externally.
        AccountTail:
          type: string
          description: The account tail of the payment instrument.
        BeginningBalance:
          $ref: '#/components/schemas/v0_Currency'
        FinancialEventGroupStart:
          $ref: '#/components/schemas/v0_Date'
        FinancialEventGroupEnd:
          $ref: '#/components/schemas/v0_Date'
      description: Information related to a financial event group.
    v0_FinancialEventGroupList:
      type: array
      description: A list of financial event group information.
      items:
        $ref: '#/components/schemas/v0_FinancialEventGroup'
    v0_FinancialEvents:
      type: object
      properties:
        ShipmentEventList:
          $ref: '#/components/schemas/v0_ShipmentEventList'
        ShipmentSettleEventList:
          $ref: '#/components/schemas/v0_ShipmentSettleEventList'
        RefundEventList:
          $ref: '#/components/schemas/v0_ShipmentEventList'
        GuaranteeClaimEventList:
          $ref: '#/components/schemas/v0_ShipmentEventList'
        ChargebackEventList:
          $ref: '#/components/schemas/v0_ShipmentEventList'
        PayWithAmazonEventList:
          $ref: '#/components/schemas/v0_PayWithAmazonEventList'
        ServiceProviderCreditEventList:
          $ref: '#/components/schemas/v0_SolutionProviderCreditEventList'
        RetrochargeEventList:
          $ref: '#/components/schemas/v0_RetrochargeEventList'
        RentalTransactionEventList:
          $ref: '#/components/schemas/v0_RentalTransactionEventList'
        ProductAdsPaymentEventList:
          $ref: '#/components/schemas/v0_ProductAdsPaymentEventList'
        ServiceFeeEventList:
          $ref: '#/components/schemas/v0_ServiceFeeEventList'
        SellerDealPaymentEventList:
          $ref: '#/components/schemas/v0_SellerDealPaymentEventList'
        DebtRecoveryEventList:
          $ref: '#/components/schemas/v0_DebtRecoveryEventList'
        LoanServicingEventList:
          $ref: '#/components/schemas/v0_LoanServicingEventList'
        AdjustmentEventList:
          $ref: '#/components/schemas/v0_AdjustmentEventList'
        SAFETReimbursementEventList:
          $ref: '#/components/schemas/v0_SAFETReimbursementEventList'
        SellerReviewEnrollmentPaymentEventList:
          $ref: '#/components/schemas/v0_SellerReviewEnrollmentPaymentEventList'
        FBALiquidationEventList:
          $ref: '#/components/schemas/v0_FBALiquidationEventList'
        CouponPaymentEventList:
          $ref: '#/components/schemas/v0_CouponPaymentEventList'
        ImagingServicesFeeEventList:
          $ref: '#/components/schemas/v0_ImagingServicesFeeEventList'
        NetworkComminglingTransactionEventList:
          $ref: '#/components/schemas/v0_NetworkComminglingTransactionEventList'
        AffordabilityExpenseEventList:
          $ref: '#/components/schemas/v0_AffordabilityExpenseEventList'
        AffordabilityExpenseReversalEventList:
          $ref: '#/components/schemas/v0_AffordabilityExpenseEventList'
        RemovalShipmentEventList:
          $ref: '#/components/schemas/v0_RemovalShipmentEventList'
        RemovalShipmentAdjustmentEventList:
          $ref: '#/components/schemas/v0_RemovalShipmentAdjustmentEventList'
        TrialShipmentEventList:
          $ref: '#/components/schemas/v0_TrialShipmentEventList'
        TDSReimbursementEventList:
          $ref: '#/components/schemas/v0_TDSReimbursementEventList'
        AdhocDisbursementEventList:
          $ref: '#/components/schemas/v0_AdhocDisbursementEventList'
        TaxWithholdingEventList:
          $ref: '#/components/schemas/v0_TaxWithholdingEventList'
        ChargeRefundEventList:
          $ref: '#/components/schemas/v0_ChargeRefundEventList'
        FailedAdhocDisbursementEventList:
          $ref: '#/components/schemas/v0_FailedAdhocDisbursementEventList'
        ValueAddedServiceChargeEventList:
          $ref: '#/components/schemas/v0_ValueAddedServiceChargeEventList'
        CapacityReservationBillingEventList:
          $ref: '#/components/schemas/v0_CapacityReservationBillingEventList'
      description: Contains all information related to a financial event.
    v0_ImagingServicesFeeEvent:
      type: object
      properties:
        ImagingRequestBillingItemID:
          type: string
          description: The identifier for the imaging services request.
        ASIN:
          type: string
          description: >-
            The Amazon Standard Identification Number (ASIN) of the item for
            which the imaging service was requested.
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        FeeList:
          $ref: '#/components/schemas/v0_FeeComponentList'
      description: A fee event related to Amazon Imaging services.
    v0_ImagingServicesFeeEventList:
      type: array
      description: A list of fee events related to Amazon Imaging services.
      items:
        $ref: '#/components/schemas/v0_ImagingServicesFeeEvent'
    v0_ListFinancialEventGroupsPayload:
      type: object
      properties:
        NextToken:
          type: string
          description: >-
            When present and not empty, pass this string token in the next
            request to return the next response page.
        FinancialEventGroupList:
          $ref: '#/components/schemas/v0_FinancialEventGroupList'
      description: The payload for the listFinancialEventGroups operation.
    v0_ListFinancialEventGroupsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_ListFinancialEventGroupsPayload'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the listFinancialEventGroups operation.
    v0_ListFinancialEventsPayload:
      type: object
      properties:
        NextToken:
          type: string
          description: >-
            When present and not empty, pass this string token in the next
            request to return the next response page.
        FinancialEvents:
          $ref: '#/components/schemas/v0_FinancialEvents'
      description: The payload for the listFinancialEvents operation.
    v0_ListFinancialEventsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_ListFinancialEventsPayload'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the listFinancialEvents operation.
    v0_LoanServicingEvent:
      type: object
      properties:
        LoanAmount:
          $ref: '#/components/schemas/v0_Currency'
        SourceBusinessEventType:
          type: string
          description: |-
            The type of event.

            Possible values:

            * LoanAdvance

            * LoanPayment

            * LoanRefund
      description: A loan advance, loan payment, or loan refund.
    v0_LoanServicingEventList:
      type: array
      description: A list of loan servicing events.
      items:
        $ref: '#/components/schemas/v0_LoanServicingEvent'
    v0_NetworkComminglingTransactionEvent:
      type: object
      properties:
        TransactionType:
          type: string
          description: >-
            The type of network item swap.


            Possible values:


            * NetCo - A Fulfillment by Amazon inventory pooling transaction.
            Available only in the India marketplace.


            * ComminglingVAT - A commingling VAT transaction. Available only in
            the UK, Spain, France, Germany, and Italy marketplaces.
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        NetCoTransactionID:
          type: string
          description: The identifier for the network item swap.
        SwapReason:
          type: string
          description: The reason for the network item swap.
        ASIN:
          type: string
          description: >-
            The Amazon Standard Identification Number (ASIN) of the swapped
            item.
        MarketplaceId:
          type: string
          description: The marketplace in which the event took place.
        TaxExclusiveAmount:
          $ref: '#/components/schemas/v0_Currency'
        TaxAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: A network commingling transaction event.
    v0_NetworkComminglingTransactionEventList:
      type: array
      description: A list of network commingling transaction events.
      items:
        $ref: '#/components/schemas/v0_NetworkComminglingTransactionEvent'
    v0_PayWithAmazonEvent:
      type: object
      properties:
        SellerOrderId:
          type: string
          description: An order identifier that is specified by the seller.
        TransactionPostedDate:
          $ref: '#/components/schemas/v0_Date'
        BusinessObjectType:
          type: string
          description: The type of business object.
        SalesChannel:
          type: string
          description: The sales channel for the transaction.
        Charge:
          $ref: '#/components/schemas/v0_ChargeComponent'
        FeeList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        PaymentAmountType:
          type: string
          description: |-
            The type of payment.

            Possible values:

            * Sales
        AmountDescription:
          type: string
          description: A short description of this payment event.
        FulfillmentChannel:
          type: string
          description: |-
            The fulfillment channel.

            Possible values:

            * AFN - Amazon Fulfillment Network (Fulfillment by Amazon)

            * MFN - Merchant Fulfillment Network (self-fulfilled)
        StoreName:
          type: string
          description: The store name where the event occurred.
      description: An event related to the seller's Pay with Amazon account.
    v0_PayWithAmazonEventList:
      type: array
      description: A list of events related to the seller's Pay with Amazon account.
      items:
        $ref: '#/components/schemas/v0_PayWithAmazonEvent'
    v0_ProductAdsPaymentEvent:
      type: object
      properties:
        postedDate:
          $ref: '#/components/schemas/v0_Date'
        transactionType:
          type: string
          description: |-
            Indicates if the transaction is for a charge or a refund.

            Possible values:

            * charge - Charge

            * refund - Refund
        invoiceId:
          type: string
          description: Identifier for the invoice that the transaction appears in.
        baseValue:
          $ref: '#/components/schemas/v0_Currency'
        taxValue:
          $ref: '#/components/schemas/v0_Currency'
        transactionValue:
          $ref: '#/components/schemas/v0_Currency'
      description: A Sponsored Products payment event.
    v0_ProductAdsPaymentEventList:
      type: array
      description: A list of sponsored products payment events.
      items:
        $ref: '#/components/schemas/v0_ProductAdsPaymentEvent'
    v0_Promotion:
      type: object
      properties:
        PromotionType:
          type: string
          description: The type of promotion.
        PromotionId:
          type: string
          description: The seller-specified identifier for the promotion.
        PromotionAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: A promotion applied to an item.
    v0_PromotionList:
      type: array
      description: A list of promotions.
      items:
        $ref: '#/components/schemas/v0_Promotion'
    v0_RemovalShipmentEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        MerchantOrderId:
          type: string
          description: The merchant removal orderId.
        OrderId:
          type: string
          description: The identifier for the removal shipment order.
        TransactionType:
          type: string
          description: |-
            The type of removal order.

            Possible values:

            * WHOLESALE_LIQUIDATION
        RemovalShipmentItemList:
          $ref: '#/components/schemas/v0_RemovalShipmentItemList'
      description: A removal shipment event for a removal order.
    v0_RemovalShipmentEventList:
      type: array
      description: A list of removal shipment event information.
      items:
        $ref: '#/components/schemas/v0_RemovalShipmentEvent'
    v0_RemovalShipmentItem:
      type: object
      properties:
        RemovalShipmentItemId:
          type: string
          description: An identifier for an item in a removal shipment.
        TaxCollectionModel:
          type: string
          description: >-
            The tax collection model applied to the item.


            Possible values:


            * MarketplaceFacilitator - Tax is withheld and remitted to the
            taxing authority by Amazon on behalf of the seller.


            * Standard - Tax is paid to the seller and not remitted to the
            taxing authority by Amazon.
        FulfillmentNetworkSKU:
          type: string
          description: The Amazon fulfillment network SKU for the item.
        Quantity:
          type: integer
          description: The quantity of the item.
          format: int32
        Revenue:
          $ref: '#/components/schemas/v0_Currency'
        FeeAmount:
          $ref: '#/components/schemas/v0_Currency'
        TaxAmount:
          $ref: '#/components/schemas/v0_Currency'
        TaxWithheld:
          $ref: '#/components/schemas/v0_Currency'
      description: Item-level information for a removal shipment.
    v0_RemovalShipmentItemList:
      type: array
      description: A list of information about removal shipment items.
      items:
        $ref: '#/components/schemas/v0_RemovalShipmentItem'
    v0_RemovalShipmentAdjustmentEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        AdjustmentEventId:
          type: string
          description: The unique identifier for the adjustment event.
        MerchantOrderId:
          type: string
          description: The merchant removal orderId.
        OrderId:
          type: string
          description: The orderId for shipping inventory.
        TransactionType:
          type: string
          description: |-
            The type of removal order.

            Possible values:

            * WHOLESALE_LIQUIDATION.
        RemovalShipmentItemAdjustmentList:
          type: array
          description: >-
            A comma-delimited list of Removal shipmentItemAdjustment details for
            FBA inventory.
          items:
            $ref: '#/components/schemas/v0_RemovalShipmentItemAdjustment'
      description: >-
        A financial adjustment event for FBA liquidated inventory. A positive
        value indicates money owed to Amazon by the buyer (for example, when the
        charge was incorrectly calculated as less than it should be). A negative
        value indicates a full or partial refund owed to the buyer (for example,
        when the buyer receives damaged items or fewer items than ordered).
    v0_RemovalShipmentAdjustmentEventList:
      type: array
      description: >-
        A comma-delimited list of Removal shipmentAdjustment details for FBA
        inventory.
      items:
        $ref: '#/components/schemas/v0_RemovalShipmentAdjustmentEvent'
    v0_RemovalShipmentItemAdjustment:
      type: object
      properties:
        RemovalShipmentItemId:
          type: string
          description: An identifier for an item in a removal shipment.
        TaxCollectionModel:
          type: string
          description: >-
            The tax collection model applied to the item.


            Possible values:


            * MarketplaceFacilitator - Tax is withheld and remitted to the
            taxing authority by Amazon on behalf of the seller.


            * Standard - Tax is paid to the seller and not remitted to the
            taxing authority by Amazon.
        FulfillmentNetworkSKU:
          type: string
          description: The Amazon fulfillment network SKU for the item.
        AdjustedQuantity:
          type: integer
          description: Adjusted quantity of removal shipmentItemAdjustment items.
          format: int32
        RevenueAdjustment:
          $ref: '#/components/schemas/v0_Currency'
        TaxAmountAdjustment:
          $ref: '#/components/schemas/v0_Currency'
        TaxWithheldAdjustment:
          $ref: '#/components/schemas/v0_Currency'
      description: Item-level information for a removal shipment item adjustment.
    v0_RentalTransactionEvent:
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined identifier for an order.
        RentalEventType:
          type: string
          description: >-
            The type of rental event.


            Possible values:


            * RentalCustomerPayment-Buyout - Transaction type that represents
            when the customer wants to buy out a rented item.


            * RentalCustomerPayment-Extension - Transaction type that represents
            when the customer wants to extend the rental period.


            * RentalCustomerRefund-Buyout - Transaction type that represents
            when the customer requests a refund for the buyout of the rented
            item.


            * RentalCustomerRefund-Extension - Transaction type that represents
            when the customer requests a refund over the extension on the rented
            item.


            * RentalHandlingFee - Transaction type that represents the fee that
            Amazon charges sellers who rent through Amazon.


            * RentalChargeFailureReimbursement - Transaction type that
            represents when Amazon sends money to the seller to compensate for a
            failed charge.


            * RentalLostItemReimbursement - Transaction type that represents
            when Amazon sends money to the seller to compensate for a lost item.
        ExtensionLength:
          type: integer
          description: >-
            The number of days that the buyer extended an already rented item.
            This value is only returned for RentalCustomerPayment-Extension and
            RentalCustomerRefund-Extension events.
          format: int32
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        RentalChargeList:
          $ref: '#/components/schemas/v0_ChargeComponentList'
        RentalFeeList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        MarketplaceName:
          type: string
          description: The name of the marketplace.
        RentalInitialValue:
          $ref: '#/components/schemas/v0_Currency'
        RentalReimbursement:
          $ref: '#/components/schemas/v0_Currency'
        RentalTaxWithheldList:
          $ref: '#/components/schemas/v0_TaxWithheldComponentList'
      description: An event related to a rental transaction.
    v0_RentalTransactionEventList:
      type: array
      description: A list of rental transaction event information.
      items:
        $ref: '#/components/schemas/v0_RentalTransactionEvent'
    v0_RetrochargeEvent:
      type: object
      properties:
        RetrochargeEventType:
          type: string
          description: |-
            The type of event.

            Possible values:

            * Retrocharge

            * RetrochargeReversal
        AmazonOrderId:
          type: string
          description: An Amazon-defined identifier for an order.
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        BaseTax:
          $ref: '#/components/schemas/v0_Currency'
        ShippingTax:
          $ref: '#/components/schemas/v0_Currency'
        MarketplaceName:
          type: string
          description: The name of the marketplace where the retrocharge event occurred.
        RetrochargeTaxWithheldList:
          $ref: '#/components/schemas/v0_TaxWithheldComponentList'
      description: A retrocharge or retrocharge reversal.
    v0_RetrochargeEventList:
      type: array
      description: A list of information about Retrocharge or RetrochargeReversal events.
      items:
        $ref: '#/components/schemas/v0_RetrochargeEvent'
    v0_SAFETReimbursementEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        SAFETClaimId:
          type: string
          description: A SAFE-T claim identifier.
        ReimbursedAmount:
          $ref: '#/components/schemas/v0_Currency'
        ReasonCode:
          type: string
          description: Indicates why the seller was reimbursed.
        SAFETReimbursementItemList:
          $ref: '#/components/schemas/v0_SAFETReimbursementItemList'
      description: A SAFE-T claim reimbursement on the seller's account.
    v0_SAFETReimbursementEventList:
      type: array
      description: A list of SAFETReimbursementEvents.
      items:
        $ref: '#/components/schemas/v0_SAFETReimbursementEvent'
    v0_SAFETReimbursementItem:
      type: object
      properties:
        itemChargeList:
          $ref: '#/components/schemas/v0_ChargeComponentList'
        productDescription:
          type: string
          description: >-
            The description of the item as shown on the product detail page on
            the retail website.
        quantity:
          type: string
          description: The number of units of the item being reimbursed.
      description: An item from a SAFE-T claim reimbursement.
    v0_SAFETReimbursementItemList:
      type: array
      description: A list of SAFETReimbursementItems.
      items:
        $ref: '#/components/schemas/v0_SAFETReimbursementItem'
    v0_SellerDealPaymentEvent:
      type: object
      properties:
        postedDate:
          $ref: '#/components/schemas/v0_Date'
        dealId:
          type: string
          description: The unique identifier of the deal.
        dealDescription:
          type: string
          description: The internal description of the deal.
        eventType:
          type: string
          description: 'The type of event: SellerDealComplete.'
        feeType:
          type: string
          description: 'The type of fee: RunLightningDealFee.'
        feeAmount:
          $ref: '#/components/schemas/v0_Currency'
        taxAmount:
          $ref: '#/components/schemas/v0_Currency'
        totalAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: An event linked to the payment of a fee related to the specified deal.
    v0_SellerDealPaymentEventList:
      type: array
      description: A list of payment events for deal-related fees.
      items:
        $ref: '#/components/schemas/v0_SellerDealPaymentEvent'
    v0_SellerReviewEnrollmentPaymentEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        EnrollmentId:
          type: string
          description: An enrollment identifier.
        ParentASIN:
          type: string
          description: >-
            The Amazon Standard Identification Number (ASIN) of the item that
            was enrolled in the Early Reviewer Program.
        FeeComponent:
          $ref: '#/components/schemas/v0_FeeComponent'
        ChargeComponent:
          $ref: '#/components/schemas/v0_ChargeComponent'
        TotalAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: A fee payment event for the Early Reviewer Program.
    v0_SellerReviewEnrollmentPaymentEventList:
      type: array
      description: A list of information about fee events for the Early Reviewer Program.
      items:
        $ref: '#/components/schemas/v0_SellerReviewEnrollmentPaymentEvent'
    v0_ServiceFeeEvent:
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined identifier for an order.
        FeeReason:
          type: string
          description: A short description of the service fee reason.
        FeeList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        SellerSKU:
          type: string
          description: >-
            The seller SKU of the item. The seller SKU is qualified by the
            seller's seller ID, which is included with every call to the Selling
            Partner API.
        FnSKU:
          type: string
          description: >-
            A unique identifier assigned by Amazon to products stored in and
            fulfilled from an Amazon fulfillment center.
        FeeDescription:
          type: string
          description: A short description of the service fee event.
        ASIN:
          type: string
          description: The Amazon Standard Identification Number (ASIN) of the item.
      description: A service fee on the seller's account.
    v0_ServiceFeeEventList:
      type: array
      description: A list of information about service fee events.
      items:
        $ref: '#/components/schemas/v0_ServiceFeeEvent'
    v0_ShipmentEvent:
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined identifier for an order.
        SellerOrderId:
          type: string
          description: A seller-defined identifier for an order.
        MarketplaceName:
          type: string
          description: The name of the marketplace where the event occurred.
        OrderChargeList:
          $ref: '#/components/schemas/v0_ChargeComponentList'
        OrderChargeAdjustmentList:
          $ref: '#/components/schemas/v0_ChargeComponentList'
        ShipmentFeeList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        ShipmentFeeAdjustmentList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        OrderFeeList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        OrderFeeAdjustmentList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        DirectPaymentList:
          $ref: '#/components/schemas/v0_DirectPaymentList'
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        ShipmentItemList:
          $ref: '#/components/schemas/v0_ShipmentItemList'
        ShipmentItemAdjustmentList:
          $ref: '#/components/schemas/v0_ShipmentItemList'
      description: A shipment, refund, guarantee claim, or chargeback.
    v0_ShipmentEventList:
      type: array
      description: A list of shipment event information.
      items:
        $ref: '#/components/schemas/v0_ShipmentEvent'
    v0_ShipmentSettleEventList:
      type: array
      description: A list of `ShipmentEvent` items.
      items:
        $ref: '#/components/schemas/v0_ShipmentEvent'
    v0_ShipmentItem:
      type: object
      properties:
        SellerSKU:
          type: string
          description: >-
            The seller SKU of the item. The seller SKU is qualified by the
            seller's seller ID, which is included with every call to the Selling
            Partner API.
        OrderItemId:
          type: string
          description: An Amazon-defined order item identifier.
        OrderAdjustmentItemId:
          type: string
          description: >-
            An Amazon-defined order adjustment identifier defined for refunds,
            guarantee claims, and chargeback events.
        QuantityShipped:
          type: integer
          description: The number of items shipped.
          format: int32
        ItemChargeList:
          $ref: '#/components/schemas/v0_ChargeComponentList'
        ItemChargeAdjustmentList:
          $ref: '#/components/schemas/v0_ChargeComponentList'
        ItemFeeList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        ItemFeeAdjustmentList:
          $ref: '#/components/schemas/v0_FeeComponentList'
        ItemTaxWithheldList:
          $ref: '#/components/schemas/v0_TaxWithheldComponentList'
        PromotionList:
          $ref: '#/components/schemas/v0_PromotionList'
        PromotionAdjustmentList:
          $ref: '#/components/schemas/v0_PromotionList'
        CostOfPointsGranted:
          $ref: '#/components/schemas/v0_Currency'
        CostOfPointsReturned:
          $ref: '#/components/schemas/v0_Currency'
      description: An item of a shipment, refund, guarantee claim, or chargeback.
    v0_ShipmentItemList:
      type: array
      description: A list of shipment items.
      items:
        $ref: '#/components/schemas/v0_ShipmentItem'
    v0_SolutionProviderCreditEvent:
      type: object
      properties:
        ProviderTransactionType:
          type: string
          description: The transaction type.
        SellerOrderId:
          type: string
          description: A seller-defined identifier for an order.
        MarketplaceId:
          type: string
          description: The identifier of the marketplace where the order was placed.
        MarketplaceCountryCode:
          type: string
          description: >-
            The two-letter country code of the country associated with the
            marketplace where the order was placed.
        SellerId:
          type: string
          description: The Amazon-defined identifier of the seller.
        SellerStoreName:
          type: string
          description: The store name where the payment event occurred.
        ProviderId:
          type: string
          description: The Amazon-defined identifier of the solution provider.
        ProviderStoreName:
          type: string
          description: The store name where the payment event occurred.
        TransactionAmount:
          $ref: '#/components/schemas/v0_Currency'
        TransactionCreationDate:
          $ref: '#/components/schemas/v0_Date'
      description: A credit given to a solution provider.
    v0_SolutionProviderCreditEventList:
      type: array
      description: A list of information about solution provider credits.
      items:
        $ref: '#/components/schemas/v0_SolutionProviderCreditEvent'
    v0_TaxWithholdingPeriod:
      type: object
      properties:
        StartDate:
          $ref: '#/components/schemas/v0_Date'
        EndDate:
          $ref: '#/components/schemas/v0_Date'
      description: Period which taxwithholding on seller's account is calculated.
    v0_TaxWithholdingEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        BaseAmount:
          $ref: '#/components/schemas/v0_Currency'
        WithheldAmount:
          $ref: '#/components/schemas/v0_Currency'
        TaxWithholdingPeriod:
          $ref: '#/components/schemas/v0_TaxWithholdingPeriod'
      description: A TaxWithholding event on seller's account.
    v0_TaxWithholdingEventList:
      type: array
      description: A list of `TaxWithholding` events.
      items:
        $ref: '#/components/schemas/v0_TaxWithholdingEvent'
    v0_TaxWithheldComponent:
      type: object
      properties:
        TaxCollectionModel:
          type: string
          description: >-
            The tax collection model applied to the item.


            Possible values:


            * MarketplaceFacilitator - Tax is withheld and remitted to the
            taxing authority by Amazon on behalf of the seller.


            * Standard - Tax is paid to the seller and not remitted to the
            taxing authority by Amazon.
        TaxesWithheld:
          $ref: '#/components/schemas/v0_ChargeComponentList'
      description: Information about the taxes withheld.
    v0_TaxWithheldComponentList:
      type: array
      description: A list of information about taxes withheld.
      items:
        $ref: '#/components/schemas/v0_TaxWithheldComponent'
    v0_TDSReimbursementEvent:
      type: object
      properties:
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        TDSOrderId:
          type: string
          description: The Tax-Deducted-at-Source (TDS) identifier.
        ReimbursedAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: An event related to a Tax-Deducted-at-Source (TDS) reimbursement.
    v0_TDSReimbursementEventList:
      type: array
      description: A list of `TDSReimbursementEvent` items.
      items:
        $ref: '#/components/schemas/v0_TDSReimbursementEvent'
    v0_TrialShipmentEvent:
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined identifier for an order.
        FinancialEventGroupId:
          type: string
          description: The identifier of the financial event group.
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        SKU:
          type: string
          description: >-
            The seller SKU of the item. The seller SKU is qualified by the
            seller's seller ID, which is included with every call to the Selling
            Partner API.
        FeeList:
          $ref: '#/components/schemas/v0_FeeComponentList'
      description: An event related to a trial shipment.
    v0_TrialShipmentEventList:
      type: array
      description: A list of information about trial shipment financial events.
      items:
        $ref: '#/components/schemas/v0_TrialShipmentEvent'
    v0_ValueAddedServiceChargeEventList:
      type: object
      properties:
        TransactionType:
          type: string
          description: |-
            Indicates the type of transaction.

            Example: 'Other Support Service fees'
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        Description:
          type: string
          description: A short description of the service charge event.
        TransactionAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: An event related to a value added service charge.
    v0_CapacityReservationBillingEvent:
      type: object
      properties:
        TransactionType:
          type: string
          description: Indicates the type of transaction. For example, FBA Inventory Fee
        PostedDate:
          $ref: '#/components/schemas/v0_Date'
        Description:
          type: string
          description: A short description of the capacity reservation billing event.
        TransactionAmount:
          $ref: '#/components/schemas/v0_Currency'
      description: An event related to a capacity reservation billing charge.
    v0_CapacityReservationBillingEventList:
      type: array
      description: A list of `CapacityReservationBillingEvent` events.
      items:
        $ref: '#/components/schemas/v0_CapacityReservationBillingEvent'
    v0_ErrorList:
      type: array
      description: A list of error responses returned when a request is unsuccessful.
      items:
        $ref: '#/components/schemas/v0_Error'
    v0_Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: A message that describes the error condition.
        details:
          type: string
          description: >-
            Additional information that can help the caller understand or fix
            the issue.
    2021-08-01_Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: A message that describes the error condition.
        details:
          type: string
          description: >-
            Additional details that can help the caller understand or fix the
            issue.
      description: Error response returned when the request is unsuccessful.
    2021-08-01_ErrorList:
      type: array
      description: A list of error responses returned when a request is unsuccessful.
      items:
        $ref: '#/components/schemas/2021-08-01_Error'
    2021-08-01_Item:
      required:
        - sku
      type: object
      properties:
        sku:
          type: string
          description: A selling partner provided identifier for an Amazon listing.
        summaries:
          $ref: '#/components/schemas/2021-08-01_ItemSummaries'
        attributes:
          $ref: '#/components/schemas/2021-08-01_ItemAttributes'
        issues:
          $ref: '#/components/schemas/2021-08-01_ItemIssues'
        offers:
          $ref: '#/components/schemas/2021-08-01_ItemOffers'
        fulfillmentAvailability:
          type: array
          description: Fulfillment availability for the listings item.
          items:
            $ref: '#/components/schemas/2021-08-01_FulfillmentAvailability'
        procurement:
          type: array
          description: Vendor procurement information for the listings item.
          items:
            $ref: '#/components/schemas/2021-08-01_ItemProcurement'
      description: A listings item.
    2021-08-01_ItemSummaries:
      type: array
      description: Summary details of a listings item.
      items:
        $ref: '#/components/schemas/2021-08-01_ItemSummaryByMarketplace'
    2021-08-01_ItemSummaryByMarketplace:
      required:
        - asin
        - createdDate
        - itemName
        - lastUpdatedDate
        - marketplaceId
        - productType
        - status
      type: object
      properties:
        marketplaceId:
          type: string
          description: >-
            A marketplace identifier. Identifies the Amazon marketplace for the
            listings item.
        asin:
          type: string
          description: Amazon Standard Identification Number (ASIN) of the listings item.
        productType:
          type: string
          description: The Amazon product type of the listings item.
        conditionType:
          type: string
          description: Identifies the condition of the listings item.
          enum:
            - new_new
            - new_open_box
            - new_oem
            - refurbished_refurbished
            - used_like_new
            - used_very_good
            - used_good
            - used_acceptable
            - collectible_like_new
            - collectible_very_good
            - collectible_good
            - collectible_acceptable
            - club_club
          x-docgen-enum-table-extension:
            - value: new_new
              description: New
            - value: new_open_box
              description: New - Open Box.
            - value: new_oem
              description: New - OEM.
            - value: refurbished_refurbished
              description: Refurbished
            - value: used_like_new
              description: Used - Like New.
            - value: used_very_good
              description: Used - Very Good.
            - value: used_good
              description: Used - Good.
            - value: used_acceptable
              description: Used - Acceptable.
            - value: collectible_like_new
              description: Collectible - Like New.
            - value: collectible_very_good
              description: Collectible - Very Good.
            - value: collectible_good
              description: Collectible - Good.
            - value: collectible_acceptable
              description: Collectible - Acceptable.
            - value: club_club
              description: Club
        status:
          type: array
          description: Statuses that apply to the listings item.
          items:
            type: string
            enum:
              - BUYABLE
              - DISCOVERABLE
            x-docgen-enum-table-extension:
              - value: BUYABLE
                description: >-
                  The listings item can be purchased by shoppers. This status
                  does not apply to vendor listings.
              - value: DISCOVERABLE
                description: The listings item is visible to shoppers.
        fnSku:
          type: string
          description: >-
            Fulfillment network stock keeping unit is an identifier used by
            Amazon fulfillment centers to identify each unique item.
        itemName:
          type: string
          description: Name, or title, associated with an Amazon catalog item.
        createdDate:
          type: string
          description: Date the listings item was created, in ISO 8601 format.
          format: date-time
        lastUpdatedDate:
          type: string
          description: Date the listings item was last updated, in ISO 8601 format.
          format: date-time
        mainImage:
          $ref: '#/components/schemas/2021-08-01_ItemImage'
      description: Summary details of a listings item for an Amazon marketplace.
    2021-08-01_ItemImage:
      required:
        - height
        - link
        - width
      type: object
      properties:
        link:
          type: string
          description: Link, or URL, for the image.
        height:
          type: integer
          description: Height of the image in pixels.
        width:
          type: integer
          description: Width of the image in pixels.
      description: Image for the listings item.
    2021-08-01_ItemAttributes:
      type: object
      description: >-
        JSON object containing structured listings item attribute data keyed by
        attribute name.
    2021-08-01_ItemIssues:
      type: array
      description: Issues associated with the listings item.
      items:
        $ref: '#/components/schemas/2021-08-01_Issue'
    2021-08-01_Issue:
      required:
        - code
        - message
        - severity
      type: object
      properties:
        code:
          type: string
          description: An issue code that identifies the type of issue.
        message:
          type: string
          description: A message that describes the issue.
        severity:
          type: string
          description: The severity of the issue.
          enum:
            - ERROR
            - WARNING
            - INFO
          x-docgen-enum-table-extension:
            - value: ERROR
              description: >-
                Indicates an issue has occurred preventing the submission from
                processing, such as a validation error.
            - value: WARNING
              description: >-
                Indicates an issue has occurred that should be reviewed, but has
                not prevented the submission from processing.
            - value: INFO
              description: >-
                Indicates additional information has been provided that should
                be reviewed.
        attributeNames:
          type: array
          description: Names of the attributes associated with the issue, if applicable.
          items:
            type: string
      description: An issue with a listings item.
    2021-08-01_ItemOffers:
      type: array
      description: Offer details for the listings item.
      items:
        $ref: '#/components/schemas/2021-08-01_ItemOfferByMarketplace'
    2021-08-01_ItemOfferByMarketplace:
      required:
        - marketplaceId
        - offerType
        - price
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        offerType:
          type: string
          description: Type of offer for the listings item.
          enum:
            - B2C
            - B2B
          x-docgen-enum-table-extension:
            - value: B2C
              description: >-
                The offer on this listings item is available for Business to
                Consumer purchase, meaning that it is available to shoppers on
                Amazon retail sites.
            - value: B2B
              description: >-
                The offer on this listings item is available for Business to
                Business purchase.
        price:
          $ref: '#/components/schemas/2021-08-01_Money'
        points:
          $ref: '#/components/schemas/2021-08-01_Points'
      description: Offer details of a listings item for an Amazon marketplace.
    2021-08-01_ItemProcurement:
      required:
        - costPrice
      type: object
      properties:
        costPrice:
          $ref: '#/components/schemas/2021-08-01_Money'
      description: Vendor procurement information for the listings item.
    2021-08-01_FulfillmentAvailability:
      required:
        - fulfillmentChannelCode
      type: object
      properties:
        fulfillmentChannelCode:
          type: string
          description: Designates which fulfillment network will be used.
        quantity:
          minimum: 0
          type: integer
          description: The quantity of the item you are making available for sale.
      description: Fulfillment availability details for the listings item.
    2021-08-01_Money:
      required:
        - amount
        - currencyCode
      type: object
      properties:
        currencyCode:
          type: string
          description: Three-digit currency code. In ISO 4217 format.
        amount:
          $ref: '#/components/schemas/2021-08-01_Decimal'
      description: The currency type and the amount.
    2021-08-01_Decimal:
      type: string
      description: >-
        A decimal number with no loss of precision. Useful when precision loss
        is unnaceptable, as with currencies. Follows RFC7159 for number
        representation.
    2021-08-01_Points:
      required:
        - pointsNumber
      type: object
      properties:
        pointsNumber:
          type: integer
      description: >-
        The number of Amazon Points offered with the purchase of an item, and
        their monetary value. Note that the Points element is only returned in
        Japan (JP).
    2021-08-01_PatchOperation:
      required:
        - op
        - path
      type: object
      properties:
        op:
          type: string
          description: >-
            Type of JSON Patch operation. Supported JSON Patch operations
            include add, replace, and delete. See
            <https://tools.ietf.org/html/rfc6902>.
          enum:
            - add
            - replace
            - delete
          x-docgen-enum-table-extension:
            - value: add
              description: The "add" operation adds or replaces the target property.
            - value: replace
              description: The "replace" operation adds or replaces the target property.
            - value: delete
              description: >-
                The "delete" operation removes the target property. Not
                supported for vendors (vendors will receive an HTTP status code
                400 response).
        path:
          type: string
          description: >-
            JSON Pointer path of the element to patch. See
            <https://tools.ietf.org/html/rfc6902>.
        value:
          type: array
          description: JSON value to add, replace, or delete.
          items:
            type: object
            properties: {}
      description: Individual JSON Patch operation for an HTTP PATCH request.
    2021-08-01_ListingsItemPatchRequest:
      required:
        - patches
        - productType
      type: object
      properties:
        productType:
          type: string
          description: The Amazon product type of the listings item.
        patches:
          minItems: 1
          type: array
          description: One or more JSON Patch operations to perform on the listings item.
          items:
            $ref: '#/components/schemas/2021-08-01_PatchOperation'
      description: The request body schema for the patchListingsItem operation.
    2021-08-01_ListingsItemPutRequest:
      required:
        - attributes
        - productType
      type: object
      properties:
        productType:
          type: string
          description: The Amazon product type of the listings item.
        requirements:
          type: string
          description: The name of the requirements set for the provided data.
          enum:
            - LISTING
            - LISTING_PRODUCT_ONLY
            - LISTING_OFFER_ONLY
          x-docgen-enum-table-extension:
            - value: LISTING
              description: >-
                Indicates the submitted data contains product facts and sales
                terms.
            - value: LISTING_PRODUCT_ONLY
              description: Indicates the submitted data contains product facts only.
            - value: LISTING_OFFER_ONLY
              description: >-
                Indicates the submitted data contains sales terms only. Not
                supported for vendors (vendors will receive an HTTP status code
                400 response).
        attributes:
          type: object
          properties: {}
          description: >-
            JSON object containing structured listings item attribute data keyed
            by attribute name.
      description: The request body schema for the putListingsItem operation.
    2021-08-01_ListingsItemSubmissionResponse:
      required:
        - sku
        - status
        - submissionId
      type: object
      properties:
        sku:
          type: string
          description: A selling partner provided identifier for an Amazon listing.
        status:
          type: string
          description: The status of the listings item submission.
          enum:
            - ACCEPTED
            - INVALID
          x-docgen-enum-table-extension:
            - value: ACCEPTED
              description: The listings submission was accepted for processing.
            - value: INVALID
              description: >-
                The listings submission was not valid and was not accepted for
                processing.
        submissionId:
          type: string
          description: The unique identifier of the listings item submission.
        issues:
          type: array
          description: Listings item issues related to the listings item submission.
          items:
            $ref: '#/components/schemas/2021-08-01_Issue'
      description: >-
        Response containing the results of a submission to the Selling Partner
        API for Listings Items.
    2021-08-01_RestrictionList:
      required:
        - restrictions
      type: object
      properties:
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/2021-08-01_Restriction'
      description: A list of restrictions for the specified Amazon catalog item.
    2021-08-01_Restriction:
      required:
        - marketplaceId
      type: object
      properties:
        marketplaceId:
          type: string
          description: >-
            A marketplace identifier. Identifies the Amazon marketplace where
            the restriction is enforced.
        conditionType:
          type: string
          description: The condition that applies to the restriction.
          enum:
            - new_new
            - new_open_box
            - new_oem
            - refurbished_refurbished
            - used_like_new
            - used_very_good
            - used_good
            - used_acceptable
            - collectible_like_new
            - collectible_very_good
            - collectible_good
            - collectible_acceptable
            - club_club
          x-docgen-enum-table-extension:
            - value: new_new
              description: New
            - value: new_open_box
              description: New - Open Box.
            - value: new_oem
              description: New - OEM.
            - value: refurbished_refurbished
              description: Refurbished
            - value: used_like_new
              description: Used - Like New.
            - value: used_very_good
              description: Used - Very Good.
            - value: used_good
              description: Used - Good.
            - value: used_acceptable
              description: Used - Acceptable.
            - value: collectible_like_new
              description: Collectible - Like New.
            - value: collectible_very_good
              description: Collectible - Very Good.
            - value: collectible_good
              description: Collectible - Good.
            - value: collectible_acceptable
              description: Collectible - Acceptable.
            - value: club_club
              description: Club
        reasons:
          type: array
          description: A list of reasons for the restriction.
          items:
            $ref: '#/components/schemas/2021-08-01_Reason'
      description: >-
        A listing restriction, optionally qualified by a condition, with a list
        of reasons for the restriction.
    2021-08-01_Reason:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: A message describing the reason for the restriction.
        reasonCode:
          type: string
          description: A code indicating why the listing is restricted.
          enum:
            - APPROVAL_REQUIRED
            - ASIN_NOT_FOUND
            - NOT_ELIGIBLE
          x-docgen-enum-table-extension:
            - value: APPROVAL_REQUIRED
              description: >-
                Approval is required to create a listing for the specified ASIN.
                A path forward link will be provided that may allow Selling
                Partners to remove the restriction.
            - value: ASIN_NOT_FOUND
              description: The specified ASIN does not exist in the requested marketplace.
            - value: NOT_ELIGIBLE
              description: >-
                Not eligible to create a listing for the specified ASIN. No path
                forward link will be provided to remove the restriction.
        links:
          type: array
          description: >-
            A list of path forward links that may allow Selling Partners to
            remove the restriction.
          items:
            $ref: '#/components/schemas/2021-08-01_Link'
      description: >-
        A reason for the restriction, including path forward links that may
        allow Selling Partners to remove the restriction, if available.
    2021-08-01_Link:
      required:
        - resource
        - verb
      type: object
      properties:
        resource:
          type: string
          description: The URI of the related resource.
          format: uri
        verb:
          type: string
          description: The HTTP verb used to interact with the related resource.
          enum:
            - GET
          x-docgen-enum-table-extension:
            - value: GET
              description: The provided resource is accessed with the HTTP GET method.
        title:
          type: string
          description: The title of the related resource.
        type:
          type: string
          description: The media type of the related resource.
      description: A link to resources related to a listing restriction.
    v1_ProcessingDirective:
      type: object
      properties:
        eventFilter:
          $ref: '#/components/schemas/v1_EventFilter'
      description: >-
        Additional information passed to the subscription to control the
        processing of notifications. For example, you can use an `eventFilter`
        to customize your subscription to send notifications for only the
        specified marketplaceId's, or select the aggregation time period at
        which to send notifications (e.g. limit to one notification every five
        minutes for high frequency notifications). The specific features
        available vary depending on the notificationType.


        This feature is currently only supported by the `ANY_OFFER_CHANGED` and
        `ORDER_CHANGE` notificationTypes.
    v1_EventFilter:
      description: >-
        A notificationType specific filter. This object contains all of the
        currently available filters and properties that you can use to define a
        notificationType specific filter.
      allOf:
        - $ref: '#/components/schemas/v1_AggregationFilter'
        - $ref: '#/components/schemas/v1_MarketplaceFilter'
        - $ref: '#/components/schemas/v1_OrderChangeTypeFilter'
        - required:
            - eventFilterType
          type: object
          properties:
            eventFilterType:
              type: string
              description: >-
                An eventFilterType value that is supported by the specific
                notificationType. This is used by the subscription service to
                determine the type of event filter. Refer to the section of the
                [Notifications Use Case
                Guide](doc:notifications-api-v1-use-case-guide) that describes
                the specific notificationType to determine if an eventFilterType
                is supported.
              enum:
                - ANY_OFFER_CHANGED
                - ORDER_CHANGE
    v1_MarketplaceFilter:
      type: object
      properties:
        marketplaceIds:
          $ref: '#/components/schemas/v1_MarketplaceIds'
      description: >-
        Use this event filter to customize your subscription to send
        notifications for only the specified marketplaceId's.
    v1_MarketplaceIds:
      type: array
      description: >-
        A list of marketplace identifiers to subscribe to (e.g. ATVPDKIKX0DER).
        To receive notifications in every marketplace, do not provide this list.
      items:
        type: string
    v1_AggregationFilter:
      type: object
      properties:
        aggregationSettings:
          $ref: '#/components/schemas/v1_AggregationSettings'
      description: >-
        Use this filter to select the aggregation time period at which to send
        notifications (e.g. limit to one notification every five minutes for
        high frequency notifications).
    v1_AggregationSettings:
      required:
        - aggregationTimePeriod
      type: object
      properties:
        aggregationTimePeriod:
          $ref: '#/components/schemas/v1_AggregationTimePeriod'
      description: >-
        A container that holds all of the necessary properties to configure the
        aggregation of notifications.
    v1_AggregationTimePeriod:
      type: string
      description: >-
        The supported aggregation time periods. For example, if FiveMinutes is
        the value chosen, and 50 price updates occur for an ASIN within 5
        minutes, Amazon will send only two notifications; one for the first
        event, and then a subsequent notification 5 minutes later with the final
        end state of the data. The 48 interim events will be dropped.
      enum:
        - FiveMinutes
        - TenMinutes
      x-docgen-enum-table-extension:
        - value: FiveMinutes
          description: An aggregated notification will be sent every five minutes.
        - value: TenMinutes
          description: An aggregated notification will be sent every ten minutes.
    v1_OrderChangeTypeFilter:
      type: object
      properties:
        orderChangeTypes:
          $ref: '#/components/schemas/v1_OrderChangeTypes'
      description: >-
        Use this event filter to customize your subscription to send
        notifications for only the specified orderChangeType.
    v1_OrderChangeTypes:
      type: array
      description: >-
        A list of order change types to subscribe to (e.g.
        BuyerRequestedChange). To receive notifications of all change types, do
        not provide this list.
      items:
        $ref: '#/components/schemas/v1_OrderChangeTypeEnum'
    v1_OrderChangeTypeEnum:
      type: string
      description: The supported order change type of ORDER_CHANGE notification.
      enum:
        - OrderStatusChange
        - BuyerRequestedChange
    v1_Subscription:
      required:
        - destinationId
        - payloadVersion
        - subscriptionId
      type: object
      properties:
        subscriptionId:
          type: string
          description: >-
            The subscription identifier generated when the subscription is
            created.
        payloadVersion:
          type: string
          description: The version of the payload object to be used in the notification.
        destinationId:
          type: string
          description: >-
            The identifier for the destination where notifications will be
            delivered.
        processingDirective:
          $ref: '#/components/schemas/v1_ProcessingDirective'
      description: Represents a subscription to receive notifications.
    v1_CreateSubscriptionResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_Subscription'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the createSubscription operation.
    v1_CreateSubscriptionRequest:
      type: object
      properties:
        payloadVersion:
          type: string
          description: The version of the payload object to be used in the notification.
        destinationId:
          type: string
          description: >-
            The identifier for the destination where notifications will be
            delivered.
        processingDirective:
          $ref: '#/components/schemas/v1_ProcessingDirective'
      description: The request schema for the createSubscription operation.
    v1_GetSubscriptionByIdResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_Subscription'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the getSubscriptionById operation.
    v1_GetSubscriptionResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_Subscription'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the getSubscription operation.
    v1_DeleteSubscriptionByIdResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the deleteSubscriptionById operation.
    v1_DestinationList:
      type: array
      description: A list of destinations.
      items:
        $ref: '#/components/schemas/v1_Destination'
    v1_Destination:
      required:
        - destinationId
        - name
        - resource
      type: object
      properties:
        name:
          maxLength: 256
          type: string
          description: The developer-defined name for this destination.
        destinationId:
          type: string
          description: >-
            The destination identifier generated when you created the
            destination.
        resource:
          $ref: '#/components/schemas/v1_DestinationResource'
      description: >-
        Represents a destination created when you call the createDestination
        operation.
    v1_DestinationResource:
      type: object
      properties:
        sqs:
          $ref: '#/components/schemas/v1_SqsResource'
        eventBridge:
          $ref: '#/components/schemas/v1_EventBridgeResource'
      description: The destination resource types.
    v1_DestinationResourceSpecification:
      type: object
      properties:
        sqs:
          $ref: '#/components/schemas/v1_SqsResource'
        eventBridge:
          $ref: '#/components/schemas/v1_EventBridgeResourceSpecification'
      description: >-
        The information required to create a destination resource. Applications
        should use one resource type (sqs or eventBridge) per destination.
    v1_SqsResource:
      required:
        - arn
      type: object
      properties:
        arn:
          maxLength: 1000
          pattern: ^arn:aws:sqs:\S+:\S+:\S+
          type: string
          description: The Amazon Resource Name (ARN) associated with the SQS queue.
      description: >-
        The information required to create an Amazon Simple Queue Service
        (Amazon SQS) queue destination.
    v1_EventBridgeResourceSpecification:
      required:
        - accountId
        - region
      type: object
      properties:
        region:
          type: string
          description: The AWS region in which you will be receiving the notifications.
        accountId:
          type: string
          description: >-
            The identifier for the AWS account that is responsible for charges
            related to receiving notifications.
      description: The information required to create an Amazon EventBridge destination.
    v1_EventBridgeResource:
      required:
        - accountId
        - name
        - region
      type: object
      properties:
        name:
          maxLength: 256
          type: string
          description: >-
            The name of the partner event source associated with the
            destination.
        region:
          type: string
          description: >-
            The AWS region in which you receive the notifications. For AWS
            regions that are supported in Amazon EventBridge, see
            https://docs.aws.amazon.com/general/latest/gr/ev.html.
        accountId:
          type: string
          description: >-
            The identifier for the AWS account that is responsible for charges
            related to receiving notifications.
      description: Represents an Amazon EventBridge destination.
    v1_CreateDestinationRequest:
      required:
        - name
        - resourceSpecification
      type: object
      properties:
        resourceSpecification:
          $ref: '#/components/schemas/v1_DestinationResourceSpecification'
        name:
          type: string
          description: A developer-defined name to help identify this destination.
      description: The request schema for the createDestination operation.
    v1_CreateDestinationResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_Destination'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the createDestination operation.
    v1_GetDestinationResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_Destination'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the getDestination operation.
    v1_GetDestinationsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_DestinationList'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the getDestinations operation.
    v1_DeleteDestinationResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the deleteDestination operation.
    v0_UpdateShipmentStatusRequest:
      required:
        - marketplaceId
        - shipmentStatus
      type: object
      properties:
        marketplaceId:
          $ref: '#/components/schemas/v0_MarketplaceId'
        shipmentStatus:
          $ref: '#/components/schemas/v0_ShipmentStatus'
        orderItems:
          $ref: '#/components/schemas/v0_OrderItems'
      description: The request body for the updateShipmentStatus operation.
    v0_UpdateVerificationStatusRequest:
      required:
        - regulatedOrderVerificationStatus
      type: object
      properties:
        regulatedOrderVerificationStatus:
          $ref: '#/components/schemas/v0_UpdateVerificationStatusRequestBody'
      description: The request body for the updateVerificationStatus operation.
    v0_UpdateVerificationStatusRequestBody:
      required:
        - externalReviewerId
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/v0_VerificationStatus'
        externalReviewerId:
          type: string
          description: The identifier for the order's regulated information reviewer.
        rejectionReasonId:
          type: string
          description: >-
            The unique identifier for the rejection reason used for rejecting
            the order's regulated information. Only required if the new status
            is rejected.
      description: The updated values of the VerificationStatus field.
    v0_MarketplaceId:
      type: string
      description: The unobfuscated marketplace identifier.
    v0_ShipmentStatus:
      type: string
      description: The shipment status to apply.
      enum:
        - ReadyForPickup
        - PickedUp
        - RefusedPickup
      x-docgen-enum-table-extension:
        - value: ReadyForPickup
          description: Ready for pickup.
        - value: PickedUp
          description: Picked up.
        - value: RefusedPickup
          description: Refused pickup.
    v0_OrderItems:
      type: array
      description: >-
        For partial shipment status updates, the list of order items and
        quantities to be updated.
      items:
        type: object
        properties:
          orderItemId:
            type: string
            description: The unique identifier of the order item.
          quantity:
            type: integer
            description: The quantity for which to update the shipment status.
    v0_UpdateShipmentStatusErrorResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The error response schema for the UpdateShipmentStatus operation.
    v0_UpdateVerificationStatusErrorResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The error response schema for the UpdateVerificationStatus operation.
    v0_GetOrdersResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_OrdersList'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the getOrders operation.
    v0_GetOrderResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_Order'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the getOrder operation.
    v0_GetOrderBuyerInfoResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_OrderBuyerInfo'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the getOrderBuyerInfo operation.
    v0_GetOrderRegulatedInfoResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_OrderRegulatedInfo'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the getOrderRegulatedInfo operation.
    v0_GetOrderAddressResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_OrderAddress'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the getOrderAddress operation.
    v0_GetOrderItemsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_OrderItemsList'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the getOrderItems operation.
    v0_GetOrderItemsBuyerInfoResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_OrderItemsBuyerInfoList'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The response schema for the getOrderItemsBuyerInfo operation.
    v0_OrdersList:
      required:
        - Orders
      type: object
      properties:
        Orders:
          $ref: '#/components/schemas/v0_OrderList'
        NextToken:
          type: string
          description: >-
            When present and not empty, pass this string token in the next
            request to return the next response page.
        LastUpdatedBefore:
          type: string
          description: >-
            A date used for selecting orders that were last updated before (or
            at) a specified time. An update is defined as any change in order
            status, including the creation of a new order. Includes updates made
            by Amazon and by the seller. All dates must be in ISO 8601 format.
        CreatedBefore:
          type: string
          description: >-
            A date used for selecting orders created before (or at) a specified
            time. Only orders placed before the specified time are returned. The
            date must be in ISO 8601 format.
      description: >-
        A list of orders along with additional information to make subsequent
        API calls.
    v0_OrderList:
      type: array
      description: A list of orders.
      items:
        $ref: '#/components/schemas/v0_Order'
    v0_Order:
      required:
        - AmazonOrderId
        - LastUpdateDate
        - OrderStatus
        - PurchaseDate
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
        SellerOrderId:
          type: string
          description: A seller-defined order identifier.
        PurchaseDate:
          type: string
          description: The date when the order was created.
        LastUpdateDate:
          type: string
          description: >-
            The date when the order was last updated.


            __Note__: LastUpdateDate is returned with an incorrect date for
            orders that were last updated before 2009-04-01.
        OrderStatus:
          type: string
          description: The current order status.
          enum:
            - Pending
            - Unshipped
            - PartiallyShipped
            - Shipped
            - Canceled
            - Unfulfillable
            - InvoiceUnconfirmed
            - PendingAvailability
          x-docgen-enum-table-extension:
            - value: Pending
              description: >-
                The order has been placed but payment has not been authorized.
                The order is not ready for shipment. Note that for orders with
                OrderType = Standard, the initial order status is Pending. For
                orders with OrderType = Preorder, the initial order status is
                PendingAvailability, and the order passes into the Pending
                status when the payment authorization process begins.
            - value: Unshipped
              description: >-
                Payment has been authorized and order is ready for shipment, but
                no items in the order have been shipped.
            - value: PartiallyShipped
              description: One or more (but not all) items in the order have been shipped.
            - value: Shipped
              description: All items in the order have been shipped.
            - value: Canceled
              description: The order was canceled.
            - value: Unfulfillable
              description: >-
                The order cannot be fulfilled. This state applies only to
                Amazon-fulfilled orders that were not placed on Amazon's retail
                web site.
            - value: InvoiceUnconfirmed
              description: >-
                All items in the order have been shipped. The seller has not yet
                given confirmation to Amazon that the invoice has been shipped
                to the buyer.
            - value: PendingAvailability
              description: >-
                This status is available for pre-orders only. The order has been
                placed, payment has not been authorized, and the release date of
                the item is in the future. The order is not ready for shipment.
        FulfillmentChannel:
          type: string
          description: >-
            Whether the order was fulfilled by Amazon (AFN) or by the seller
            (MFN).
          enum:
            - MFN
            - AFN
          x-docgen-enum-table-extension:
            - value: MFN
              description: Fulfilled by the seller.
            - value: AFN
              description: Fulfilled by Amazon.
        SalesChannel:
          type: string
          description: The sales channel of the first item in the order.
        OrderChannel:
          type: string
          description: The order channel of the first item in the order.
        ShipServiceLevel:
          type: string
          description: The shipment service level of the order.
        OrderTotal:
          $ref: '#/components/schemas/v0_Money'
        NumberOfItemsShipped:
          type: integer
          description: The number of items shipped.
        NumberOfItemsUnshipped:
          type: integer
          description: The number of items unshipped.
        PaymentExecutionDetail:
          $ref: '#/components/schemas/v0_PaymentExecutionDetailItemList'
        PaymentMethod:
          type: string
          description: >-
            The payment method for the order. This property is limited to Cash
            On Delivery (COD) and Convenience Store (CVS) payment methods.
            Unless you need the specific COD payment information provided by the
            PaymentExecutionDetailItem object, we recommend using the
            PaymentMethodDetails property to get payment method information.
          enum:
            - COD
            - CVS
            - Other
          x-docgen-enum-table-extension:
            - value: COD
              description: Cash on delivery.
            - value: CVS
              description: Convenience store.
            - value: Other
              description: A payment method other than COD and CVS.
        PaymentMethodDetails:
          $ref: '#/components/schemas/v0_PaymentMethodDetailItemList'
        MarketplaceId:
          type: string
          description: The identifier for the marketplace where the order was placed.
        ShipmentServiceLevelCategory:
          type: string
          description: >-
            The shipment service level category of the order.


            Possible values: Expedited, FreeEconomy, NextDay, Priority, SameDay,
            SecondDay, Scheduled, Standard.
        EasyShipShipmentStatus:
          $ref: '#/components/schemas/v0_EasyShipShipmentStatus'
        CbaDisplayableShippingLabel:
          type: string
          description: Custom ship label for Checkout by Amazon (CBA).
        OrderType:
          type: string
          description: The type of the order.
          enum:
            - StandardOrder
            - LongLeadTimeOrder
            - Preorder
            - BackOrder
            - SourcingOnDemandOrder
          x-docgen-enum-table-extension:
            - value: StandardOrder
              description: >-
                An order that contains items for which the selling partner
                currently has inventory in stock.
            - value: LongLeadTimeOrder
              description: An order that contains items that have a long lead time to ship.
            - value: Preorder
              description: >-
                An order that contains items with a release date that is in the
                future.
            - value: BackOrder
              description: >-
                An order that contains items that already have been released in
                the market but are currently out of stock and will be available
                in the future.
            - value: SourcingOnDemandOrder
              description: A Sourcing On Demand order.
        EarliestShipDate:
          type: string
          description: >-
            The start of the time period within which you have committed to ship
            the order. In ISO 8601 date time format. Returned only for
            seller-fulfilled orders.


            __Note__: EarliestShipDate might not be returned for orders placed
            before February 1, 2013.
        LatestShipDate:
          type: string
          description: >-
            The end of the time period within which you have committed to ship
            the order. In ISO 8601 date time format. Returned only for
            seller-fulfilled orders.


            __Note__: LatestShipDate might not be returned for orders placed
            before February 1, 2013.
        EarliestDeliveryDate:
          type: string
          description: >-
            The start of the time period within which you have committed to
            fulfill the order. In ISO 8601 date time format. Returned only for
            seller-fulfilled orders.
        LatestDeliveryDate:
          type: string
          description: >-
            The end of the time period within which you have committed to
            fulfill the order. In ISO 8601 date time format. Returned only for
            seller-fulfilled orders that do not have a PendingAvailability,
            Pending, or Canceled status.
        IsBusinessOrder:
          type: boolean
          description: >-
            When true, the order is an Amazon Business order. An Amazon Business
            order is an order where the buyer is a Verified Business Buyer.
        IsPrime:
          type: boolean
          description: When true, the order is a seller-fulfilled Amazon Prime order.
        IsPremiumOrder:
          type: boolean
          description: >-
            When true, the order has a Premium Shipping Service Level Agreement.
            For more information about Premium Shipping orders, see "Premium
            Shipping Options" in the Seller Central Help for your marketplace.
        IsGlobalExpressEnabled:
          type: boolean
          description: When true, the order is a GlobalExpress order.
        ReplacedOrderId:
          type: string
          description: >-
            The order ID value for the order that is being replaced. Returned
            only if IsReplacementOrder = true.
        IsReplacementOrder:
          type: boolean
          description: When true, this is a replacement order.
        PromiseResponseDueDate:
          type: string
          description: >-
            Indicates the date by which the seller must respond to the buyer
            with an estimated ship date. Returned only for Sourcing on Demand
            orders.
        IsEstimatedShipDateSet:
          type: boolean
          description: >-
            When true, the estimated ship date is set for the order. Returned
            only for Sourcing on Demand orders.
        IsSoldByAB:
          type: boolean
          description: >-
            When true, the item within this order was bought and re-sold by
            Amazon Business EU SARL (ABEU). By buying and instantly re-selling
            your items, ABEU becomes the seller of record, making your inventory
            available for sale to customers who would not otherwise purchase
            from a third-party seller.
        IsIBA:
          type: boolean
          description: >-
            When true, the item within this order was bought and re-sold by
            Amazon Business EU SARL (ABEU). By buying and instantly re-selling
            your items, ABEU becomes the seller of record, making your inventory
            available for sale to customers who would not otherwise purchase
            from a third-party seller.
        DefaultShipFromLocationAddress:
          $ref: '#/components/schemas/v0_Address'
        BuyerInvoicePreference:
          type: string
          description: >-
            The buyer's invoicing preference. Available only in the TR
            marketplace.
          enum:
            - INDIVIDUAL
            - BUSINESS
          x-docgen-enum-table-extension:
            - value: INDIVIDUAL
              description: Buyer should be issued an individual invoice.
            - value: BUSINESS
              description: >-
                Buyer should be issued a business invoice. Tax information is
                available in BuyerTaxInformation structure.
        BuyerTaxInformation:
          $ref: '#/components/schemas/v0_BuyerTaxInformation'
        FulfillmentInstruction:
          $ref: '#/components/schemas/v0_FulfillmentInstruction'
        IsISPU:
          type: boolean
          description: >-
            When true, this order is marked to be picked up from a store rather
            than delivered.
        IsAccessPointOrder:
          type: boolean
          description: >-
            When true, this order is marked to be delivered to an Access Point.
            The access location is chosen by the customer. Access Points include
            Amazon Hub Lockers, Amazon Hub Counters, and pickup points operated
            by carriers.
        MarketplaceTaxInfo:
          $ref: '#/components/schemas/v0_MarketplaceTaxInfo'
        SellerDisplayName:
          type: string
          description: The seller’s friendly name registered in the marketplace.
        ShippingAddress:
          $ref: '#/components/schemas/v0_Address'
        BuyerInfo:
          $ref: '#/components/schemas/v0_BuyerInfo'
        AutomatedShippingSettings:
          $ref: '#/components/schemas/v0_AutomatedShippingSettings'
        HasRegulatedItems:
          type: boolean
          description: >-
            Whether the order contains regulated items which may require
            additional approval steps before being fulfilled.
        ElectronicInvoiceStatus:
          $ref: '#/components/schemas/v0_ElectronicInvoiceStatus'
      description: Order information.
    v0_OrderBuyerInfo:
      required:
        - AmazonOrderId
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
        BuyerEmail:
          type: string
          description: The anonymized email address of the buyer.
        BuyerName:
          type: string
          description: The buyer name or the recipient name.
        BuyerCounty:
          type: string
          description: The county of the buyer.
        BuyerTaxInfo:
          $ref: '#/components/schemas/v0_BuyerTaxInfo'
        PurchaseOrderNumber:
          type: string
          description: >-
            The purchase order (PO) number entered by the buyer at checkout.
            Returned only for orders where the buyer entered a PO number at
            checkout.
      description: Buyer information for an order.
    v0_OrderRegulatedInfo:
      required:
        - AmazonOrderId
        - RegulatedInformation
        - RegulatedOrderVerificationStatus
        - RequiresDosageLabel
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
        RegulatedInformation:
          $ref: '#/components/schemas/v0_RegulatedInformation'
        RequiresDosageLabel:
          type: boolean
          description: >-
            When true, the order requires attaching a dosage information label
            when shipped.
        RegulatedOrderVerificationStatus:
          $ref: '#/components/schemas/v0_RegulatedOrderVerificationStatus'
      description: The order's regulated information along with its verification status.
    v0_RegulatedOrderVerificationStatus:
      required:
        - RequiresMerchantAction
        - Status
        - ValidRejectionReasons
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/v0_VerificationStatus'
        RequiresMerchantAction:
          type: boolean
          description: >-
            When true, the regulated information provided in the order requires
            a review by the merchant.
        ValidRejectionReasons:
          type: array
          description: >-
            A list of valid rejection reasons that may be used to reject the
            order's regulated information.
          items:
            $ref: '#/components/schemas/v0_RejectionReason'
        RejectionReason:
          $ref: '#/components/schemas/v0_RejectionReason'
        ReviewDate:
          type: string
          description: The date the order was reviewed. In ISO 8601 date time format.
        ExternalReviewerId:
          type: string
          description: The identifier for the order's regulated information reviewer.
      description: >-
        The verification status of the order along with associated approval or
        rejection metadata.
    v0_RejectionReason:
      required:
        - RejectionReasonDescription
        - RejectionReasonId
      type: object
      properties:
        RejectionReasonId:
          type: string
          description: The unique identifier for the rejection reason.
        RejectionReasonDescription:
          type: string
          description: The description of this rejection reason.
      description: >-
        The reason for rejecting the order's regulated information. Not present
        if the order isn't rejected.
    v0_VerificationStatus:
      type: string
      description: The verification status of the order.
      enum:
        - Pending
        - Approved
        - Rejected
        - Expired
        - Cancelled
      x-docgen-enum-table-extension:
        - value: Pending
          description: >-
            The order is pending approval. Note that the approval might be
            needed from someone other than the merchant as determined by the
            RequiresMerchantAction property.
        - value: Approved
          description: The order's regulated information has been reviewed and approved.
        - value: Rejected
          description: The order's regulated information has been reviewed and rejected.
        - value: Expired
          description: The time to review the order's regulated information has expired.
        - value: Cancelled
          description: The order was cancelled by the purchaser.
    v0_RegulatedInformation:
      required:
        - Fields
      type: object
      properties:
        Fields:
          type: array
          description: >-
            A list of regulated information fields as collected from the
            regulatory form.
          items:
            $ref: '#/components/schemas/v0_RegulatedInformationField'
      description: >-
        The regulated information collected during purchase and used to verify
        the order.
    v0_RegulatedInformationField:
      required:
        - FieldId
        - FieldLabel
        - FieldType
        - FieldValue
      type: object
      properties:
        FieldId:
          type: string
          description: The unique identifier for the field.
        FieldLabel:
          type: string
          description: The name for the field.
        FieldType:
          type: string
          description: The type of field.
          enum:
            - Text
            - FileAttachment
          x-docgen-enum-table-extension:
            - value: Text
              description: >-
                This field is a text representation of a response collected from
                the regulatory form.
            - value: FileAttachment
              description: >-
                This field contains the link to an attachment collected from the
                regulatory form.
        FieldValue:
          type: string
          description: >-
            The content of the field as collected in regulatory form. Note that
            FileAttachment type fields will contain a URL to download the
            attachment here.
      description: A field collected from the regulatory form.
    v0_OrderAddress:
      required:
        - AmazonOrderId
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
        BuyerCompanyName:
          type: string
          description: Company Name of the Buyer.
        ShippingAddress:
          $ref: '#/components/schemas/v0_Address'
        DeliveryPreferences:
          $ref: '#/components/schemas/v0_DeliveryPreferences'
      description: The shipping address for the order.
    v0_Address:
      required:
        - Name
      type: object
      properties:
        Name:
          type: string
          description: The name.
        AddressLine1:
          type: string
          description: The street address.
        AddressLine2:
          type: string
          description: Additional street address information, if required.
        AddressLine3:
          type: string
          description: Additional street address information, if required.
        City:
          type: string
          description: 'The city '
        County:
          type: string
          description: The county.
        District:
          type: string
          description: The district.
        StateOrRegion:
          type: string
          description: The state or region.
        Municipality:
          type: string
          description: The municipality.
        PostalCode:
          type: string
          description: The postal code.
        CountryCode:
          type: string
          description: >-
            The country code. A two-character country code, in ISO 3166-1
            alpha-2 format.
        Phone:
          type: string
          description: >-
            The phone number. Not returned for Fulfillment by Amazon (FBA)
            orders.
        AddressType:
          type: string
          description: The address type of the shipping address.
          enum:
            - Residential
            - Commercial
          x-docgen-enum-table-extension:
            - value: Residential
              description: The shipping address is a residential address.
            - value: Commercial
              description: The shipping address is a commercial address.
      description: The shipping address for the order.
    v0_DeliveryPreferences:
      type: object
      properties:
        DropOffLocation:
          type: string
          description: Drop-off location selected by the customer.
        PreferredDeliveryTime:
          $ref: '#/components/schemas/v0_PreferredDeliveryTime'
        OtherAttributes:
          type: array
          description: >-
            Enumerated list of miscellaneous delivery attributes associated with
            the shipping address.
          items:
            $ref: '#/components/schemas/v0_OtherDeliveryAttributes'
        AddressInstructions:
          type: string
          description: Building instructions, nearby landmark or navigation instructions.
      description: >-
        Contains all of the delivery instructions provided by the customer for
        the shipping address.
    v0_PreferredDeliveryTime:
      type: object
      properties:
        BusinessHours:
          type: array
          description: Business hours when the business is open for deliveries.
          items:
            $ref: '#/components/schemas/v0_BusinessHours'
        ExceptionDates:
          type: array
          description: Dates when the business is closed in the next 30 days.
          items:
            $ref: '#/components/schemas/v0_ExceptionDates'
      description: The time window when the delivery is preferred.
    v0_BusinessHours:
      type: object
      properties:
        DayOfWeek:
          type: string
          description: Day of the week.
          enum:
            - SUN
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
          x-docgen-enum-table-extension:
            - value: SUN
              description: Sunday - Day of the week.
            - value: MON
              description: Monday - Day of the week.
            - value: TUE
              description: Tuesday - Day of the week.
            - value: WED
              description: Wednesday - Day of the week.
            - value: THU
              description: Thursday - Day of the week.
            - value: FRI
              description: Friday - Day of the week.
            - value: SAT
              description: Saturday - Day of the week.
        OpenIntervals:
          type: array
          description: Time window during the day when the business is open.
          items:
            $ref: '#/components/schemas/v0_OpenInterval'
      description: Business days and hours when the destination is open for deliveries.
    v0_ExceptionDates:
      type: object
      properties:
        ExceptionDate:
          type: string
          description: Date when the business is closed, in ISO-8601 date format.
        IsOpen:
          type: boolean
          description: Boolean indicating if the business is closed or open on that date.
        OpenIntervals:
          type: array
          description: Time window during the day when the business is open.
          items:
            $ref: '#/components/schemas/v0_OpenInterval'
      description: Dates when the business is closed or open with a different time window.
    v0_OpenInterval:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/v0_OpenTimeInterval'
        EndTime:
          $ref: '#/components/schemas/v0_OpenTimeInterval'
      description: The time interval for which the business is open.
    v0_OpenTimeInterval:
      type: object
      properties:
        Hour:
          type: integer
          description: The hour when the business opens or closes.
        Minute:
          type: integer
          description: The minute when the business opens or closes.
      description: The time when the business opens or closes.
    v0_OtherDeliveryAttributes:
      type: string
      description: Miscellaneous delivery attributes associated with the shipping address.
      enum:
        - HAS_ACCESS_POINT
        - PALLET_ENABLED
        - PALLET_DISABLED
      x-docgen-enum-table-extension:
        - value: HAS_ACCESS_POINT
          description: >-
            Indicates whether the delivery has an access point pickup or
            drop-off location.
        - value: PALLET_ENABLED
          description: Indicates whether pallet delivery is enabled for the address.
        - value: PALLET_DISABLED
          description: Indicates whether pallet delivery is disabled for the address.
    v0_Money:
      type: object
      properties:
        CurrencyCode:
          type: string
          description: The three-digit currency code. In ISO 4217 format.
        Amount:
          type: string
          description: The currency amount.
      description: The monetary value of the order.
    v0_PaymentMethodDetailItemList:
      type: array
      description: A list of payment method detail items.
      items:
        type: string
    v0_PaymentExecutionDetailItemList:
      type: array
      description: A list of payment execution detail items.
      items:
        $ref: '#/components/schemas/v0_PaymentExecutionDetailItem'
    v0_PaymentExecutionDetailItem:
      required:
        - Payment
        - PaymentMethod
      type: object
      properties:
        Payment:
          $ref: '#/components/schemas/v0_Money'
        PaymentMethod:
          type: string
          description: |-
            A sub-payment method for a COD order.

            Possible values:
            * `COD`: Cash On Delivery.
            * `GC`: Gift Card.
            * `PointsAccount`: Amazon Points.
            * `Invoice`: Invoice.
      description: Information about a sub-payment method used to pay for a COD order.
    v0_BuyerTaxInfo:
      type: object
      properties:
        CompanyLegalName:
          type: string
          description: The legal name of the company.
        TaxingRegion:
          type: string
          description: The country or region imposing the tax.
        TaxClassifications:
          type: array
          description: A list of tax classifications that apply to the order.
          items:
            $ref: '#/components/schemas/v0_TaxClassification'
      description: Tax information about the buyer.
    v0_MarketplaceTaxInfo:
      type: object
      properties:
        TaxClassifications:
          type: array
          description: A list of tax classifications that apply to the order.
          items:
            $ref: '#/components/schemas/v0_TaxClassification'
      description: Tax information about the marketplace.
    v0_TaxClassification:
      type: object
      properties:
        Name:
          type: string
          description: The type of tax.
        Value:
          type: string
          description: The buyer's tax identifier.
      description: The tax classification for the order.
    v0_OrderItemsList:
      required:
        - AmazonOrderId
        - OrderItems
      type: object
      properties:
        OrderItems:
          $ref: '#/components/schemas/v0_OrderItemList'
        NextToken:
          type: string
          description: >-
            When present and not empty, pass this string token in the next
            request to return the next response page.
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
      description: The order items list along with the order ID.
    v0_OrderItemList:
      type: array
      description: A list of order items.
      items:
        $ref: '#/components/schemas/v0_OrderItem'
    v0_OrderItem:
      required:
        - ASIN
        - OrderItemId
        - QuantityOrdered
      type: object
      properties:
        ASIN:
          type: string
          description: The Amazon Standard Identification Number (ASIN) of the item.
        SellerSKU:
          type: string
          description: The seller stock keeping unit (SKU) of the item.
        OrderItemId:
          type: string
          description: An Amazon-defined order item identifier.
        AssociatedItems:
          type: array
          description: >-
            A list of associated items that a customer has purchased with a
            product. For example, a tire installation service purchased with
            tires.
          items:
            $ref: '#/components/schemas/v0_AssociatedItem'
        Title:
          type: string
          description: The name of the item.
        QuantityOrdered:
          type: integer
          description: 'The number of items in the order. '
        QuantityShipped:
          type: integer
          description: The number of items shipped.
        ProductInfo:
          $ref: '#/components/schemas/v0_ProductInfoDetail'
        PointsGranted:
          $ref: '#/components/schemas/v0_PointsGrantedDetail'
        ItemPrice:
          $ref: '#/components/schemas/v0_Money'
        ShippingPrice:
          $ref: '#/components/schemas/v0_Money'
        ItemTax:
          $ref: '#/components/schemas/v0_Money'
        ShippingTax:
          $ref: '#/components/schemas/v0_Money'
        ShippingDiscount:
          $ref: '#/components/schemas/v0_Money'
        ShippingDiscountTax:
          $ref: '#/components/schemas/v0_Money'
        PromotionDiscount:
          $ref: '#/components/schemas/v0_Money'
        PromotionDiscountTax:
          $ref: '#/components/schemas/v0_Money'
        PromotionIds:
          $ref: '#/components/schemas/v0_PromotionIdList'
        CODFee:
          $ref: '#/components/schemas/v0_Money'
        CODFeeDiscount:
          $ref: '#/components/schemas/v0_Money'
        IsGift:
          type: boolean
          description: When true, the item is a gift.
        ConditionNote:
          type: string
          description: The condition of the item as described by the seller.
        ConditionId:
          type: string
          description: >-
            The condition of the item.


            Possible values: New, Used, Collectible, Refurbished, Preorder,
            Club.
        ConditionSubtypeId:
          type: string
          description: >-
            The subcondition of the item.


            Possible values: New, Mint, Very Good, Good, Acceptable, Poor, Club,
            OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, Any,
            Other.
        ScheduledDeliveryStartDate:
          type: string
          description: >-
            The start date of the scheduled delivery window in the time zone of
            the order destination. In ISO 8601 date time format.
        ScheduledDeliveryEndDate:
          type: string
          description: >-
            The end date of the scheduled delivery window in the time zone of
            the order destination. In ISO 8601 date time format.
        PriceDesignation:
          type: string
          description: >-
            Indicates that the selling price is a special price that is
            available only for Amazon Business orders. For more information
            about the Amazon Business Seller Program, see the [Amazon Business
            website](https://www.amazon.com/b2b/info/amazon-business). 


            Possible values: BusinessPrice - A special price that is available
            only for Amazon Business orders.
        TaxCollection:
          $ref: '#/components/schemas/v0_TaxCollection'
        SerialNumberRequired:
          type: boolean
          description: |-
            When true, the product type for this item has a serial number.

            Returned only for Amazon Easy Ship orders.
        IsTransparency:
          type: boolean
          description: >-
            When true, the ASIN is enrolled in Transparency and the Transparency
            serial number that needs to be submitted can be determined by the
            following:


            **1D or 2D Barcode:** This has a **T** logo. Submit either the
            29-character alpha-numeric identifier beginning with **AZ** or
            **ZA**, or the 38-character Serialized Global Trade Item Number
            (SGTIN).

            **2D Barcode SN:** Submit the 7- to 20-character serial number
            barcode, which likely has the prefix **SN**. The serial number will
            be applied to the same side of the packaging as the GTIN
            (UPC/EAN/ISBN) barcode.

            **QR code SN:** Submit the URL that the QR code generates.
        IossNumber:
          type: string
          description: >-
            The IOSS number for the marketplace. Sellers shipping to the
            European Union (EU) from outside of the EU must provide this IOSS
            number to their carrier when Amazon has collected the VAT on the
            sale.
        StoreChainStoreId:
          type: string
          description: >-
            The store chain store identifier. Linked to a specific store in a
            store chain.
        DeemedResellerCategory:
          type: string
          description: >-
            The category of deemed reseller. This applies to selling partners
            that are not based in the EU and is used to help them meet the VAT
            Deemed Reseller tax laws in the EU and UK.
          enum:
            - IOSS
            - UOSS
          x-docgen-enum-table-extension:
            - value: IOSS
              description: >-
                Import one stop shop. The item being purchased is not held in
                the EU for shipment.
            - value: UOSS
              description: >-
                Union one stop shop. The item being purchased is held in the EU
                for shipment.
        BuyerInfo:
          $ref: '#/components/schemas/v0_ItemBuyerInfo'
        BuyerRequestedCancel:
          $ref: '#/components/schemas/v0_BuyerRequestedCancel'
        SerialNumbers:
          type: array
          description: >-
            A list of serial numbers for electronic products that are shipped to
            customers. Returned for FBA orders only.
          items:
            type: string
        SubstitutionPreferences:
          $ref: '#/components/schemas/v0_SubstitutionPreferences'
        Measurement:
          $ref: '#/components/schemas/v0_Measurement'
      description: A single order item.
    v0_SubstitutionPreferences:
      required:
        - SubstitutionType
      type: object
      properties:
        SubstitutionType:
          type: string
          description: The type of substitution that these preferences represent.
          enum:
            - CUSTOMER_PREFERENCE
            - AMAZON_RECOMMENDED
            - DO_NOT_SUBSTITUTE
          x-docgen-enum-table-extension:
            - value: CUSTOMER_PREFERENCE
              description: Customer has provided the substitution preferences.
            - value: AMAZON_RECOMMENDED
              description: Amazon has provided the substitution preferences.
            - value: DO_NOT_SUBSTITUTE
              description: Do not provide substitute if item is not found.
        SubstitutionOptions:
          $ref: '#/components/schemas/v0_SubstitutionOptionList'
    v0_SubstitutionOptionList:
      type: array
      description: A collection of substitution options.
      items:
        $ref: '#/components/schemas/v0_SubstitutionOption'
    v0_SubstitutionOption:
      type: object
      properties:
        ASIN:
          type: string
          description: The Amazon Standard Identification Number (ASIN) of the item.
        QuantityOrdered:
          type: integer
          description: 'The number of items to be picked for this substitution option. '
        SellerSKU:
          type: string
          description: The seller stock keeping unit (SKU) of the item.
        Title:
          type: string
          description: The title of the item.
        Measurement:
          $ref: '#/components/schemas/v0_Measurement'
    v0_Measurement:
      required:
        - Unit
        - Value
      type: object
      properties:
        Unit:
          type: string
          description: The unit of measure for this measurement.
          enum:
            - OUNCES
            - POUNDS
            - KILOGRAMS
            - GRAMS
            - MILLIGRAMS
            - INCHES
            - FEET
            - METERS
            - CENTIMETERS
            - MILLIMETERS
            - SQUARE_METERS
            - SQUARE_CENTIMETERS
            - SQUARE_FEET
            - SQUARE_INCHES
            - GALLONS
            - PINTS
            - QUARTS
            - FLUID_OUNCES
            - LITERS
            - CUBIC_METERS
            - CUBIC_FEET
            - CUBIC_INCHES
            - CUBIC_CENTIMETERS
            - COUNT
          x-docgen-enum-table-extension:
            - value: OUNCES
              description: Indicates the item's measurement is measured in ounces.
            - value: POUNDS
              description: Indicates the item's measurement is measured in pounds.
            - value: KILOGRAMS
              description: Indicates the item's measurement is measured in kilograms.
            - value: GRAMS
              description: Indicates the item's measurement is measured in grams.
            - value: MILLIGRAMS
              description: Indicates the item's measurement is measured in milligrams.
            - value: INCHES
              description: Indicates the item's measurement is measured in inches.
            - value: FEET
              description: Indicates the item's measurement is measured in feet.
            - value: METERS
              description: Indicates the item's measurement is measured in meters.
            - value: CENTIMETERS
              description: Indicates the item's measurement is measured in centimeters.
            - value: MILLIMETERS
              description: Indicates the item's measurement is measured in millimeters.
            - value: SQUARE_METERS
              description: Indicates the item's measurement is measured in square meters.
            - value: SQUARE_CENTIMETERS
              description: >-
                Indicates the item's measurement is measured in square
                centimeters.
            - value: SQUARE_FEET
              description: Indicates the item's measurement is measured in square feet.
            - value: SQUARE_INCHES
              description: Indicates the item's measurement is measured in square inches.
            - value: GALLONS
              description: Indicates the item's measurement is measured in gallons.
            - value: PINTS
              description: Indicates the item's measurement is measured in pints.
            - value: QUARTS
              description: Indicates the item's measurement is measured in quarts.
            - value: FLUID_OUNCES
              description: Indicates the item's measurement is measured in fluid ounces.
            - value: LITERS
              description: Indicates the item's measurement is measured in liters.
            - value: CUBIC_METERS
              description: Indicates the item's measurement is measured in cubic meters.
            - value: CUBIC_FEET
              description: Indicates the item's measurement is measured in cubic feet.
            - value: CUBIC_INCHES
              description: Indicates the item's measurement is measured in cubic inches.
            - value: CUBIC_CENTIMETERS
              description: >-
                Indicates the item's measurement is measured in cubic
                centimeters.
            - value: COUNT
              description: Indicates the item's measurement is measured by count.
        Value:
          type: number
          description: The value of the measurement.
    v0_AssociatedItem:
      type: object
      properties:
        OrderId:
          type: string
          description: The order item's order identifier, in 3-7-7 format.
        OrderItemId:
          type: string
          description: An Amazon-defined item identifier for the associated item.
        AssociationType:
          $ref: '#/components/schemas/v0_AssociationType'
      description: >-
        An item associated with an order item. For example, a tire installation
        service purchased with tires.
    v0_AssociationType:
      type: string
      description: The type of association an item has with an order item.
      enum:
        - VALUE_ADD_SERVICE
      x-docgen-enum-table-extension:
        - value: VALUE_ADD_SERVICE
          description: The associated item is a service order.
    v0_OrderItemsBuyerInfoList:
      required:
        - AmazonOrderId
        - OrderItems
      type: object
      properties:
        OrderItems:
          $ref: '#/components/schemas/v0_OrderItemBuyerInfoList'
        NextToken:
          type: string
          description: >-
            When present and not empty, pass this string token in the next
            request to return the next response page.
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
      description: A single order item's buyer information list with the order ID.
    v0_OrderItemBuyerInfoList:
      type: array
      description: A single order item's buyer information list.
      items:
        $ref: '#/components/schemas/v0_OrderItemBuyerInfo'
    v0_OrderItemBuyerInfo:
      required:
        - OrderItemId
      type: object
      properties:
        OrderItemId:
          type: string
          description: An Amazon-defined order item identifier.
        BuyerCustomizedInfo:
          $ref: '#/components/schemas/v0_BuyerCustomizedInfoDetail'
        GiftWrapPrice:
          $ref: '#/components/schemas/v0_Money'
        GiftWrapTax:
          $ref: '#/components/schemas/v0_Money'
        GiftMessageText:
          type: string
          description: A gift message provided by the buyer.
        GiftWrapLevel:
          type: string
          description: The gift wrap level specified by the buyer.
      description: A single order item's buyer information.
    v0_PointsGrantedDetail:
      type: object
      properties:
        PointsNumber:
          type: integer
          description: The number of Amazon Points granted with the purchase of an item.
        PointsMonetaryValue:
          $ref: '#/components/schemas/v0_Money'
      description: >-
        The number of Amazon Points offered with the purchase of an item, and
        their monetary value.
    v0_ProductInfoDetail:
      type: object
      properties:
        NumberOfItems:
          type: integer
          description: The total number of items that are included in the ASIN.
      description: Product information on the number of items.
    v0_PromotionIdList:
      type: array
      description: >-
        A list of promotion identifiers provided by the seller when the
        promotions were created.
      items:
        type: string
    v0_BuyerCustomizedInfoDetail:
      type: object
      properties:
        CustomizedURL:
          type: string
          description: The location of a zip file containing Amazon Custom data.
      description: Buyer information for custom orders from the Amazon Custom program.
    v0_TaxCollection:
      type: object
      properties:
        Model:
          type: string
          description: The tax collection model applied to the item.
          enum:
            - MarketplaceFacilitator
          x-docgen-enum-table-extension:
            - value: MarketplaceFacilitator
              description: >-
                Tax is withheld and remitted to the taxing authority by Amazon
                on behalf of the seller.
        ResponsibleParty:
          type: string
          description: >-
            The party responsible for withholding the taxes and remitting them
            to the taxing authority.
          enum:
            - Amazon Services, Inc.
          x-docgen-enum-table-extension:
            - value: Amazon Services, Inc.
              description: Amazon Services, Inc.
      description: Information about withheld taxes.
    v0_BuyerTaxInformation:
      type: object
      properties:
        BuyerLegalCompanyName:
          type: string
          description: Business buyer's company legal name.
        BuyerBusinessAddress:
          type: string
          description: Business buyer's address.
        BuyerTaxRegistrationId:
          type: string
          description: Business buyer's tax registration ID.
        BuyerTaxOffice:
          type: string
          description: Business buyer's tax office.
      description: >-
        Contains the business invoice tax information. Available only in the TR
        marketplace.
    v0_FulfillmentInstruction:
      type: object
      properties:
        FulfillmentSupplySourceId:
          type: string
          description: >-
            Denotes the recommended sourceId where the order should be fulfilled
            from.
      description: >-
        Contains the instructions about the fulfillment like where should it be
        fulfilled from.
    v0_BuyerInfo:
      type: object
      properties:
        BuyerEmail:
          type: string
          description: The anonymized email address of the buyer.
        BuyerName:
          type: string
          description: The buyer name or the recipient name.
        BuyerCounty:
          type: string
          description: The county of the buyer.
        BuyerTaxInfo:
          $ref: '#/components/schemas/v0_BuyerTaxInfo'
        PurchaseOrderNumber:
          type: string
          description: >-
            The purchase order (PO) number entered by the buyer at checkout.
            Returned only for orders where the buyer entered a PO number at
            checkout.
      description: Buyer information.
    v0_ItemBuyerInfo:
      type: object
      properties:
        BuyerCustomizedInfo:
          $ref: '#/components/schemas/v0_BuyerCustomizedInfoDetail'
        GiftWrapPrice:
          $ref: '#/components/schemas/v0_Money'
        GiftWrapTax:
          $ref: '#/components/schemas/v0_Money'
        GiftMessageText:
          type: string
          description: A gift message provided by the buyer.
        GiftWrapLevel:
          type: string
          description: The gift wrap level specified by the buyer.
      description: A single item's buyer information.
    v0_AutomatedShippingSettings:
      type: object
      properties:
        HasAutomatedShippingSettings:
          type: boolean
          description: >-
            When true, this order has automated shipping settings generated by
            Amazon. This order could be identified as an SSA order.
        AutomatedCarrier:
          type: string
          description: Auto-generated carrier for SSA orders.
        AutomatedShipMethod:
          type: string
          description: Auto-generated ship method for SSA orders.
      description: >-
        Contains information regarding the Shipping Settings Automation program,
        such as whether the order's shipping settings were generated
        automatically, and what those settings are.
    v0_BuyerRequestedCancel:
      type: object
      properties:
        IsBuyerRequestedCancel:
          type: boolean
          description: When true, the buyer has requested cancellation.
        BuyerCancelReason:
          type: string
          description: The reason that the buyer requested cancellation.
      description: Information about whether or not a buyer requested cancellation.
    v0_EasyShipShipmentStatus:
      type: string
      description: >-
        The status of the Amazon Easy Ship order. This property is included only
        for Amazon Easy Ship orders.
      enum:
        - PendingSchedule
        - PendingPickUp
        - PendingDropOff
        - LabelCanceled
        - PickedUp
        - DroppedOff
        - AtOriginFC
        - AtDestinationFC
        - Delivered
        - RejectedByBuyer
        - Undeliverable
        - ReturningToSeller
        - ReturnedToSeller
        - Lost
        - OutForDelivery
        - Damaged
      x-docgen-enum-table-extension:
        - value: PendingSchedule
          description: The package is awaiting the schedule for pick-up.
        - value: PendingPickUp
          description: Amazon has not yet picked up the package from the seller.
        - value: PendingDropOff
          description: The seller will deliver the package to the carrier.
        - value: LabelCanceled
          description: The seller canceled the pickup.
        - value: PickedUp
          description: Amazon has picked up the package from the seller.
        - value: DroppedOff
          description: The package was delivered to the carrier by the seller.
        - value: AtOriginFC
          description: The package is at the origin fulfillment center.
        - value: AtDestinationFC
          description: The package is at the destination fulfillment center.
        - value: Delivered
          description: The package has been delivered.
        - value: RejectedByBuyer
          description: The package has been rejected by the buyer.
        - value: Undeliverable
          description: The package cannot be delivered.
        - value: ReturningToSeller
          description: The package was not delivered and is being returned to the seller.
        - value: ReturnedToSeller
          description: The package was not delivered and was returned to the seller.
        - value: Lost
          description: The package is lost.
        - value: OutForDelivery
          description: The package is out for delivery.
        - value: Damaged
          description: The package was damaged by the carrier.
    v0_ElectronicInvoiceStatus:
      type: string
      description: The status of the electronic invoice.
      enum:
        - NotRequired
        - NotFound
        - Processing
        - Errored
        - Accepted
      x-docgen-enum-table-extension:
        - value: NotRequired
          description: The order does not require an electronic invoice to be uploaded.
        - value: NotFound
          description: The order requires an electronic invoice but it is not uploaded.
        - value: Processing
          description: The required electronic invoice was uploaded and is processing.
        - value: Errored
          description: The uploaded electronic invoice was not accepted.
        - value: Accepted
          description: The uploaded electronic invoice was accepted.
    v0_ConfirmShipmentRequest:
      required:
        - marketplaceId
        - packageDetail
      type: object
      properties:
        packageDetail:
          $ref: '#/components/schemas/v0_PackageDetail'
        codCollectionMethod:
          type: string
          description: 'The cod collection method, support in JP only. '
          enum:
            - DirectPayment
        marketplaceId:
          $ref: '#/components/schemas/v0_MarketplaceId'
      description: The request schema for an shipment confirmation.
    v0_ConfirmShipmentErrorResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
      description: The error response schema for an shipment confirmation.
    v0_PackageDetail:
      required:
        - carrierCode
        - orderItems
        - packageReferenceId
        - shipDate
        - trackingNumber
      type: object
      properties:
        packageReferenceId:
          $ref: '#/components/schemas/v0_PackageReferenceId'
        carrierCode:
          type: string
          description: >-
            Identifies the carrier that will deliver the package. This field is
            required for all marketplaces, see
            [reference](https://developer-docs.amazon.com/sp-api/changelog/carriercode-value-required-in-shipment-confirmations-for-br-mx-ca-sg-au-in-jp-marketplaces).
        carrierName:
          type: string
          description: >-
            Carrier Name that will deliver the package. Required when
            carrierCode is "Others" 
        shippingMethod:
          type: string
          description: Ship method to be used for shipping the order.
        trackingNumber:
          type: string
          description: >-
            The tracking number used to obtain tracking and delivery
            information.
        shipDate:
          type: string
          description: >-
            The shipping date for the package. Must be in ISO-8601 date/time
            format.
          format: date-time
        shipFromSupplySourceId:
          type: string
          description: The unique identifier of the supply source.
        orderItems:
          $ref: '#/components/schemas/v0_ConfirmShipmentOrderItemsList'
      description: Properties of packages
    v0_ConfirmShipmentOrderItemsList:
      type: array
      description: A list of order items.
      items:
        $ref: '#/components/schemas/v0_ConfirmShipmentOrderItem'
    v0_ConfirmShipmentOrderItem:
      required:
        - orderItemId
        - quantity
      type: object
      properties:
        orderItemId:
          type: string
          description: The unique identifier of the order item.
        quantity:
          type: integer
          description: The quantity of the item.
        transparencyCodes:
          $ref: '#/components/schemas/v0_TransparencyCodeList'
      description: A single order item.
    v0_TransparencyCodeList:
      type: array
      description: A list of order items.
      items:
        $ref: '#/components/schemas/v0_TransparencyCode'
    v0_TransparencyCode:
      type: string
      description: The Transparency code associated with the item.
    v0_PackageReferenceId:
      type: string
      description: >-
        A seller-supplied identifier that uniquely identifies a package within
        the scope of an order. Only positive numeric values are supported.
    v0_GetMyFeesEstimateRequest:
      type: object
      properties:
        FeesEstimateRequest:
          $ref: '#/components/schemas/v0_FeesEstimateRequest'
      description: Request schema.
    v0_GetMyFeesEstimatesRequest:
      type: array
      description: Request for estimated fees for a list of products.
      items:
        $ref: '#/components/schemas/v0_FeesEstimateByIdRequest'
    v0_FeesEstimateByIdRequest:
      required:
        - IdType
        - IdValue
      type: object
      properties:
        FeesEstimateRequest:
          $ref: '#/components/schemas/v0_FeesEstimateRequest'
        IdType:
          $ref: '#/components/schemas/v0_IdType'
        IdValue:
          type: string
          description: The item identifier.
      description: >-
        A product, marketplace, and proposed price used to request estimated
        fees.
    v0_FeesEstimateRequest:
      required:
        - Identifier
        - MarketplaceId
        - PriceToEstimateFees
      type: object
      properties:
        MarketplaceId:
          type: string
          description: A marketplace identifier.
        IsAmazonFulfilled:
          type: boolean
          description: When true, the offer is fulfilled by Amazon.
        PriceToEstimateFees:
          $ref: '#/components/schemas/v0_PriceToEstimateFees'
        Identifier:
          type: string
          description: A unique identifier provided by the caller to track this request.
        OptionalFulfillmentProgram:
          $ref: '#/components/schemas/v0_OptionalFulfillmentProgram'
      description: >-
        A product, marketplace, and proposed price used to request estimated
        fees.
    v0_GetMyFeesEstimateResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v0_GetMyFeesEstimateResult'
        errors:
          $ref: '#/components/schemas/v0_ErrorList'
    v0_GetMyFeesEstimateResult:
      type: object
      properties:
        FeesEstimateResult:
          $ref: '#/components/schemas/v0_FeesEstimateResult'
      description: Response schema.
    v0_GetMyFeesEstimatesResponse:
      type: array
      description: Estimated fees for a list of products.
      items:
        $ref: '#/components/schemas/v0_FeesEstimateResult'
    v0_Points:
      type: object
      properties:
        PointsNumber:
          type: integer
          format: int32
        PointsMonetaryValue:
          $ref: '#/components/schemas/v0_MoneyType'
    v0_GetMyFeesEstimatesErrorList:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/v0_Error'
      description: A list of error responses returned when a request is unsuccessful.
    v0_FeesEstimateResult:
      type: object
      properties:
        Status:
          type: string
          description: >-
            The status of the fee request. Possible values: Success,
            ClientError, ServiceError.
        FeesEstimateIdentifier:
          $ref: '#/components/schemas/v0_FeesEstimateIdentifier'
        FeesEstimate:
          $ref: '#/components/schemas/v0_FeesEstimate'
        Error:
          $ref: '#/components/schemas/v0_FeesEstimateError'
      description: An item identifier and the estimated fees for the item.
    v0_FeesEstimateIdentifier:
      type: object
      properties:
        MarketplaceId:
          type: string
          description: A marketplace identifier.
        SellerId:
          type: string
          description: The seller identifier.
        IdType:
          $ref: '#/components/schemas/v0_IdType'
        IdValue:
          type: string
          description: The item identifier.
        IsAmazonFulfilled:
          type: boolean
          description: When true, the offer is fulfilled by Amazon.
        PriceToEstimateFees:
          $ref: '#/components/schemas/v0_PriceToEstimateFees'
        SellerInputIdentifier:
          type: string
          description: A unique identifier provided by the caller to track this request.
        OptionalFulfillmentProgram:
          $ref: '#/components/schemas/v0_OptionalFulfillmentProgram'
      description: >-
        An item identifier, marketplace, time of request, and other details that
        identify an estimate.
    v0_PriceToEstimateFees:
      required:
        - ListingPrice
      type: object
      properties:
        ListingPrice:
          $ref: '#/components/schemas/v0_MoneyType'
        Shipping:
          $ref: '#/components/schemas/v0_MoneyType'
        Points:
          $ref: '#/components/schemas/v0_Points'
      description: Price information for an item, used to estimate fees.
    v0_FeesEstimate:
      required:
        - TimeOfFeesEstimation
      type: object
      properties:
        TimeOfFeesEstimation:
          type: string
          description: >-
            The time at which the fees were estimated. This defaults to the time
            the request is made.
          format: date-time
        TotalFeesEstimate:
          $ref: '#/components/schemas/v0_MoneyType'
        FeeDetailList:
          $ref: '#/components/schemas/v0_FeeDetailList'
      description: The total estimated fees for an item and a list of details.
    v0_FeeDetailList:
      type: array
      description: A list of other fees that contribute to a given fee.
      items:
        $ref: '#/components/schemas/v0_FeeDetail'
    v0_FeesEstimateError:
      required:
        - Code
        - Detail
        - Message
        - Type
      type: object
      properties:
        Type:
          type: string
          description: >-
            An error type, identifying either the receiver or the sender as the
            originator of the error.
        Code:
          type: string
          description: An error code that identifies the type of error that occurred.
        Message:
          type: string
          description: A message that describes the error condition.
        Detail:
          $ref: '#/components/schemas/v0_FeesEstimateErrorDetail'
      description: An unexpected error occurred during this operation.
    v0_FeesEstimateErrorDetail:
      type: array
      description: >-
        Additional information that can help the caller understand or fix the
        issue.
      items:
        type: object
        properties: {}
    v0_FeeDetail:
      required:
        - FeeAmount
        - FeeType
        - FinalFee
      type: object
      properties:
        FeeType:
          type: string
          description: The type of fee charged to a seller.
        FeeAmount:
          $ref: '#/components/schemas/v0_MoneyType'
        FeePromotion:
          $ref: '#/components/schemas/v0_MoneyType'
        TaxAmount:
          $ref: '#/components/schemas/v0_MoneyType'
        FinalFee:
          $ref: '#/components/schemas/v0_MoneyType'
        IncludedFeeDetailList:
          $ref: '#/components/schemas/v0_IncludedFeeDetailList'
      description: The type of fee, fee amount, and other details.
    v0_IncludedFeeDetailList:
      type: array
      description: A list of other fees that contribute to a given fee.
      items:
        $ref: '#/components/schemas/v0_IncludedFeeDetail'
    v0_IncludedFeeDetail:
      required:
        - FeeAmount
        - FeeType
        - FinalFee
      type: object
      properties:
        FeeType:
          type: string
          description: The type of fee charged to a seller.
        FeeAmount:
          $ref: '#/components/schemas/v0_MoneyType'
        FeePromotion:
          $ref: '#/components/schemas/v0_MoneyType'
        TaxAmount:
          $ref: '#/components/schemas/v0_MoneyType'
        FinalFee:
          $ref: '#/components/schemas/v0_MoneyType'
      description: The type of fee, fee amount, and other details.
    v0_MoneyType:
      type: object
      properties:
        CurrencyCode:
          type: string
          description: The currency code in ISO 4217 format.
        Amount:
          type: number
          description: The monetary value.
    v0_OptionalFulfillmentProgram:
      type: string
      description: >-
        An optional enrollment program to return the estimated fees when the
        offer is fulfilled by Amazon (IsAmazonFulfilled is set to true).
      enum:
        - FBA_CORE
        - FBA_SNL
        - FBA_EFN
      x-docgen-enum-table-extension:
        - value: FBA_CORE
          description: >-
            Returns the standard Amazon fulfillment fees for the offer. This is
            the default.
        - value: FBA_SNL
          description: >-
            Returns the FBA Small and Light (SNL) fees for the offer. The SNL
            program offers reduced fulfillment costs on qualified items. To
            check item eligibility for the SNL program, use the
            getSmallAndLightEligibilityBySellerSKU operation of the FBA Small
            And Light API.
        - value: FBA_EFN
          description: >-
            Returns the cross-border European Fulfillment Network fees across EU
            countries for the offer.
    v0_IdType:
      type: string
      description: The type of product identifier used in a `FeesEstimateByIdRequest`.
      enum:
        - ASIN
        - SellerSKU
      x-docgen-enum-table-extension:
        - value: ASIN
          description: An Amazon Standard Identification Number (ASIN) of a listings item.
        - value: SellerSKU
          description: A selling partner provided identifier for an Amazon listing.
    2022-05-01_GetFeaturedOfferExpectedPriceBatchRequest:
      type: object
      properties:
        requests:
          $ref: >-
            #/components/schemas/2022-05-01_FeaturedOfferExpectedPriceRequestList
      description: The request body for the getFeaturedOfferExpectedPriceBatch operation.
    2022-05-01_FeaturedOfferExpectedPriceRequestList:
      minItems: 1
      type: array
      description: A batched list of featured offer expected price requests.
      items:
        $ref: '#/components/schemas/2022-05-01_FeaturedOfferExpectedPriceRequest'
    2022-05-01_FeaturedOfferExpectedPriceRequest:
      description: >-
        An individual featured offer expected price request for a particular
        SKU.
      allOf:
        - $ref: '#/components/schemas/2022-05-01_BatchRequest'
        - $ref: >-
            #/components/schemas/2022-05-01_FeaturedOfferExpectedPriceRequestParams
    2022-05-01_FeaturedOfferExpectedPriceRequestParams:
      required:
        - marketplaceId
        - sku
      type: object
      properties:
        marketplaceId:
          $ref: '#/components/schemas/2022-05-01_MarketplaceId'
        sku:
          $ref: '#/components/schemas/2022-05-01_Sku'
      description: The parameters for an individual request.
    2022-05-01_GetFeaturedOfferExpectedPriceBatchResponse:
      type: object
      properties:
        responses:
          $ref: >-
            #/components/schemas/2022-05-01_FeaturedOfferExpectedPriceResponseList
      description: >-
        The response schema for the getFeaturedOfferExpectedPriceBatch
        operation.
    2022-05-01_FeaturedOfferExpectedPriceResponseList:
      minItems: 1
      type: array
      description: A batched list of featured offer expected price responses.
      items:
        $ref: '#/components/schemas/2022-05-01_FeaturedOfferExpectedPriceResponse'
    2022-05-01_FeaturedOfferExpectedPriceResponse:
      allOf:
        - $ref: '#/components/schemas/2022-05-01_BatchResponse'
        - required:
            - request
          type: object
          properties:
            request:
              $ref: >-
                #/components/schemas/2022-05-01_FeaturedOfferExpectedPriceRequestParams
            body:
              $ref: >-
                #/components/schemas/2022-05-01_FeaturedOfferExpectedPriceResponseBody
    2022-05-01_Errors:
      required:
        - errors
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/2022-05-01_ErrorList'
      description: A list of error responses returned when a request is unsuccessful.
    2022-05-01_FeaturedOfferExpectedPriceResponseBody:
      required:
        - offerIdentifier
      type: object
      properties:
        offerIdentifier:
          $ref: '#/components/schemas/2022-05-01_OfferIdentifier'
        featuredOfferExpectedPriceResults:
          $ref: '#/components/schemas/2022-05-01_FeaturedOfferExpectedPriceResultList'
        errors:
          $ref: '#/components/schemas/2022-05-01_ErrorList'
      description: The featured offer expected price response data for a requested SKU.
    2022-05-01_FeaturedOfferExpectedPriceResultList:
      type: array
      description: A list of featured offer expected price results for the requested offer.
      items:
        $ref: '#/components/schemas/2022-05-01_FeaturedOfferExpectedPriceResult'
    2022-05-01_FeaturedOfferExpectedPriceResult:
      required:
        - resultStatus
      type: object
      properties:
        featuredOfferExpectedPrice:
          $ref: '#/components/schemas/2022-05-01_FeaturedOfferExpectedPrice'
        resultStatus:
          type: string
          description: >-
            The status of the featured offer expected price computation.
            Possible values include VALID_FOEP, NO_COMPETING_OFFER,
            OFFER_NOT_ELIGIBLE, OFFER_NOT_FOUND.
        competingFeaturedOffer:
          $ref: '#/components/schemas/2022-05-01_FeaturedOffer'
        currentFeaturedOffer:
          $ref: '#/components/schemas/2022-05-01_FeaturedOffer'
      description: The featured offer expected price result data for the requested offer.
    2022-05-01_FeaturedOfferExpectedPrice:
      required:
        - listingPrice
      type: object
      properties:
        listingPrice:
          $ref: '#/components/schemas/2022-05-01_MoneyType'
        points:
          $ref: '#/components/schemas/2022-05-01_Points'
      description: The item price at or below which the target offer may be featured.
    2022-05-01_FeaturedOffer:
      required:
        - offerIdentifier
      type: object
      properties:
        offerIdentifier:
          $ref: '#/components/schemas/2022-05-01_OfferIdentifier'
        condition:
          $ref: '#/components/schemas/2022-05-01_Condition'
        price:
          $ref: '#/components/schemas/2022-05-01_Price'
    2022-05-01_HttpHeaders:
      type: object
      additionalProperties:
        type: string
      description: >-
        A mapping of additional HTTP headers to send/receive for an individual
        request within a batch.
    2022-05-01_HttpStatusLine:
      type: object
      properties:
        statusCode:
          maximum: 599
          minimum: 100
          type: integer
          description: The HTTP response Status-Code.
        reasonPhrase:
          type: string
          description: The HTTP response Reason-Phase.
      description: >-
        The HTTP status line associated with the response to an individual
        request within a batch. For more information, consult [RFC
        2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html).
    2022-05-01_HttpBody:
      type: object
      additionalProperties:
        type: object
      description: >-
        Additional HTTP body information associated with an individual request
        within a batch.
    2022-05-01_HttpMethod:
      type: string
      description: The HTTP method associated with an individual request within a batch.
      enum:
        - GET
        - PUT
        - PATCH
        - DELETE
        - POST
      x-docgen-enum-table-extension:
        - value: GET
          description: GET
        - value: PUT
          description: PUT
        - value: PATCH
          description: PATCH
        - value: DELETE
          description: DELETE
        - value: POST
          description: POST
    2022-05-01_BatchRequest:
      required:
        - method
        - uri
      type: object
      properties:
        uri:
          type: string
          description: >-
            The URI associated with an individual request within a batch. For
            FeaturedOfferExpectedPrice, this should be
            '/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice'.
        method:
          $ref: '#/components/schemas/2022-05-01_HttpMethod'
        body:
          $ref: '#/components/schemas/2022-05-01_HttpBody'
        headers:
          $ref: '#/components/schemas/2022-05-01_HttpHeaders'
      description: The common properties for individual requests within a batch.
    2022-05-01_BatchResponse:
      required:
        - headers
        - status
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/2022-05-01_HttpHeaders'
        status:
          $ref: '#/components/schemas/2022-05-01_HttpStatusLine'
      description: >-
        The common properties for responses to individual requests within a
        batch.
    2022-05-01_OfferIdentifier:
      required:
        - asin
        - marketplaceId
      type: object
      properties:
        marketplaceId:
          $ref: '#/components/schemas/2022-05-01_MarketplaceId'
        sellerId:
          type: string
          description: The seller identifier for the offer.
        sku:
          type: string
          description: >-
            The seller stock keeping unit (SKU) of the item. This will only be
            present for the target offer, which belongs to the requesting
            seller.
        asin:
          $ref: '#/components/schemas/2022-05-01_Asin'
        fulfillmentType:
          $ref: '#/components/schemas/2022-05-01_FulfillmentType'
      description: Identifies an offer from a particular seller on an ASIN.
    2022-05-01_MoneyType:
      type: object
      properties:
        currencyCode:
          type: string
          description: The currency code in ISO 4217 format.
        amount:
          type: number
          description: The monetary value.
    2022-05-01_Price:
      required:
        - listingPrice
      type: object
      properties:
        listingPrice:
          $ref: '#/components/schemas/2022-05-01_MoneyType'
        shippingPrice:
          $ref: '#/components/schemas/2022-05-01_MoneyType'
        points:
          $ref: '#/components/schemas/2022-05-01_Points'
    2022-05-01_Points:
      type: object
      properties:
        pointsNumber:
          type: integer
          description: The number of points.
          format: int32
        pointsMonetaryValue:
          $ref: '#/components/schemas/2022-05-01_MoneyType'
    2022-05-01_FulfillmentType:
      type: string
      description: >-
        Indicates whether the item is fulfilled by Amazon or by the seller
        (merchant).
      enum:
        - AFN
        - MFN
      x-docgen-enum-table-extension:
        - value: AFN
          description: Fulfilled by Amazon.
        - value: MFN
          description: Fulfilled by the seller.
    2022-05-01_MarketplaceId:
      type: string
      description: >-
        A marketplace identifier. Specifies the marketplace for which data is
        returned.
    2022-05-01_Sku:
      type: string
      description: The seller SKU of the item.
    2022-05-01_Condition:
      type: string
      description: The condition of the item.
      enum:
        - New
        - Used
        - Collectible
        - Refurbished
        - Club
      x-docgen-enum-table-extension:
        - value: New
          description: New
        - value: Used
          description: Used
        - value: Collectible
          description: Collectible
        - value: Refurbished
          description: Refurbished
        - value: Club
          description: Club
    2022-05-01_Asin:
      type: string
      description: The Amazon Standard Identification Number (ASIN) of the item.
    2022-05-01_ErrorList:
      type: array
      description: A list of error responses returned when a request is unsuccessful.
      items:
        $ref: '#/components/schemas/2022-05-01_Error'
    2022-05-01_Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: A message that describes the error condition.
        details:
          type: string
          description: >-
            Additional information that can help the caller understand or fix
            the issue.
      description: Error response returned when the request is unsuccessful.
    2021-06-30_ErrorList:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/2021-06-30_Error'
      description: A list of error responses returned when a request is unsuccessful.
    2021-06-30_Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: >-
            A message that describes the error condition in a human-readable
            form.
        details:
          type: string
          description: >-
            Additional details that can help the caller understand or fix the
            issue.
      description: Error response returned when the request is unsuccessful.
    2021-06-30_Report:
      required:
        - createdTime
        - processingStatus
        - reportId
        - reportType
      type: object
      properties:
        marketplaceIds:
          type: array
          description: A list of marketplace identifiers for the report.
          items:
            type: string
        reportId:
          type: string
          description: >-
            The identifier for the report. This identifier is unique only in
            combination with a seller ID.
        reportType:
          type: string
          description: >-
            The report type. Refer to [Report Type
            Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values)
            for more information.
        dataStartTime:
          type: string
          description: >-
            The start of a date and time range used for selecting the data to
            report.
          format: date-time
        dataEndTime:
          type: string
          description: >-
            The end of a date and time range used for selecting the data to
            report.
          format: date-time
        reportScheduleId:
          type: string
          description: >-
            The identifier of the report schedule that created this report (if
            any). This identifier is unique only in combination with a seller
            ID.
        createdTime:
          type: string
          description: The date and time when the report was created.
          format: date-time
        processingStatus:
          type: string
          description: The processing status of the report.
          enum:
            - CANCELLED
            - DONE
            - FATAL
            - IN_PROGRESS
            - IN_QUEUE
          x-docgen-enum-table-extension:
            - value: CANCELLED
              description: >-
                The report was cancelled. There are two ways a report can be
                cancelled: an explicit cancellation request before the report
                starts processing, or an automatic cancellation if there is no
                data to return.
            - value: DONE
              description: The report has completed processing.
            - value: FATAL
              description: The report was aborted due to a fatal error.
            - value: IN_PROGRESS
              description: The report is being processed.
            - value: IN_QUEUE
              description: >-
                The report has not yet started processing. It may be waiting for
                another IN_PROGRESS report.
        processingStartTime:
          type: string
          description: >-
            The date and time when the report processing started, in ISO 8601
            date time format.
          format: date-time
        processingEndTime:
          type: string
          description: >-
            The date and time when the report processing completed, in ISO 8601
            date time format.
          format: date-time
        reportDocumentId:
          type: string
          description: >-
            The identifier for the report document. Pass this into the
            getReportDocument operation to get the information you will need to
            retrieve the report document's contents.
      description: Detailed information about the report.
    2021-06-30_ReportList:
      type: array
      description: A list of reports.
      items:
        $ref: '#/components/schemas/2021-06-30_Report'
    2021-06-30_CreateReportScheduleSpecification:
      required:
        - marketplaceIds
        - period
        - reportType
      type: object
      properties:
        reportType:
          type: string
          description: >-
            The report type. Refer to [Report Type
            Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values)
            for more information.
        marketplaceIds:
          maxItems: 25
          minItems: 1
          type: array
          description: A list of marketplace identifiers for the report schedule.
          items:
            type: string
        reportOptions:
          $ref: '#/components/schemas/2021-06-30_ReportOptions'
        period:
          type: string
          description: >-
            One of a set of predefined ISO 8601 periods that specifies how often
            a report should be created.
          enum:
            - PT5M
            - PT15M
            - PT30M
            - PT1H
            - PT2H
            - PT4H
            - PT8H
            - PT12H
            - P1D
            - P2D
            - P3D
            - PT84H
            - P7D
            - P14D
            - P15D
            - P18D
            - P30D
            - P1M
          x-docgen-enum-table-extension:
            - value: PT5M
              description: 5 minutes
            - value: PT15M
              description: 15 minutes
            - value: PT30M
              description: 30 minutes
            - value: PT1H
              description: 1 hour
            - value: PT2H
              description: 2 hours
            - value: PT4H
              description: 4 hours
            - value: PT8H
              description: 8 hours
            - value: PT12H
              description: 12 hours
            - value: P1D
              description: 1 day
            - value: P2D
              description: 2 days
            - value: P3D
              description: 3 days
            - value: PT84H
              description: 84 hours
            - value: P7D
              description: 7 days
            - value: P14D
              description: 14 days
            - value: P15D
              description: 15 days
            - value: P18D
              description: 18 days
            - value: P30D
              description: 30 days
            - value: P1M
              description: 1 month
        nextReportCreationTime:
          type: string
          description: >-
            The date and time when the schedule will create its next report, in
            ISO 8601 date time format.
          format: date-time
    2021-06-30_CreateReportSpecification:
      required:
        - marketplaceIds
        - reportType
      type: object
      properties:
        reportOptions:
          $ref: '#/components/schemas/2021-06-30_ReportOptions'
        reportType:
          type: string
          description: >-
            The report type. Refer to [Report Type
            Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values)
            for more information.
        dataStartTime:
          type: string
          description: >-
            The start of a date and time range, in ISO 8601 date time format,
            used for selecting the data to report. The default is now. The value
            must be prior to or equal to the current date and time. Not all
            report types make use of this.
          format: date-time
        dataEndTime:
          type: string
          description: >-
            The end of a date and time range, in ISO 8601 date time format, used
            for selecting the data to report. The default is now. The value must
            be prior to or equal to the current date and time. Not all report
            types make use of this.
          format: date-time
        marketplaceIds:
          maxItems: 25
          minItems: 1
          type: array
          description: >-
            A list of marketplace identifiers. The report document's contents
            will contain data for all of the specified marketplaces, unless the
            report type indicates otherwise.
          items:
            type: string
      description: Information required to create the report.
    2021-06-30_ReportOptions:
      type: object
      additionalProperties:
        type: string
      description: Additional information passed to reports. This varies by report type.
    2021-06-30_ReportSchedule:
      required:
        - period
        - reportScheduleId
        - reportType
      type: object
      properties:
        reportScheduleId:
          type: string
          description: >-
            The identifier for the report schedule. This identifier is unique
            only in combination with a seller ID.
        reportType:
          type: string
          description: >-
            The report type. Refer to [Report Type
            Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values)
            for more information.
        marketplaceIds:
          type: array
          description: >-
            A list of marketplace identifiers. The report document's contents
            will contain data for all of the specified marketplaces, unless the
            report type indicates otherwise.
          items:
            type: string
        reportOptions:
          $ref: '#/components/schemas/2021-06-30_ReportOptions'
        period:
          type: string
          description: >-
            An ISO 8601 period value that indicates how often a report should be
            created.
        nextReportCreationTime:
          type: string
          description: >-
            The date and time when the schedule will create its next report, in
            ISO 8601 date time format.
          format: date-time
      description: Detailed information about a report schedule.
    2021-06-30_ReportScheduleList:
      required:
        - reportSchedules
      type: object
      properties:
        reportSchedules:
          type: array
          items:
            $ref: '#/components/schemas/2021-06-30_ReportSchedule'
      description: A list of report schedules.
    2021-06-30_CreateReportResponse:
      required:
        - reportId
      type: object
      properties:
        reportId:
          type: string
          description: >-
            The identifier for the report. This identifier is unique only in
            combination with a seller ID.
      description: Response schema.
    2021-06-30_GetReportsResponse:
      required:
        - reports
      type: object
      properties:
        reports:
          $ref: '#/components/schemas/2021-06-30_ReportList'
        nextToken:
          type: string
          description: >-
            Returned when the number of results exceeds pageSize. To get the
            next page of results, call getReports with this token as the only
            parameter.
      description: The response for the getReports operation.
    2021-06-30_CreateReportScheduleResponse:
      required:
        - reportScheduleId
      type: object
      properties:
        reportScheduleId:
          type: string
          description: >-
            The identifier for the report schedule. This identifier is unique
            only in combination with a seller ID.
      description: Response schema.
    2021-06-30_ReportDocument:
      required:
        - reportDocumentId
        - url
      type: object
      properties:
        reportDocumentId:
          type: string
          description: >-
            The identifier for the report document. This identifier is unique
            only in combination with a seller ID.
        url:
          type: string
          description: >-
            A presigned URL for the report document. If `compressionAlgorithm`
            is not returned, you can download the report directly from this URL.
            This URL expires after 5 minutes.
        compressionAlgorithm:
          type: string
          description: >-
            If the report document contents have been compressed, the
            compression algorithm used is returned in this property and you must
            decompress the report when you download. Otherwise, you can download
            the report directly. Refer to [Step 2. Download the
            report](doc:reports-api-v2021-06-30-retrieve-a-report#step-2-download-the-report)
            in the use case guide, where sample code is provided.
          enum:
            - GZIP
          x-docgen-enum-table-extension:
            - value: GZIP
              description: The gzip compression algorithm.
      description: Information required for the report document.
    v1_GetOrderMetricsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_OrderMetricsList'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the getOrderMetrics operation.
    v1_OrderMetricsList:
      type: array
      description: A set of order metrics, each scoped to a particular time interval.
      items:
        $ref: '#/components/schemas/v1_OrderMetricsInterval'
    v1_OrderMetricsInterval:
      required:
        - averageUnitPrice
        - interval
        - orderCount
        - orderItemCount
        - totalSales
        - unitCount
      type: object
      properties:
        interval:
          type: string
          description: >-
            The interval of time based on requested granularity (ex. Hour, Day,
            etc.) If this is the first or the last interval from the list, it
            might contain incomplete data if the requested interval doesn't
            align with the requested granularity (ex. request interval
            2018-09-01T02:00:00Z--2018-09-04T19:00:00Z and granularity day will
            result in Sept 1st UTC day and Sept 4th UTC days having partial
            data).
        unitCount:
          type: integer
          description: The number of units in orders based on the specified filters.
        orderItemCount:
          type: integer
          description: The number of order items based on the specified filters.
        orderCount:
          type: integer
          description: The number of orders based on the specified filters.
        averageUnitPrice:
          $ref: '#/components/schemas/v1_Money'
        totalSales:
          $ref: '#/components/schemas/v1_Money'
      description: Contains order metrics.
    v1_Money:
      required:
        - amount
        - currencyCode
      type: object
      properties:
        currencyCode:
          type: string
          description: Three-digit currency code. In ISO 4217 format.
        amount:
          $ref: '#/components/schemas/v1_Decimal'
      description: The currency type and the amount.
    v1_Decimal:
      type: string
      description: >-
        A decimal number with no loss of precision. Useful when precision loss
        is unnaceptable, as with currencies. Follows RFC7159 for number
        representation.
    v1_MarketplaceParticipation:
      required:
        - marketplace
        - participation
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/v1_Marketplace'
        participation:
          $ref: '#/components/schemas/v1_Participation'
    v1_MarketplaceParticipationList:
      type: array
      description: List of marketplace participations.
      items:
        $ref: '#/components/schemas/v1_MarketplaceParticipation'
    v1_GetMarketplaceParticipationsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_MarketplaceParticipationList'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the getMarketplaceParticipations operation.
    v1_Marketplace:
      required:
        - countryCode
        - defaultCurrencyCode
        - defaultLanguageCode
        - domainName
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: The encrypted marketplace value.
        name:
          type: string
          description: Marketplace name.
        countryCode:
          pattern: ^([A-Z]{2})$
          type: string
          description: The ISO 3166-1 alpha-2 format country code of the marketplace.
        defaultCurrencyCode:
          type: string
          description: The ISO 4217 format currency code of the marketplace.
        defaultLanguageCode:
          type: string
          description: The ISO 639-1 format language code of the marketplace.
        domainName:
          type: string
          description: The domain name of the marketplace.
      description: >-
        Detailed information about an Amazon market where a seller can list
        items for sale and customers can view and purchase items.
    v1_Participation:
      required:
        - hasSuspendedListings
        - isParticipating
      type: object
      properties:
        isParticipating:
          type: boolean
        hasSuspendedListings:
          type: boolean
          description: >-
            Specifies if the seller has suspended listings. True if the seller
            Listing Status is set to Inactive, otherwise False.
      description: Detailed information that is specific to a seller in a Marketplace.
    v1_GetServiceJobByServiceJobIdResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_ServiceJob'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response schema for the `getServiceJobByServiceJobId` operation.
    v1_CancelServiceJobByServiceJobIdResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: Response schema for the `cancelServiceJobByServiceJobId` operation.
    v1_CompleteServiceJobByServiceJobIdResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: Response schema for the `completeServiceJobByServiceJobId` operation.
    v1_GetServiceJobsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_JobListing'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: Response schema for the `getServiceJobs` operation.
    v1_SetAppointmentResponse:
      type: object
      properties:
        appointmentId:
          $ref: '#/components/schemas/v1_AppointmentId'
        warnings:
          $ref: '#/components/schemas/v1_WarningList'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: >-
        Response schema for the `addAppointmentForServiceJobByServiceJobId` and
        `rescheduleAppointmentForServiceJobByServiceJobId` operations.
    v1_AssignAppointmentResourcesResponse:
      type: object
      properties:
        payload:
          type: object
          properties:
            warnings:
              $ref: '#/components/schemas/v1_WarningList'
          description: The payload for the `assignAppointmentResource` operation.
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: Response schema for the `assignAppointmentResources` operation.
    v1_AssignAppointmentResourcesRequest:
      required:
        - resources
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/v1_AppointmentResources'
      description: Request schema for the `assignAppointmentResources` operation.
    v1_JobListing:
      type: object
      properties:
        totalResultSize:
          type: integer
          description: Total result size of the query result.
        nextPageToken:
          type: string
          description: >-
            A generated string used to pass information to your next request. If
            `nextPageToken` is returned, pass the value of `nextPageToken` to
            the `pageToken` to get next results.
        previousPageToken:
          type: string
          description: >-
            A generated string used to pass information to your next request. If
            `previousPageToken` is returned, pass the value of
            `previousPageToken` to the `pageToken` to get previous page results.
        jobs:
          type: array
          description: List of job details for the given input.
          items:
            $ref: '#/components/schemas/v1_ServiceJob'
      description: The payload for the `getServiceJobs` operation.
    v1_ServiceJob:
      type: object
      properties:
        createTime:
          type: string
          description: The date and time of the creation of the job in ISO 8601 format.
          format: date-time
        serviceJobId:
          $ref: '#/components/schemas/v1_ServiceJobId'
        serviceJobStatus:
          type: string
          description: The status of the service job.
          enum:
            - NOT_SERVICED
            - CANCELLED
            - COMPLETED
            - PENDING_SCHEDULE
            - NOT_FULFILLABLE
            - HOLD
            - PAYMENT_DECLINED
          x-docgen-enum-table-extension:
            - value: NOT_SERVICED
              description: Indicates that the service for the service job is not complete.
            - value: CANCELLED
              description: Indicates that the service job is cancelled.
            - value: COMPLETED
              description: >-
                Indicates that the service is performed and the service job is
                closed successfully.
            - value: PENDING_SCHEDULE
              description: >-
                Indicates that an appointment for the service job has not been
                scheduled.
            - value: NOT_FULFILLABLE
              description: >-
                Indicates that the service job is not actionable due to an
                unexpected exception.
            - value: HOLD
              description: >-
                Indicates that the appointment time preference given by customer
                cannot be serviced by the service provider.
            - value: PAYMENT_DECLINED
              description: Indicates that the customer payment has been declined.
        scopeOfWork:
          $ref: '#/components/schemas/v1_ScopeOfWork'
        seller:
          $ref: '#/components/schemas/v1_Seller'
        serviceJobProvider:
          $ref: '#/components/schemas/v1_ServiceJobProvider'
        preferredAppointmentTimes:
          type: array
          description: >-
            A list of appointment windows preferred by the buyer. Included only
            if the buyer selected appointment windows when creating the order.
          items:
            $ref: '#/components/schemas/v1_AppointmentTime'
        appointments:
          type: array
          description: A list of appointments.
          items:
            $ref: '#/components/schemas/v1_Appointment'
        serviceOrderId:
          $ref: '#/components/schemas/v1_OrderId'
        marketplaceId:
          pattern: ^[A-Z0-9]*$
          type: string
          description: The marketplace identifier.
        storeId:
          maxLength: 100
          minLength: 1
          type: string
          description: The Amazon-defined identifier for the region scope.
        buyer:
          $ref: '#/components/schemas/v1_Buyer'
        associatedItems:
          type: array
          description: A list of items associated with the service job.
          items:
            $ref: '#/components/schemas/v1_AssociatedItem'
        serviceLocation:
          $ref: '#/components/schemas/v1_ServiceLocation'
      description: The job details of a service.
    v1_ServiceJobId:
      maxLength: 100
      minLength: 1
      type: string
      description: Amazon identifier for the service job.
    v1_OrderId:
      maxLength: 20
      minLength: 5
      type: string
      description: >-
        The Amazon-defined identifier for an order placed by the buyer, in 3-7-7
        format.
    v1_ScopeOfWork:
      type: object
      properties:
        asin:
          type: string
          description: The Amazon Standard Identification Number (ASIN) of the service job.
        title:
          type: string
          description: The title of the service job.
        quantity:
          type: integer
          description: The number of service jobs.
        requiredSkills:
          type: array
          description: A list of skills required to perform the job.
          items:
            type: string
      description: The scope of work for the order.
    v1_Seller:
      type: object
      properties:
        sellerId:
          pattern: ^[A-Z0-9]*$
          type: string
          description: The identifier of the seller of the service job.
      description: Information about the seller of the service job.
    v1_ServiceJobProvider:
      type: object
      properties:
        serviceJobProviderId:
          pattern: ^[A-Z0-9]*$
          type: string
          description: The identifier of the service job provider.
      description: Information about the service job provider.
    v1_Buyer:
      type: object
      properties:
        buyerId:
          pattern: ^[A-Z0-9]*$
          type: string
          description: The identifier of the buyer.
        name:
          type: string
          description: The name of the buyer.
        phone:
          type: string
          description: The phone number of the buyer.
        isPrimeMember:
          type: boolean
          description: When true, the service is for an Amazon Prime buyer.
      description: Information about the buyer.
    v1_AppointmentTime:
      required:
        - durationInMinutes
        - startTime
      type: object
      properties:
        startTime:
          type: string
          description: >-
            The date and time of the start of the appointment window in ISO 8601
            format.
          format: date-time
        durationInMinutes:
          minimum: 1
          type: integer
          description: The duration of the appointment window, in minutes.
      description: The time of the appointment window.
    v1_AppointmentId:
      maxLength: 100
      minLength: 5
      type: string
      description: The appointment identifier.
    v1_Appointment:
      type: object
      properties:
        appointmentId:
          $ref: '#/components/schemas/v1_AppointmentId'
        appointmentStatus:
          type: string
          description: The status of the appointment.
          enum:
            - ACTIVE
            - CANCELLED
            - COMPLETED
          x-docgen-enum-table-extension:
            - value: ACTIVE
              description: Indicates that an appointment is scheduled.
            - value: CANCELLED
              description: Indicates that the appointment is cancelled.
            - value: COMPLETED
              description: Indicates that the appointment is completed.
        appointmentTime:
          $ref: '#/components/schemas/v1_AppointmentTime'
        assignedTechnicians:
          minItems: 1
          type: array
          description: A list of technicians assigned to the service job.
          items:
            $ref: '#/components/schemas/v1_Technician'
        rescheduledAppointmentId:
          $ref: '#/components/schemas/v1_AppointmentId'
        poa:
          $ref: '#/components/schemas/v1_Poa'
      description: The details of an appointment.
    v1_Technician:
      type: object
      properties:
        technicianId:
          maxLength: 50
          minLength: 1
          type: string
          description: The technician identifier.
        name:
          type: string
          description: The name of the technician.
      description: >-
        A technician who is assigned to perform the service job in part or in
        full.
    v1_Poa:
      type: object
      properties:
        appointmentTime:
          $ref: '#/components/schemas/v1_AppointmentTime'
        technicians:
          minItems: 1
          type: array
          description: A list of technicians.
          items:
            $ref: '#/components/schemas/v1_Technician'
        uploadingTechnician:
          pattern: ^[A-Z0-9]*$
          type: string
          description: The identifier of the technician who uploaded the POA.
        uploadTime:
          type: string
          description: The date and time when the POA was uploaded in ISO 8601 format.
          format: date-time
        poaType:
          type: string
          description: The type of POA uploaded.
          enum:
            - NO_SIGNATURE_DUMMY_POS
            - CUSTOMER_SIGNATURE
            - DUMMY_RECEIPT
            - POA_RECEIPT
          x-docgen-enum-table-extension:
            - value: NO_SIGNATURE_DUMMY_POS
              description: >-
                Indicates that the type of proof of appointment uploaded is a
                dummy signature.
            - value: CUSTOMER_SIGNATURE
              description: >-
                Indicates that the type of proof of appointment uploaded is a
                customer signature.
            - value: DUMMY_RECEIPT
              description: >-
                Indicates that the type of proof of appointment uploaded is a
                dummy receipt.
            - value: POA_RECEIPT
              description: Indicates that the type of proof of appointment is a receipt.
      description: Proof of Appointment (POA) details.
    v1_AssociatedItem:
      type: object
      properties:
        asin:
          type: string
          description: The Amazon Standard Identification Number (ASIN) of the item.
        title:
          type: string
          description: The title of the item.
        quantity:
          type: integer
          description: The total number of items included in the order.
        orderId:
          $ref: '#/components/schemas/v1_OrderId'
        itemStatus:
          type: string
          description: The status of the item.
          enum:
            - ACTIVE
            - CANCELLED
            - SHIPPED
            - DELIVERED
          x-docgen-enum-table-extension:
            - value: ACTIVE
              description: Indicates the item is yet to be shipped.
            - value: CANCELLED
              description: Indicates the item has been cancelled.
            - value: SHIPPED
              description: Indicates the item is shipped but not delivered.
            - value: DELIVERED
              description: Indicates the item is delivered.
        brandName:
          type: string
          description: The brand name of the item.
        itemDelivery:
          $ref: '#/components/schemas/v1_ItemDelivery'
      description: Information about an item associated with the service job.
    v1_ItemDelivery:
      type: object
      properties:
        estimatedDeliveryDate:
          type: string
          description: >-
            The date and time of the latest Estimated Delivery Date (EDD) of all
            the items with an EDD. In ISO 8601 format.
          format: date-time
        itemDeliveryPromise:
          $ref: '#/components/schemas/v1_ItemDeliveryPromise'
      description: Delivery information for the item.
    v1_ItemDeliveryPromise:
      type: object
      properties:
        startTime:
          type: string
          description: >-
            The date and time of the start of the promised delivery window in
            ISO 8601 format.
          format: date-time
        endTime:
          type: string
          description: >-
            The date and time of the end of the promised delivery window in ISO
            8601 format.
          format: date-time
      description: Promised delivery information for the item.
    v1_ServiceLocation:
      type: object
      properties:
        serviceLocationType:
          type: string
          description: The location of the service job.
          enum:
            - IN_HOME
            - IN_STORE
            - ONLINE
          x-docgen-enum-table-extension:
            - value: IN_HOME
              description: >-
                Indicates the service for the service job is performed at the
                customers home address.
            - value: IN_STORE
              description: >-
                Indicates the service for the service job is performed at the
                service providers store.
            - value: ONLINE
              description: Indicates the service for the service job is performed remotely.
        address:
          $ref: '#/components/schemas/v1_Address'
      description: Information about the location of the service job.
    v1_Address:
      required:
        - addressLine1
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the person, business, or institution.
        addressLine1:
          type: string
          description: The first line of the address.
        addressLine2:
          type: string
          description: Additional address information, if required.
        addressLine3:
          type: string
          description: Additional address information, if required.
        city:
          type: string
          description: The city.
        county:
          type: string
          description: The county.
        district:
          type: string
          description: The district.
        stateOrRegion:
          type: string
          description: The state or region.
        postalCode:
          type: string
          description: >-
            The postal code. This can contain letters, digits, spaces, and/or
            punctuation.
        countryCode:
          type: string
          description: The two digit country code, in ISO 3166-1 alpha-2 format.
        phone:
          type: string
          description: The phone number.
      description: The shipping address for the service job.
    v1_AddAppointmentRequest:
      required:
        - appointmentTime
      type: object
      properties:
        appointmentTime:
          $ref: '#/components/schemas/v1_AppointmentTimeInput'
      description: Input for add appointment operation.
    v1_RescheduleAppointmentRequest:
      required:
        - appointmentTime
        - rescheduleReasonCode
      type: object
      properties:
        appointmentTime:
          $ref: '#/components/schemas/v1_AppointmentTimeInput'
        rescheduleReasonCode:
          $ref: '#/components/schemas/v1_RescheduleReasonCode'
      description: Input for rescheduled appointment operation.
    v1_AppointmentTimeInput:
      required:
        - startTime
      type: object
      properties:
        startTime:
          type: string
          description: >-
            The date, time in UTC for the start time of an appointment in ISO
            8601 format.
          format: date-time
        durationInMinutes:
          type: integer
          description: The duration of an appointment in minutes.
      description: The input appointment time details.
    v1_RescheduleReasonCode:
      type: string
      description: The appointment reschedule reason code.
    v1_WarningList:
      type: array
      description: >-
        A list of warnings returned in the sucessful execution response of an
        API request.
      items:
        $ref: '#/components/schemas/v1_Warning'
    v1_Warning:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: An warning code that identifies the type of warning that occurred.
        message:
          type: string
          description: >-
            A message that describes the warning condition in a human-readable
            form.
        details:
          type: string
          description: >-
            Additional details that can help the caller understand or address
            the warning.
      description: >-
        Warning returned when the request is successful, but there are important
        callouts based on which API clients should take defined actions.
    v1_RangeSlotCapacityErrors:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The error response schema for the `getRangeSlotCapacity` operation.
    v1_RangeSlotCapacity:
      type: object
      properties:
        resourceId:
          type: string
          description: Resource Identifier.
        capacities:
          type: array
          description: >-
            Array of range capacities where each entry is for a specific
            capacity type.
          items:
            $ref: '#/components/schemas/v1_RangeCapacity'
        nextPageToken:
          type: string
          description: Next page token, if there are more pages.
      description: Response schema for the `getRangeSlotCapacity` operation.
    v1_RangeCapacity:
      type: object
      properties:
        capacityType:
          $ref: '#/components/schemas/v1_CapacityType'
        slots:
          type: array
          description: Array of capacity slots in range slot format.
          items:
            $ref: '#/components/schemas/v1_RangeSlot'
      description: >-
        Range capacity entity where each entry has a capacity type and
        corresponding slots.
    v1_RangeSlot:
      type: object
      properties:
        startDateTime:
          type: string
          description: >-
            Start date time of slot in ISO 8601 format with precision of
            seconds.
          format: date-time
        endDateTime:
          type: string
          description: End date time of slot in ISO 8601 format with precision of seconds.
          format: date-time
        capacity:
          type: integer
          description: Capacity of the slot.
          format: int32
      description: Capacity slots represented in a format similar to availability rules.
    v1_FixedSlotCapacityErrors:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The error response schema for the `getFixedSlotCapacity` operation.
    v1_FixedSlotCapacity:
      type: object
      properties:
        resourceId:
          type: string
          description: Resource Identifier.
        slotDuration:
          multipleOf: 5
          type: number
          description: >-
            The duration of each slot which is returned. This value will be a
            multiple of 5 and fall in the following range: 5 <= `slotDuration`
            <= 360.
          format: int32
        capacities:
          type: array
          description: Array of capacity slots in fixed slot format.
          items:
            $ref: '#/components/schemas/v1_FixedSlot'
        nextPageToken:
          type: string
          description: Next page token, if there are more pages.
      description: Response schema for the `getFixedSlotCapacity` operation.
    v1_FixedSlot:
      type: object
      properties:
        startDateTime:
          type: string
          description: >-
            Start date time of slot in ISO 8601 format with precision of
            seconds.
          format: date-time
        scheduledCapacity:
          type: integer
          description: >-
            Scheduled capacity corresponding to the slot. This capacity
            represents the originally allocated capacity as per resource
            schedule.
          format: int32
        availableCapacity:
          type: integer
          description: >-
            Available capacity corresponding to the slot. This capacity
            represents the capacity available for allocation to reservations.
          format: int32
        encumberedCapacity:
          type: integer
          description: >-
            Encumbered capacity corresponding to the slot. This capacity
            represents the capacity allocated for Amazon
            Jobs/Appointments/Orders.
          format: int32
        reservedCapacity:
          type: integer
          description: >-
            Reserved capacity corresponding to the slot. This capacity
            represents the capacity made unavailable due to events like
            Breaks/Leaves/Lunch.
          format: int32
      description: >-
        In this slot format each slot only has the requested capacity types.
        This slot size is as specified by slot duration.
    v1_UpdateScheduleResponse:
      type: object
      properties:
        payload:
          type: array
          description: >-
            Contains the `UpdateScheduleRecords` for which the error/warning has
            occurred.
          items:
            $ref: '#/components/schemas/v1_UpdateScheduleRecord'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: Response schema for the `updateSchedule` operation.
    v1_SetAppointmentFulfillmentDataRequest:
      type: object
      properties:
        fulfillmentTime:
          $ref: '#/components/schemas/v1_FulfillmentTime'
        appointmentResources:
          $ref: '#/components/schemas/v1_AppointmentResources'
        fulfillmentDocuments:
          $ref: '#/components/schemas/v1_FulfillmentDocuments'
      description: Input for set appointment fulfillment data operation.
    v1_FulfillmentTime:
      type: object
      properties:
        startTime:
          type: string
          description: >-
            The date, time in UTC of the fulfillment start time in ISO 8601
            format.
          format: date-time
        endTime:
          type: string
          description: >-
            The date, time in UTC of the fulfillment end time in ISO 8601
            format.
          format: date-time
      description: Input for fulfillment time details
    v1_FulfillmentDocuments:
      type: array
      description: List of documents captured during service appointment fulfillment.
      items:
        $ref: '#/components/schemas/v1_FulfillmentDocument'
    v1_FulfillmentDocument:
      type: object
      properties:
        uploadDestinationId:
          type: string
          description: >-
            The identifier of the upload destination. Get this value by calling
            the `createServiceDocumentUploadDestination` operation of the
            Services API.
        contentSha256:
          type: string
          description: >-
            Sha256 hash of the file content. This value is used to determine if
            the file has been corrupted or tampered with during transit.
      description: >-
        Document that captured during service appointment fulfillment that
        portrays proof of completion
    v1_AppointmentResources:
      type: array
      description: >-
        List of resources that performs or performed job appointment
        fulfillment.
      items:
        $ref: '#/components/schemas/v1_AppointmentResource'
    v1_AppointmentResource:
      type: object
      properties:
        resourceId:
          type: string
          description: The resource identifier.
      description: The resource that performs or performed appointment fulfillment.
    v1_CreateReservationResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_CreateReservationRecord'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: Response schema for the `createReservation` operation.
    v1_UpdateReservationResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_UpdateReservationRecord'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: Response schema for the `updateReservation` operation.
    v1_CancelReservationResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: Response schema for the `cancelReservation` operation.
    v1_DayOfWeek:
      type: string
      description: The day of the week.
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
      x-docgen-enum-table-extension:
        - value: MONDAY
          description: Monday.
        - value: TUESDAY
          description: Tuesday.
        - value: WEDNESDAY
          description: Wednesday.
        - value: THURSDAY
          description: Thursday.
        - value: FRIDAY
          description: Friday.
        - value: SATURDAY
          description: Saturday.
        - value: SUNDAY
          description: Sunday.
    v1_Recurrence:
      required:
        - endTime
      type: object
      properties:
        endTime:
          type: string
          description: End time of the recurrence.
          format: date-time
        daysOfWeek:
          type: array
          description: >-
            Days of the week when recurrence is valid. If the schedule is valid
            every Monday, input will only contain `MONDAY` in the list.
          items:
            $ref: '#/components/schemas/v1_DayOfWeek'
        daysOfMonth:
          type: array
          description: Days of the month when recurrence is valid.
          items:
            maximum: 31
            minimum: 1
            type: integer
      description: Repeated occurrence of an event in a time range.
    v1_AvailabilityRecord:
      required:
        - endTime
        - startTime
      type: object
      properties:
        startTime:
          type: string
          description: >-
            Denotes the time from when the resource is available in a day in
            ISO-8601 format.
          format: date-time
        endTime:
          type: string
          description: >-
            Denotes the time till when the resource is available in a day in
            ISO-8601 format.
          format: date-time
        recurrence:
          $ref: '#/components/schemas/v1_Recurrence'
        capacity:
          minimum: 1
          type: integer
          description: Signifies the capacity of a resource which is available.
      description: >-
        `AvailabilityRecord` to represent the capacity of a resource over a time
        range.
    v1_AvailabilityRecords:
      type: array
      description: >-
        List of `AvailabilityRecord`s to represent the capacity of a resource
        over a time range.
      items:
        $ref: '#/components/schemas/v1_AvailabilityRecord'
    v1_Reservation:
      required:
        - availability
        - type
      type: object
      properties:
        reservationId:
          type: string
          description: >-
            Unique identifier for a reservation. If present, it is treated as an
            update reservation request and will update the corresponding
            reservation. Otherwise, it is treated as a new create reservation
            request.
        type:
          type: string
          description: Type of reservation.
          enum:
            - APPOINTMENT
            - TRAVEL
            - VACATION
            - BREAK
            - TRAINING
          x-docgen-enum-table-extension:
            - value: APPOINTMENT
              description: Reduce resource (store) capacity because of an appointment.
            - value: TRAVEL
              description: >-
                Reduce resource (store) capacity because technician(s) are
                travelling.
            - value: VACATION
              description: >-
                Reduce resource (store) capacity because technician(s) are on
                vacation.
            - value: BREAK
              description: >-
                Reduce resource (store) capacity because technician(s) are on
                break.
            - value: TRAINING
              description: >-
                Reduce resource (store) capacity because technician(s) are in
                training.
        availability:
          $ref: '#/components/schemas/v1_AvailabilityRecord'
      description: Reservation object reduces the capacity of a resource.
    v1_UpdateScheduleRecord:
      type: object
      properties:
        availability:
          $ref: '#/components/schemas/v1_AvailabilityRecord'
        warnings:
          $ref: '#/components/schemas/v1_WarningList'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: >-
        `UpdateScheduleRecord` entity contains the `AvailabilityRecord` if there
        is an error/warning while performing the requested operation on it.
    v1_CreateReservationRecord:
      type: object
      properties:
        reservation:
          $ref: '#/components/schemas/v1_Reservation'
        warnings:
          $ref: '#/components/schemas/v1_WarningList'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: >-
        `CreateReservationRecord` entity contains the `Reservation` if there is
        an error/warning while performing the requested operation on it,
        otherwise it will contain the new `reservationId`.
    v1_UpdateReservationRecord:
      type: object
      properties:
        reservation:
          $ref: '#/components/schemas/v1_Reservation'
        warnings:
          $ref: '#/components/schemas/v1_WarningList'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: >-
        `UpdateReservationRecord` entity contains the `Reservation` if there is
        an error/warning while performing the requested operation on it,
        otherwise it will contain the new `reservationId`.
    v1_RangeSlotCapacityQuery:
      required:
        - endDateTime
        - startDateTime
      type: object
      properties:
        capacityTypes:
          type: array
          description: >-
            An array of capacity types which are being requested. Default value
            is `[SCHEDULED_CAPACITY]`.
          items:
            $ref: '#/components/schemas/v1_CapacityType'
        startDateTime:
          type: string
          description: >-
            Start date time from which the capacity slots are being requested in
            ISO 8601 format.
          format: date-time
        endDateTime:
          type: string
          description: >-
            End date time up to which the capacity slots are being requested in
            ISO 8601 format.
          format: date-time
      description: >-
        Request schema for the `getRangeSlotCapacity` operation. This schema is
        used to define the time range and capacity types that are being queried.
    v1_FixedSlotCapacityQuery:
      required:
        - endDateTime
        - startDateTime
      type: object
      properties:
        capacityTypes:
          type: array
          description: >-
            An array of capacity types which are being requested. Default value
            is `[SCHEDULED_CAPACITY]`.
          items:
            $ref: '#/components/schemas/v1_CapacityType'
        slotDuration:
          multipleOf: 5
          type: number
          description: >-
            Size in which slots are being requested. This value should be a
            multiple of 5 and fall in the range: 5 <= `slotDuration` <= 360.
          format: int32
        startDateTime:
          type: string
          description: >-
            Start date time from which the capacity slots are being requested in
            ISO 8601 format.
          format: date-time
        endDateTime:
          type: string
          description: >-
            End date time up to which the capacity slots are being requested in
            ISO 8601 format.
          format: date-time
      description: >-
        Request schema for the `getFixedSlotCapacity` operation. This schema is
        used to define the time range, capacity types and slot duration which
        are being queried.
    v1_UpdateScheduleRequest:
      required:
        - schedules
      type: object
      properties:
        schedules:
          $ref: '#/components/schemas/v1_AvailabilityRecords'
      description: Request schema for the `updateSchedule` operation.
    v1_CapacityType:
      type: string
      description: Type of capacity
      enum:
        - SCHEDULED_CAPACITY
        - AVAILABLE_CAPACITY
        - ENCUMBERED_CAPACITY
        - RESERVED_CAPACITY
      x-docgen-enum-table-extension:
        - description: >-
            This capacity represents the originally allocated capacity as per
            resource schedule.
          value: SCHEDULED_CAPACITY
        - description: >-
            This capacity represents the capacity available for allocation to
            reservations.
          value: AVAILABLE_CAPACITY
        - description: >-
            This capacity represents the capacity allocated for Amazon
            Jobs/Appointments/Orders.
          value: ENCUMBERED_CAPACITY
        - description: >-
            This capacity represents the capacity made unavailable due to events
            like Breaks/Leaves/Lunch.
          value: RESERVED_CAPACITY
    v1_CreateReservationRequest:
      required:
        - reservation
        - resourceId
      type: object
      properties:
        resourceId:
          type: string
          description: Resource (store) identifier.
        reservation:
          $ref: '#/components/schemas/v1_Reservation'
      description: Request schema for the `createReservation` operation.
    v1_UpdateReservationRequest:
      required:
        - reservation
        - resourceId
      type: object
      properties:
        resourceId:
          type: string
          description: Resource (store) identifier.
        reservation:
          $ref: '#/components/schemas/v1_Reservation'
      description: Request schema for the `updateReservation` operation.
    v1_GetAppointmentSlotsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_AppointmentSlotReport'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: The response of fetching appointment slots based on service context.
    v1_AppointmentSlotReport:
      type: object
      properties:
        schedulingType:
          type: string
          description: Defines the type of slots.
          enum:
            - REAL_TIME_SCHEDULING
            - NON_REAL_TIME_SCHEDULING
          x-docgen-enum-table-extension:
            - value: REAL_TIME_SCHEDULING
              description: >-
                The slots provided are backed by inventory in inventory
                management system.
            - value: NON_REAL_TIME_SCHEDULING
              description: >-
                The slots provided are based on working hours defined in seller
                management system.
        startTime:
          type: string
          description: >-
            Start Time from which the appointment slots are generated in ISO
            8601 format.
          format: date-time
        endTime:
          type: string
          description: >-
            End Time up to which the appointment slots are generated in ISO 8601
            format.
          format: date-time
        appointmentSlots:
          type: array
          description: >-
            A list of time windows along with associated capacity in which the
            service can be performed.
          items:
            $ref: '#/components/schemas/v1_AppointmentSlot'
      description: Availability information as per the service context queried.
    v1_AppointmentSlot:
      type: object
      properties:
        startTime:
          type: string
          description: Time window start time in ISO 8601 format.
          format: date-time
        endTime:
          type: string
          description: Time window end time in ISO 8601 format.
          format: date-time
        capacity:
          minimum: 0
          type: integer
          description: Number of resources for which a slot can be reserved.
      description: >-
        A time window along with associated capacity in which the service can be
        performed.
    v1_ServiceUploadDocument:
      required:
        - contentLength
        - contentType
      type: object
      properties:
        contentType:
          type: string
          description: The content type of the to-be-uploaded file
          enum:
            - TIFF
            - JPG
            - PNG
            - JPEG
            - GIF
            - PDF
          x-docgen-enum-table-extension:
            - value: TIFF
              description: To be uploaded POA is of type image/tiff.
            - value: JPG
              description: To be uploaded POA is of type image/jpg.
            - value: PNG
              description: To be uploaded POA is of type image/png.
            - value: JPEG
              description: To be uploaded POA is of type image/jpeg.
            - value: GIF
              description: To be uploaded POA is of type image/gif.
            - value: PDF
              description: To be uploaded POA is of type application/pdf.
        contentLength:
          maximum: 5242880
          minimum: 1
          type: number
          description: The content length of the to-be-uploaded file
          format: int64
        contentMD5:
          pattern: ^[A-Za-z0-9\\+/]{22}={2}$
          type: string
          description: >-
            An MD5 hash of the content to be submitted to the upload
            destination. This value is used to determine if the data has been
            corrupted or tampered with during transit.
      description: Input for to be uploaded document.
    v1_CreateServiceDocumentUploadDestination:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/v1_ServiceDocumentUploadDestination'
        errors:
          $ref: '#/components/schemas/v1_ErrorList'
      description: >-
        The response schema for the `createServiceDocumentUploadDestination`
        operation.
    v1_ServiceDocumentUploadDestination:
      required:
        - encryptionDetails
        - uploadDestinationId
        - url
      type: object
      properties:
        uploadDestinationId:
          type: string
          description: >-
            The unique identifier to be used by APIs that reference the upload
            destination.
        url:
          type: string
          description: The URL to which to upload the file.
        encryptionDetails:
          $ref: '#/components/schemas/v1_EncryptionDetails'
        headers:
          type: object
          properties: {}
          description: The headers to include in the upload request.
      description: Information about an upload destination.
    v1_EncryptionDetails:
      required:
        - initializationVector
        - key
        - standard
      type: object
      properties:
        standard:
          type: string
          description: >-
            The encryption standard required to encrypt or decrypt the document
            contents.
          enum:
            - AES
          x-docgen-enum-table-extension:
            - value: AES
              description: The Advanced Encryption Standard (AES).
        initializationVector:
          type: string
          description: >-
            The vector to encrypt or decrypt the document contents using Cipher
            Block Chaining (CBC).
        key:
          type: string
          description: The encryption key used to encrypt or decrypt the document contents.
      description: >-
        Encryption details for required client-side encryption and decryption of
        document contents.
    2021-03-01_CreateRestrictedDataTokenRequest:
      required:
        - restrictedResources
      type: object
      properties:
        targetApplication:
          type: string
          description: >-
            The application ID for the target application to which access is
            being delegated.
        restrictedResources:
          type: array
          description: |-
            A list of restricted resources.
            Maximum: 50
          items:
            $ref: '#/components/schemas/2021-03-01_RestrictedResource'
      description: The request schema for the createRestrictedDataToken operation.
    2021-03-01_RestrictedResource:
      required:
        - method
        - path
      type: object
      properties:
        method:
          type: string
          description: The HTTP method in the restricted resource.
          enum:
            - GET
            - PUT
            - POST
            - DELETE
          x-docgen-enum-table-extension:
            - value: GET
              description: The GET method.
            - value: PUT
              description: The PUT method.
            - value: POST
              description: The POST method.
            - value: DELETE
              description: The DELETE method.
        path:
          type: string
          description: >-
            The path in the restricted resource. Here are some path examples:

            - ```/orders/v0/orders```. For getting an RDT for the getOrders
            operation of the Orders API. For bulk orders.

            - ```/orders/v0/orders/123-1234567-1234567```. For getting an RDT
            for the getOrder operation of the Orders API. For a specific order.

            - ```/orders/v0/orders/123-1234567-1234567/orderItems```. For
            getting an RDT for the getOrderItems operation of the Orders API.
            For the order items in a specific order.

            - ```/mfn/v0/shipments/FBA1234ABC5D```. For getting an RDT for the
            getShipment operation of the Shipping API. For a specific shipment.

            - ```/mfn/v0/shipments/{shipmentId}```. For getting an RDT for the
            getShipment operation of the Shipping API. For any of a selling
            partner's shipments that you specify when you call the getShipment
            operation.
        dataElements:
          type: array
          description: >-
            Indicates the type of Personally Identifiable Information requested.
            This parameter is required only when getting an RDT for use with the
            getOrder, getOrders, or getOrderItems operation of the Orders API.
            For more information, see the [Tokens API Use Case
            Guide](doc:tokens-api-use-case-guide). Possible values include:

            - **buyerInfo**. On the order level this includes general
            identifying information about the buyer and tax-related information.
            On the order item level this includes gift wrap information and
            custom order information, if available.

            - **shippingAddress**. This includes information for fulfilling
            orders.

            - **buyerTaxInformation**. This includes information for issuing tax
            invoices.
          items:
            type: string
      description: Model of a restricted resource.
    2021-03-01_CreateRestrictedDataTokenResponse:
      type: object
      properties:
        restrictedDataToken:
          type: string
          description: >-
            A Restricted Data Token (RDT). This is a short-lived access token
            that authorizes calls to restricted operations. Pass this value with
            the x-amz-access-token header when making subsequent calls to these
            restricted resources.
        expiresIn:
          type: integer
          description: The lifetime of the Restricted Data Token, in seconds.
      description: The response schema for the createRestrictedDataToken operation.
    2021-03-01_Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: A message that describes the error condition.
        details:
          type: string
          description: >-
            Additional details that can help the caller understand or fix the
            issue.
      description: An error response returned when the request is unsuccessful.
    2021-03-01_ErrorList:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/2021-03-01_Error'
      description: A list of error responses returned when a request is unsuccessful.
  parameters:
    v1_NotificationType:
      name: notificationType
      in: path
      description: |-
        The type of notification.

         For more information about notification types, see [the Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
      required: true
      schema:
        type: string
x-tagGroups:
  - name: authorization
    tags:
      - authorization_authorization
  - name: catalogItems
    tags:
      - catalogItems_catalog
  - name: finances
    tags:
      - finances_other
  - name: listingsItems
    tags:
      - listingsItems_listings
  - name: listingsRestrictions
    tags:
      - listingsRestrictions_listings
  - name: notifications
    tags:
      - notifications_notifications
  - name: orders
    tags:
      - orders_ordersV0
      - orders_shipment
  - name: productFees
    tags:
      - productFees_fees
  - name: productPricing
    tags:
      - productPricing_productPricing
  - name: reports
    tags:
      - reports_reports
  - name: sales
    tags:
      - sales_sales
  - name: sellers
    tags:
      - sellers_sellers
  - name: services
    tags:
      - services_service
  - name: tokens
    tags:
      - tokens_tokens
